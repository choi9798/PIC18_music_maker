

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Jan 13 08:36:48 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69  0000                     
    70                           ; Version 1.44
    71                           ; Generated 14/09/2017 GMT
    72                           ; 
    73                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F4520 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     _TMR1	set	4046
   105  0000                     _LATBbits	set	3978
   106  0000                     _LATDbits	set	3980
   107  0000                     _OSCCONbits	set	4051
   108  0000                     _T1CONbits	set	4045
   109  0000                     _T2CONbits	set	4042
   110  0000                     _CCP1CONbits	set	4029
   111  0000                     _CCPR1L	set	4030
   112  0000                     _PR2	set	4043
   113  0000                     _LATB	set	3978
   114  0000                     _LATD	set	3980
   115  0000                     _TRISBbits	set	3987
   116  0000                     _TRISDbits	set	3989
   117  0000                     _ADCON0bits	set	4034
   118  0000                     _ADRESL	set	4035
   119  0000                     _ADRESH	set	4036
   120  0000                     _ADCON2bits	set	4032
   121  0000                     _ADCON1	set	4033
   122  0000                     _TRISA	set	3986
   123  0000                     _CCP1CON	set	4029
   124  0000                     _INTCONbits	set	4082
   125  0000                     _RCONbits	set	4048
   126  0000                     _RCREG	set	4014
   127  0000                     _TXREG	set	4013
   128  0000                     _IPR1bits	set	3999
   129  0000                     _PIE1bits	set	3997
   130  0000                     _PIR1bits	set	3998
   131  0000                     _RCSTAbits	set	4011
   132  0000                     _SPBRG	set	4015
   133  0000                     _BAUDCONbits	set	4024
   134  0000                     _TXSTAbits	set	4012
   135  0000                     _TRISCbits	set	3988
   136  0000                     _TMR2ON	set	32338
   137  0000                     _T2CKPS1	set	32337
   138  0000                     _T2CKPS0	set	32336
   139  0000                     _CCP1M2	set	32234
   140  0000                     _CCP1M3	set	32235
   141  0000                     _ADFM	set	32263
   142  0000                     _CREN	set	32092
   143  0000                     _RCIF	set	31989
   144  0000                     _IRCF0	set	32412
   145  0000                     _IRCF1	set	32413
   146  0000                     _IRCF2	set	32414
   147                           
   148                           	psect	smallconst
   149  000600                     __psmallconst:
   150                           	opt stack 0
   151  000600  00                 	db	0
   152  000601                     STR_26:
   153  000601  2D                 	db	45
   154  000602  2D                 	db	45
   155  000603  2D                 	db	45
   156  000604  4D                 	db	77	;'M'
   157  000605  61                 	db	97	;'a'
   158  000606  69                 	db	105	;'i'
   159  000607  6E                 	db	110	;'n'
   160  000608  2D                 	db	45
   161  000609  2D                 	db	45
   162  00060A  2D                 	db	45
   163  00060B  00                 	db	0
   164  00060C                     STR_11:
   165  00060C  50                 	db	80	;'P'
   166  00060D  00                 	db	0
   167  00060E                     STR_12:
   168  00060E  51                 	db	81	;'Q'
   169  00060F  00                 	db	0
   170  000610                     STR_10:
   171  000610  53                 	db	83	;'S'
   172  000611  00                 	db	0
   173  000612                     STR_1:
   174  000612  58                 	db	88	;'X'
   175  000613  00                 	db	0
   176  0000                     
   177                           ; #config settings
   178  000614  00                 	db	0	; dummy byte at the end
   179  0000                     
   180                           	psect	cinit
   181  0031F8                     __pcinit:
   182                           	opt stack 0
   183  0031F8                     start_initialization:
   184                           	opt stack 0
   185  0031F8                     __initialization:
   186                           	opt stack 0
   187                           
   188                           ; Clear objects allocated to BANK2 (16 bytes)
   189  0031F8  EE02  F0DC         	lfsr	0,__pbssBANK2
   190  0031FC  0E10               	movlw	16
   191  0031FE                     clear_0:
   192  0031FE  6AEE               	clrf	postinc0,c
   193  003200  06E8               	decf	wreg,f,c
   194  003202  E1FD               	bnz	clear_0
   195                           
   196                           ; Clear objects allocated to BANK1 (10 bytes)
   197  003204  EE01  F029         	lfsr	0,__pbssBANK1
   198  003208  0E0A               	movlw	10
   199  00320A                     clear_1:
   200  00320A  6AEE               	clrf	postinc0,c
   201  00320C  06E8               	decf	wreg,f,c
   202  00320E  E1FD               	bnz	clear_1
   203                           
   204                           ; Clear objects allocated to BANK0 (18 bytes)
   205  003210  EE00  F0D3         	lfsr	0,__pbssBANK0
   206  003214  0E12               	movlw	18
   207  003216                     clear_2:
   208  003216  6AEE               	clrf	postinc0,c
   209  003218  06E8               	decf	wreg,f,c
   210  00321A  E1FD               	bnz	clear_2
   211                           
   212                           ; Clear objects allocated to COMRAM (29 bytes)
   213  00321C  EE00  F05C         	lfsr	0,__pbssCOMRAM
   214  003220  0E1D               	movlw	29
   215  003222                     clear_3:
   216  003222  6AEE               	clrf	postinc0,c
   217  003224  06E8               	decf	wreg,f,c
   218  003226  E1FD               	bnz	clear_3
   219  003228                     end_of_initialization:
   220                           	opt stack 0
   221  003228                     __end_of__initialization:
   222                           	opt stack 0
   223  003228  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   224  00322A  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   225  00322C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   226  00322E  6EF8               	movwf	tblptru,c
   227  003230  0100               	movlb	0
   228  003232  EFD6  F016         	goto	_main	;jump to C main() function
   229                           tblptru	equ	0xFF8
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           
   233                           	psect	bssCOMRAM
   234  00005C                     __pbssCOMRAM:
   235                           	opt stack 0
   236  00005C                     _average_print:
   237                           	opt stack 0
   238  00005C                     	ds	5
   239  000061                     _print:
   240                           	opt stack 0
   241  000061                     	ds	5
   242  000066                     _auto_print:
   243                           	opt stack 0
   244  000066                     	ds	5
   245  00006B                     _average:
   246                           	opt stack 0
   247  00006B                     	ds	4
   248  00006F                     _voltage:
   249                           	opt stack 0
   250  00006F                     	ds	4
   251  000073                     _i:
   252                           	opt stack 0
   253  000073                     	ds	2
   254  000075                     _digital:
   255                           	opt stack 0
   256  000075                     	ds	2
   257  000077                     _flag:
   258                           	opt stack 0
   259  000077                     	ds	2
   260                           tblptru	equ	0xFF8
   261                           postinc0	equ	0xFEE
   262                           wreg	equ	0xFE8
   263                           
   264                           	psect	bssBANK0
   265  0000D3                     __pbssBANK0:
   266                           	opt stack 0
   267  0000D3                     strtok@sp:
   268                           	opt stack 0
   269  0000D3                     	ds	2
   270  0000D5                     _current_tone_duration:
   271                           	opt stack 0
   272  0000D5                     	ds	2
   273  0000D7                     _lenStr:
   274                           	opt stack 0
   275  0000D7                     	ds	2
   276  0000D9                     _mystring:
   277                           	opt stack 0
   278  0000D9                     	ds	10
   279  0000E3                     _current_tone:
   280                           	opt stack 0
   281  0000E3                     	ds	2
   282                           tblptru	equ	0xFF8
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286                           	psect	bssBANK1
   287  000129                     __pbssBANK1:
   288                           	opt stack 0
   289  000129                     _str:
   290                           	opt stack 0
   291  000129                     	ds	10
   292                           tblptru	equ	0xFF8
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           
   296                           	psect	bssBANK2
   297  0002DC                     __pbssBANK2:
   298                           	opt stack 0
   299  0002DC                     _v:
   300                           	opt stack 0
   301  0002DC                     	ds	16
   302                           tblptru	equ	0xFF8
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           
   306                           	psect	cstackBANK2
   307  000200                     __pcstackBANK2:
   308                           	opt stack 0
   309  000200                     Music@str1:
   310                           	opt stack 0
   311                           
   312                           ; 50 bytes @ 0x0
   313  000200                     	ds	50
   314  000232                     Music@str2:
   315                           	opt stack 0
   316                           
   317                           ; 50 bytes @ 0x32
   318  000232                     	ds	50
   319  000264                     Music@str3:
   320                           	opt stack 0
   321                           
   322                           ; 50 bytes @ 0x64
   323  000264                     	ds	50
   324  000296                     Music@str4:
   325                           	opt stack 0
   326                           
   327                           ; 50 bytes @ 0x96
   328  000296                     	ds	50
   329  0002C8                     Music@number:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0xC8
   333  0002C8                     	ds	2
   334  0002CA                     Music@tempo:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0xCA
   338  0002CA                     	ds	2
   339  0002CC                     Music@melody1:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0xCC
   343  0002CC                     	ds	2
   344  0002CE                     Music@melody3:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0xCE
   348  0002CE                     	ds	2
   349  0002D0                     Music@melody2:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0xD0
   353  0002D0                     	ds	2
   354  0002D2                     Music@melody4:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0xD2
   358  0002D2                     	ds	2
   359  0002D4                     Music@i:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0xD4
   363  0002D4                     	ds	2
   364  0002D6                     Music@i_1368:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0xD6
   368  0002D6                     	ds	2
   369  0002D8                     Music@i_1373:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0xD8
   373  0002D8                     	ds	2
   374  0002DA                     Music@i_1378:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0xDA
   378  0002DA                     	ds	2
   379                           tblptru	equ	0xFF8
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           
   383                           	psect	cstackBANK1
   384  000100                     __pcstackBANK1:
   385                           	opt stack 0
   386  000100                     ___fldiv@sign:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x0
   390  000100                     	ds	1
   391  000101                     ___fldiv@rem:
   392                           	opt stack 0
   393                           
   394                           ; 4 bytes @ 0x1
   395  000101                     	ds	4
   396  000105                     ___fldiv@new_exp:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x5
   400  000105                     	ds	2
   401  000107                     ___fldiv@grs:
   402                           	opt stack 0
   403                           
   404                           ; 4 bytes @ 0x7
   405  000107                     	ds	4
   406  00010B                     ___fldiv@bexp:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0xB
   410  00010B                     	ds	1
   411  00010C                     ___fldiv@aexp:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0xC
   415  00010C                     	ds	1
   416  00010D                     ___flmul@sign:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0xD
   420  00010D                     	ds	1
   421  00010E                     ___flmul@aexp:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0xE
   425  00010E                     	ds	1
   426  00010F                     ___flmul@grs:
   427                           	opt stack 0
   428                           
   429                           ; 4 bytes @ 0xF
   430  00010F                     	ds	4
   431  000113                     ___flmul@bexp:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x13
   435  000113                     	ds	1
   436  000114                     ___flmul@prod:
   437                           	opt stack 0
   438                           
   439                           ; 4 bytes @ 0x14
   440  000114                     	ds	4
   441  000118                     ___flmul@temp:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x18
   445  000118                     	ds	2
   446  00011A                     ?___fltol:
   447                           	opt stack 0
   448  00011A                     ___fltol@f1:
   449                           	opt stack 0
   450                           
   451                           ; 4 bytes @ 0x1A
   452  00011A                     	ds	4
   453  00011E                     ??___fltol:
   454                           
   455                           ; 1 bytes @ 0x1E
   456  00011E                     	ds	4
   457  000122                     ___fltol@sign1:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x22
   461  000122                     	ds	1
   462  000123                     ___fltol@exp1:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x23
   466  000123                     	ds	1
   467  000124                     MusicPWM1_Duty@duty:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x24
   471  000124                     	ds	2
   472  000126                     ??_MusicPWM1_Duty:
   473                           
   474                           ; 1 bytes @ 0x26
   475  000126                     	ds	2
   476  000128                     
   477                           ; 1 bytes @ 0x28
   478  000128                     	ds	1
   479                           tblptru	equ	0xFF8
   480                           postinc0	equ	0xFEE
   481                           wreg	equ	0xFE8
   482                           
   483                           	psect	cstackBANK0
   484  000080                     __pcstackBANK0:
   485                           	opt stack 0
   486  000080                     ?___awmod:
   487                           	opt stack 0
   488  000080                     i1UART_Write@data:
   489                           	opt stack 0
   490  000080                     ___awmod@dividend:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x0
   494  000080                     	ds	2
   495  000082                     ___awmod@divisor:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x2
   499  000082                     	ds	2
   500  000084                     ___awmod@counter:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x4
   504  000084                     	ds	1
   505  000085                     ___awmod@sign:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x5
   509  000085                     	ds	1
   510  000086                     ??_Lo_ISR:
   511                           
   512                           ; 1 bytes @ 0x6
   513  000086                     	ds	21
   514  00009B                     ??_isdigit:
   515  00009B                     ?_GetString:
   516                           	opt stack 0
   517  00009B                     ?_strlen:
   518                           	opt stack 0
   519  00009B                     ?_strchr:
   520                           	opt stack 0
   521  00009B                     ?___wmul:
   522                           	opt stack 0
   523  00009B                     ?___awdiv:
   524                           	opt stack 0
   525  00009B                     ?___aldiv:
   526                           	opt stack 0
   527  00009B                     UART_Write@data:
   528                           	opt stack 0
   529  00009B                     ClearBuffer@i:
   530                           	opt stack 0
   531  00009B                     ___wmul@multiplier:
   532                           	opt stack 0
   533  00009B                     ___awdiv@dividend:
   534                           	opt stack 0
   535  00009B                     strchr@ptr:
   536                           	opt stack 0
   537  00009B                     strlen@s:
   538                           	opt stack 0
   539  00009B                     ___aldiv@dividend:
   540                           	opt stack 0
   541                           
   542                           ; 4 bytes @ 0x1B
   543  00009B                     	ds	1
   544  00009C                     _isdigit$1618:
   545                           	opt stack 0
   546  00009C                     UART_Write_Text@text:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x1C
   550  00009C                     	ds	1
   551  00009D                     ??_strlen:
   552  00009D                     isdigit@c:
   553                           	opt stack 0
   554  00009D                     ___wmul@multiplicand:
   555                           	opt stack 0
   556  00009D                     ___awdiv@divisor:
   557                           	opt stack 0
   558  00009D                     strcpy@to:
   559                           	opt stack 0
   560  00009D                     strchr@chr:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x1D
   564  00009D                     	ds	1
   565  00009E                     ??_UART_Write_Text:
   566                           
   567                           ; 1 bytes @ 0x1E
   568  00009E                     	ds	1
   569  00009F                     ??_strchr:
   570  00009F                     ___awdiv@counter:
   571                           	opt stack 0
   572  00009F                     ___wmul@product:
   573                           	opt stack 0
   574  00009F                     strcpy@from:
   575                           	opt stack 0
   576  00009F                     strlen@cp:
   577                           	opt stack 0
   578  00009F                     ___aldiv@divisor:
   579                           	opt stack 0
   580                           
   581                           ; 4 bytes @ 0x1F
   582  00009F                     	ds	1
   583  0000A0                     ___awdiv@sign:
   584                           	opt stack 0
   585  0000A0                     UART_Write_Text@i:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x20
   589  0000A0                     	ds	1
   590  0000A1                     ?_atoi:
   591                           	opt stack 0
   592  0000A1                     ?_strncmp:
   593                           	opt stack 0
   594  0000A1                     ?_strspn:
   595                           	opt stack 0
   596  0000A1                     ?_strcspn:
   597                           	opt stack 0
   598  0000A1                     atoi@s:
   599                           	opt stack 0
   600  0000A1                     ___awdiv@quotient:
   601                           	opt stack 0
   602  0000A1                     strcpy@cp:
   603                           	opt stack 0
   604  0000A1                     strcspn@s1:
   605                           	opt stack 0
   606  0000A1                     strncmp@s1:
   607                           	opt stack 0
   608  0000A1                     strspn@s1:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x21
   612  0000A1                     	ds	2
   613  0000A3                     ??_atoi:
   614  0000A3                     ___aldiv@counter:
   615                           	opt stack 0
   616  0000A3                     delay_ms@milliseconds:
   617                           	opt stack 0
   618  0000A3                     strcspn@s2:
   619                           	opt stack 0
   620  0000A3                     strncmp@s2:
   621                           	opt stack 0
   622  0000A3                     strspn@s2:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x23
   626  0000A3                     	ds	1
   627  0000A4                     ___aldiv@sign:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x24
   631  0000A4                     	ds	1
   632  0000A5                     ??_strspn:
   633  0000A5                     ??_strcspn:
   634  0000A5                     atoi@sign:
   635                           	opt stack 0
   636  0000A5                     strncmp@len:
   637                           	opt stack 0
   638  0000A5                     ___aldiv@quotient:
   639                           	opt stack 0
   640                           
   641                           ; 4 bytes @ 0x25
   642  0000A5                     	ds	1
   643  0000A6                     atoi@a:
   644                           	opt stack 0
   645  0000A6                     strcspn@i:
   646                           	opt stack 0
   647  0000A6                     strspn@i:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x26
   651  0000A6                     	ds	1
   652  0000A7                     ??_strncmp:
   653                           
   654                           ; 1 bytes @ 0x27
   655  0000A7                     	ds	1
   656  0000A8                     ?_strtok:
   657                           	opt stack 0
   658  0000A8                     strtok@s1:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x28
   662  0000A8                     	ds	1
   663  0000A9                     ?_MusicPWM_Max_Duty:
   664                           	opt stack 0
   665  0000A9                     MusicPWM1_Init@desired_frequency:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0x29
   669  0000A9                     	ds	1
   670  0000AA                     ?_strstr:
   671                           	opt stack 0
   672  0000AA                     strstr@s1:
   673                           	opt stack 0
   674  0000AA                     strtok@s2:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x2A
   678  0000AA                     	ds	1
   679  0000AB                     ??_MusicPWM_Max_Duty:
   680                           
   681                           ; 1 bytes @ 0x2B
   682  0000AB                     	ds	1
   683  0000AC                     strstr@s2:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x2C
   687  0000AC                     	ds	1
   688  0000AD                     ??_MusicPWM1_Init:
   689  0000AD                     ?___xxtofl:
   690                           	opt stack 0
   691  0000AD                     ___xxtofl@val:
   692                           	opt stack 0
   693                           
   694                           ; 4 bytes @ 0x2D
   695  0000AD                     	ds	1
   696  0000AE                     
   697                           ; 1 bytes @ 0x2E
   698  0000AE                     	ds	3
   699  0000B1                     ??___xxtofl:
   700                           
   701                           ; 1 bytes @ 0x31
   702  0000B1                     	ds	4
   703  0000B5                     ___xxtofl@sign:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x35
   707  0000B5                     	ds	1
   708  0000B6                     ___xxtofl@exp:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x36
   712  0000B6                     	ds	1
   713  0000B7                     ___xxtofl@arg:
   714                           	opt stack 0
   715                           
   716                           ; 4 bytes @ 0x37
   717  0000B7                     	ds	4
   718  0000BB                     ?___fldiv:
   719                           	opt stack 0
   720  0000BB                     ___fldiv@b:
   721                           	opt stack 0
   722                           
   723                           ; 4 bytes @ 0x3B
   724  0000BB                     	ds	4
   725  0000BF                     ___fldiv@a:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0x3F
   729  0000BF                     	ds	4
   730  0000C3                     ??___fldiv:
   731                           
   732                           ; 1 bytes @ 0x43
   733  0000C3                     	ds	4
   734  0000C7                     ?___flmul:
   735                           	opt stack 0
   736  0000C7                     ___flmul@b:
   737                           	opt stack 0
   738                           
   739                           ; 4 bytes @ 0x47
   740  0000C7                     	ds	4
   741  0000CB                     ___flmul@a:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x4B
   745  0000CB                     	ds	4
   746  0000CF                     ??___flmul:
   747                           
   748                           ; 1 bytes @ 0x4F
   749  0000CF                     	ds	4
   750  0000D3                     tblptru	equ	0xFF8
   751                           postinc0	equ	0xFEE
   752                           wreg	equ	0xFE8
   753                           
   754                           ; 1 bytes @ 0x53
   755                           
   756                           	psect	cstackCOMRAM
   757  000001                     __pcstackCOMRAM:
   758                           	opt stack 0
   759  000001                     ?_ADC_Read:
   760                           	opt stack 0
   761  000001                     ?i2___xxtofl:
   762                           	opt stack 0
   763  000001                     ADC_Read@channel:
   764                           	opt stack 0
   765  000001                     PWM1_Duty@duty:
   766                           	opt stack 0
   767  000001                     i2___xxtofl@val:
   768                           	opt stack 0
   769                           
   770                           ; 4 bytes @ 0x0
   771  000001                     	ds	2
   772  000003                     ??_PWM1_Duty:
   773  000003                     ??_ADC_Read:
   774                           
   775                           ; 1 bytes @ 0x2
   776  000003                     	ds	2
   777  000005                     ??i2___xxtofl:
   778  000005                     ADC_Read@digital:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x4
   782  000005                     	ds	4
   783  000009                     i2___xxtofl@sign:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0x8
   787  000009                     	ds	1
   788  00000A                     i2___xxtofl@exp:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x9
   792  00000A                     	ds	1
   793  00000B                     i2___xxtofl@arg:
   794                           	opt stack 0
   795                           
   796                           ; 4 bytes @ 0xA
   797  00000B                     	ds	4
   798  00000F                     ?i2___flmul:
   799                           	opt stack 0
   800  00000F                     i2___flmul@b:
   801                           	opt stack 0
   802                           
   803                           ; 4 bytes @ 0xE
   804  00000F                     	ds	4
   805  000013                     i2___flmul@a:
   806                           	opt stack 0
   807                           
   808                           ; 4 bytes @ 0x12
   809  000013                     	ds	4
   810  000017                     ??i2___flmul:
   811                           
   812                           ; 1 bytes @ 0x16
   813  000017                     	ds	4
   814  00001B                     i2___flmul@sign:
   815                           	opt stack 0
   816                           
   817                           ; 1 bytes @ 0x1A
   818  00001B                     	ds	1
   819  00001C                     i2___flmul@grs:
   820                           	opt stack 0
   821                           
   822                           ; 4 bytes @ 0x1B
   823  00001C                     	ds	4
   824  000020                     i2___flmul@aexp:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x1F
   828  000020                     	ds	1
   829  000021                     i2___flmul@bexp:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x20
   833  000021                     	ds	1
   834  000022                     i2___flmul@prod:
   835                           	opt stack 0
   836                           
   837                           ; 4 bytes @ 0x21
   838  000022                     	ds	4
   839  000026                     i2___flmul@temp:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x25
   843  000026                     	ds	2
   844  000028                     ?___flneg:
   845                           	opt stack 0
   846  000028                     ___flneg@f1:
   847                           	opt stack 0
   848                           
   849                           ; 4 bytes @ 0x27
   850  000028                     	ds	4
   851  00002C                     ?___fladd:
   852                           	opt stack 0
   853  00002C                     ___fladd@b:
   854                           	opt stack 0
   855                           
   856                           ; 4 bytes @ 0x2B
   857  00002C                     	ds	4
   858  000030                     ___fladd@a:
   859                           	opt stack 0
   860                           
   861                           ; 4 bytes @ 0x2F
   862  000030                     	ds	4
   863  000034                     ??___fladd:
   864                           
   865                           ; 1 bytes @ 0x33
   866  000034                     	ds	8
   867  00003C                     ___fladd@signs:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x3B
   871  00003C                     	ds	1
   872  00003D                     ___fladd@aexp:
   873                           	opt stack 0
   874                           
   875                           ; 1 bytes @ 0x3C
   876  00003D                     	ds	1
   877  00003E                     ___fladd@bexp:
   878                           	opt stack 0
   879                           
   880                           ; 1 bytes @ 0x3D
   881  00003E                     	ds	1
   882  00003F                     ___fladd@grs:
   883                           	opt stack 0
   884                           
   885                           ; 1 bytes @ 0x3E
   886  00003F                     	ds	1
   887  000040                     ?i2___fltol:
   888                           	opt stack 0
   889  000040                     i2___fltol@f1:
   890                           	opt stack 0
   891                           
   892                           ; 4 bytes @ 0x3F
   893  000040                     	ds	4
   894  000044                     ??i2___fltol:
   895                           
   896                           ; 1 bytes @ 0x43
   897  000044                     	ds	4
   898  000048                     i2___fltol@sign1:
   899                           	opt stack 0
   900                           
   901                           ; 1 bytes @ 0x47
   902  000048                     	ds	1
   903  000049                     i2___fltol@exp1:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x48
   907  000049                     	ds	1
   908  00004A                     ??_Hi_ISR:
   909                           
   910                           ; 1 bytes @ 0x49
   911  00004A                     	ds	18
   912                           tblptru	equ	0xFF8
   913                           postinc0	equ	0xFEE
   914                           wreg	equ	0xFE8
   915                           
   916 ;;
   917 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   918 ;;
   919 ;; *************** function _main *****************
   920 ;; Defined at:
   921 ;;		line 717 in file "main.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   935 ;;      Params:         0       0       0       0       0       0       0
   936 ;;      Locals:         0       0       0       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0       0       0
   938 ;;      Totals:         0       0       0       0       0       0       0
   939 ;;Total ram usage:        0 bytes
   940 ;; Hardware stack levels required when called:   10
   941 ;; This function calls:
   942 ;;		_ClearBuffer
   943 ;;		_GetString
   944 ;;		_Music
   945 ;;		_OSCILLATOR_Initialize
   946 ;;		_PORT_Initialize
   947 ;;		_SYSTEM_Initialize
   948 ;;		_UART_Write_Text
   949 ;;		_strcpy
   950 ;;		_strstr
   951 ;; This function is called by:
   952 ;;		Startup code after reset
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text0
   957  002DAC                     __ptext0:
   958                           	opt stack 0
   959  002DAC                     _main:
   960                           	opt stack 21
   961                           
   962                           ;main.c: 719: SYSTEM_Initialize() ;
   963                           
   964                           ;incstack = 0
   965  002DAC  ECE1  F019         	call	_SYSTEM_Initialize	;wreg free
   966                           
   967                           ;main.c: 720: OSCILLATOR_Initialize();
   968  002DB0  EC17  F01A         	call	_OSCILLATOR_Initialize	;wreg free
   969                           
   970                           ;main.c: 721: PORT_Initialize();
   971  002DB4  ECA4  F019         	call	_PORT_Initialize	;wreg free
   972                           
   973                           ;main.c: 723: UART_Write_Text("---Main---");
   974  002DB8  0E01               	movlw	low STR_26
   975  002DBA  0100               	movlb	0	; () banked
   976  002DBC  6F9C               	movwf	UART_Write_Text@text& (0+255),b
   977  002DBE  0E06               	movlw	high STR_26
   978  002DC0  6F9D               	movwf	(UART_Write_Text@text+1)& (0+255),b
   979  002DC2  EC45  F018         	call	_UART_Write_Text	;wreg free
   980  002DC6                     
   981                           ;main.c: 725: strcpy(str, GetString());
   982  002DC6  0E29               	movlw	low _str
   983  002DC8  0100               	movlb	0	; () banked
   984  002DCA  6F9D               	movwf	strcpy@to& (0+255),b
   985  002DCC  0E01               	movlw	high _str
   986  002DCE  6F9E               	movwf	(strcpy@to+1)& (0+255),b
   987  002DD0  EC0D  F01A         	call	_GetString	;wreg free
   988  002DD4  C09B  F09F         	movff	?_GetString,strcpy@from
   989  002DD8  C09C  F0A0         	movff	?_GetString+1,strcpy@from+1
   990  002DDC  EC38  F019         	call	_strcpy	;wreg free
   991                           
   992                           ;main.c: 726: if(strstr (str,"Q")!= (0)){
   993  002DE0  0E29               	movlw	low _str
   994  002DE2  0100               	movlb	0	; () banked
   995  002DE4  6FAA               	movwf	strstr@s1& (0+255),b
   996  002DE6  0E01               	movlw	high _str
   997  002DE8  6FAB               	movwf	(strstr@s1+1)& (0+255),b
   998  002DEA  0E0E               	movlw	low STR_12
   999  002DEC  6FAC               	movwf	strstr@s2& (0+255),b
  1000  002DEE  0E06               	movlw	high STR_12
  1001  002DF0  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  1002  002DF2  EC42  F016         	call	_strstr	;wreg free
  1003  002DF6  0100               	movlb	0	; () banked
  1004  002DF8  51AA               	movf	?_strstr& (0+255),w,b
  1005  002DFA  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  1006  002DFC  B4D8               	btfsc	status,2,c
  1007  002DFE  D003               	goto	l457
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;main.c: 727: ClearBuffer();
  1011  002E00  EC1B  F019         	call	_ClearBuffer	;wreg free
  1012                           
  1013                           ;main.c: 728: }
  1014  002E04  D7E0               	goto	l456
  1015  002E06                     l457:
  1016                           
  1017                           ;main.c: 729: else if(strstr (str,"X")!= (0)){
  1018  002E06  0E29               	movlw	low _str
  1019  002E08  0100               	movlb	0	; () banked
  1020  002E0A  6FAA               	movwf	strstr@s1& (0+255),b
  1021  002E0C  0E01               	movlw	high _str
  1022  002E0E  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  1023  002E10  0E12               	movlw	low STR_1
  1024  002E12  6FAC               	movwf	strstr@s2& (0+255),b
  1025  002E14  0E06               	movlw	high STR_1
  1026  002E16  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  1027  002E18  EC42  F016         	call	_strstr	;wreg free
  1028  002E1C  0100               	movlb	0	; () banked
  1029  002E1E  51AA               	movf	?_strstr& (0+255),w,b
  1030  002E20  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  1031  002E22  B4D8               	btfsc	status,2,c
  1032  002E24  D7D0               	goto	l456
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;main.c: 730: Music();
  1036  002E26  EC0B  F003         	call	_Music	;wreg free
  1037  002E2A  D7CD               	goto	l456
  1038  002E2C                     __end_of_main:
  1039                           	opt stack 0
  1040                           tblptru	equ	0xFF8
  1041                           postinc0	equ	0xFEE
  1042                           wreg	equ	0xFE8
  1043                           status	equ	0xFD8
  1044                           
  1045 ;; *************** function _UART_Write_Text *****************
  1046 ;; Defined at:
  1047 ;;		line 50 in file "setting_hardaware/uart.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  text            2   28[BANK0 ] PTR unsigned char 
  1050 ;;		 -> STR_26(11), 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  i               2   32[BANK0 ] int 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1062 ;;      Params:         0       2       0       0       0       0       0
  1063 ;;      Locals:         0       2       0       0       0       0       0
  1064 ;;      Temps:          0       2       0       0       0       0       0
  1065 ;;      Totals:         0       6       0       0       0       0       0
  1066 ;;Total ram usage:        6 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    6
  1069 ;; This function calls:
  1070 ;;		_UART_Write
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text1
  1077  00308A                     __ptext1:
  1078                           	opt stack 0
  1079  00308A                     _UART_Write_Text:
  1080                           	opt stack 24
  1081                           
  1082                           ;uart.c: 51: for(int i=0;text[i]!='\0';i++)
  1083                           
  1084                           ;incstack = 0
  1085  00308A  0E00               	movlw	0
  1086  00308C  0100               	movlb	0	; () banked
  1087  00308E  6FA1               	movwf	(UART_Write_Text@i+1)& (0+255),b
  1088  003090  0E00               	movlw	0
  1089  003092  6FA0               	movwf	UART_Write_Text@i& (0+255),b
  1090  003094  D011               	goto	l65
  1091  003096                     
  1092                           ; BSR set to: 0
  1093                           ;uart.c: 52: UART_Write(text[i]);
  1094                           
  1095                           ; BSR set to: 0
  1096  003096  51A0               	movf	UART_Write_Text@i& (0+255),w,b
  1097  003098  259C               	addwf	UART_Write_Text@text& (0+255),w,b
  1098  00309A  6F9E               	movwf	??_UART_Write_Text& (0+255),b
  1099  00309C  51A1               	movf	(UART_Write_Text@i+1)& (0+255),w,b
  1100  00309E  219D               	addwfc	(UART_Write_Text@text+1)& (0+255),w,b
  1101  0030A0  6F9F               	movwf	(??_UART_Write_Text+1)& (0+255),b
  1102  0030A2  C09E  FFF6         	movff	??_UART_Write_Text,tblptrl
  1103  0030A6  C09F  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  1104  0030AA                     	if	0	;tblptru may be non-zero
  1105  0030AA                     	endif
  1106  0030AA                     	if	0	;tblptru may be non-zero
  1107  0030AA                     	endif
  1108  0030AA  0008               	tblrd		*
  1109  0030AC  50F5               	movf	tablat,w,c
  1110  0030AE  ECF3  F019         	call	_UART_Write
  1111  0030B2  0100               	movlb	0	; () banked
  1112  0030B4  4BA0               	infsnz	UART_Write_Text@i& (0+255),f,b
  1113  0030B6  2BA1               	incf	(UART_Write_Text@i+1)& (0+255),f,b
  1114  0030B8                     l65:
  1115                           
  1116                           ; BSR set to: 0
  1117                           
  1118                           ; BSR set to: 0
  1119  0030B8  51A0               	movf	UART_Write_Text@i& (0+255),w,b
  1120  0030BA  259C               	addwf	UART_Write_Text@text& (0+255),w,b
  1121  0030BC  6F9E               	movwf	??_UART_Write_Text& (0+255),b
  1122  0030BE  51A1               	movf	(UART_Write_Text@i+1)& (0+255),w,b
  1123  0030C0  219D               	addwfc	(UART_Write_Text@text+1)& (0+255),w,b
  1124  0030C2  6F9F               	movwf	(??_UART_Write_Text+1)& (0+255),b
  1125  0030C4  C09E  FFF6         	movff	??_UART_Write_Text,tblptrl
  1126  0030C8  C09F  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  1127  0030CC                     	if	0	;tblptru may be non-zero
  1128  0030CC                     	endif
  1129  0030CC                     	if	0	;tblptru may be non-zero
  1130  0030CC                     	endif
  1131  0030CC  0008               	tblrd		*
  1132  0030CE  50F5               	movf	tablat,w,c
  1133  0030D0  0900               	iorlw	0
  1134  0030D2  B4D8               	btfsc	status,2,c
  1135  0030D4  0012               	return	
  1136  0030D6  D7DF               	goto	l66
  1137  0030D8                     __end_of_UART_Write_Text:
  1138                           	opt stack 0
  1139                           tblptru	equ	0xFF8
  1140                           tblptrh	equ	0xFF7
  1141                           tblptrl	equ	0xFF6
  1142                           tablat	equ	0xFF5
  1143                           postinc0	equ	0xFEE
  1144                           wreg	equ	0xFE8
  1145                           status	equ	0xFD8
  1146                           
  1147 ;; *************** function _UART_Write *****************
  1148 ;; Defined at:
  1149 ;;		line 40 in file "setting_hardaware/uart.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  data            1    wreg     unsigned char 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  data            1   27[BANK0 ] unsigned char 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1163 ;;      Params:         0       0       0       0       0       0       0
  1164 ;;      Locals:         0       1       0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0
  1166 ;;      Totals:         0       1       0       0       0       0       0
  1167 ;;Total ram usage:        1 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    5
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_UART_Write_Text
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text2
  1178  0033E6                     __ptext2:
  1179                           	opt stack 0
  1180  0033E6                     _UART_Write:
  1181                           	opt stack 24
  1182                           
  1183                           ; BSR set to: 0
  1184                           ;incstack = 0
  1185                           ;UART_Write@data stored from wreg
  1186  0033E6  0100               	movlb	0	; () banked
  1187  0033E8  6F9B               	movwf	UART_Write@data& (0+255),b
  1188  0033EA                     
  1189                           ;uart.c: 42: while(!TXSTAbits.TRMT);
  1190  0033EA  A2AC               	btfss	4012,1,c	;volatile
  1191  0033EC  D7FE               	goto	l3550
  1192                           
  1193                           ;uart.c: 43: TXREG = data;
  1194  0033EE  C09B  FFAD         	movff	UART_Write@data,4013	;volatile
  1195  0033F2  0012               	return		;funcret
  1196  0033F4                     __end_of_UART_Write:
  1197                           	opt stack 0
  1198                           tblptru	equ	0xFF8
  1199                           tblptrh	equ	0xFF7
  1200                           tblptrl	equ	0xFF6
  1201                           tablat	equ	0xFF5
  1202                           postinc0	equ	0xFEE
  1203                           wreg	equ	0xFE8
  1204                           status	equ	0xFD8
  1205                           
  1206 ;; *************** function _SYSTEM_Initialize *****************
  1207 ;; Defined at:
  1208 ;;		line 60 in file "setting_hardaware/setting.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;		None
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg, status,2, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1222 ;;      Params:         0       0       0       0       0       0       0
  1223 ;;      Locals:         0       0       0       0       0       0       0
  1224 ;;      Temps:          0       0       0       0       0       0       0
  1225 ;;      Totals:         0       0       0       0       0       0       0
  1226 ;;Total ram usage:        0 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    6
  1229 ;; This function calls:
  1230 ;;		_ADC_Initialize
  1231 ;;		_CCP1_Initialize
  1232 ;;		_INTERRUPT_Initialize
  1233 ;;		_UART_Initialize
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text3
  1240  0033C2                     __ptext3:
  1241                           	opt stack 0
  1242  0033C2                     _SYSTEM_Initialize:
  1243                           	opt stack 24
  1244                           
  1245                           ;setting.c: 67: INTERRUPT_Initialize();
  1246                           
  1247                           ;incstack = 0
  1248  0033C2  EC13  F01A         	call	_INTERRUPT_Initialize	;wreg free
  1249                           
  1250                           ;setting.c: 68: UART_Initialize();
  1251  0033C6  EC93  F019         	call	_UART_Initialize	;wreg free
  1252                           
  1253                           ;setting.c: 69: CCP1_Initialize();
  1254  0033CA  EC01  F01A         	call	_CCP1_Initialize	;wreg free
  1255                           
  1256                           ;setting.c: 70: ADC_Initialize();
  1257  0033CE  ECD5  F019         	call	_ADC_Initialize	;wreg free
  1258  0033D2  0012               	return		;funcret
  1259  0033D4                     __end_of_SYSTEM_Initialize:
  1260                           	opt stack 0
  1261                           tblptru	equ	0xFF8
  1262                           tblptrh	equ	0xFF7
  1263                           tblptrl	equ	0xFF6
  1264                           tablat	equ	0xFF5
  1265                           postinc0	equ	0xFEE
  1266                           wreg	equ	0xFE8
  1267                           status	equ	0xFD8
  1268                           
  1269 ;; *************** function _UART_Initialize *****************
  1270 ;; Defined at:
  1271 ;;		line 7 in file "setting_hardaware/uart.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;		None
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1285 ;;      Params:         0       0       0       0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0       0
  1288 ;;      Totals:         0       0       0       0       0       0       0
  1289 ;;Total ram usage:        0 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; Hardware stack levels required when called:    5
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_SYSTEM_Initialize
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text4
  1300  003326                     __ptext4:
  1301                           	opt stack 0
  1302  003326                     _UART_Initialize:
  1303                           	opt stack 24
  1304                           
  1305                           ;uart.c: 10: TRISCbits.TRISC6 = 1;
  1306                           
  1307                           ;incstack = 0
  1308  003326  8C94               	bsf	3988,6,c	;volatile
  1309                           
  1310                           ;uart.c: 11: TRISCbits.TRISC7 = 1;
  1311  003328  8E94               	bsf	3988,7,c	;volatile
  1312                           
  1313                           ;uart.c: 22: TXSTAbits.SYNC = 0;
  1314  00332A  98AC               	bcf	4012,4,c	;volatile
  1315                           
  1316                           ;uart.c: 23: BAUDCONbits.BRG16 = 0 ;
  1317  00332C  96B8               	bcf	4024,3,c	;volatile
  1318                           
  1319                           ;uart.c: 24: TXSTAbits.BRGH = 1;
  1320  00332E  84AC               	bsf	4012,2,c	;volatile
  1321                           
  1322                           ;uart.c: 25: SPBRG = 207;
  1323  003330  0ECF               	movlw	207
  1324  003332  6EAF               	movwf	4015,c	;volatile
  1325                           
  1326                           ;uart.c: 28: RCSTAbits.SPEN = 1;
  1327  003334  8EAB               	bsf	4011,7,c	;volatile
  1328                           
  1329                           ;uart.c: 29: PIR1bits.TXIF = 1;
  1330  003336  889E               	bsf	3998,4,c	;volatile
  1331                           
  1332                           ;uart.c: 30: PIR1bits.RCIF = 0;
  1333  003338  9A9E               	bcf	3998,5,c	;volatile
  1334                           
  1335                           ;uart.c: 31: TXSTAbits.TXEN = 1;
  1336  00333A  8AAC               	bsf	4012,5,c	;volatile
  1337                           
  1338                           ;uart.c: 32: RCSTAbits.CREN = 1;
  1339  00333C  88AB               	bsf	4011,4,c	;volatile
  1340                           
  1341                           ;uart.c: 34: PIE1bits.TXIE = 0;
  1342  00333E  989D               	bcf	3997,4,c	;volatile
  1343                           
  1344                           ;uart.c: 35: IPR1bits.TXIP = 0;
  1345  003340  989F               	bcf	3999,4,c	;volatile
  1346                           
  1347                           ;uart.c: 36: PIE1bits.RCIE = 1;
  1348  003342  8A9D               	bsf	3997,5,c	;volatile
  1349                           
  1350                           ;uart.c: 37: IPR1bits.RCIP = 0;
  1351  003344  9A9F               	bcf	3999,5,c	;volatile
  1352  003346  0012               	return		;funcret
  1353  003348                     __end_of_UART_Initialize:
  1354                           	opt stack 0
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           postinc0	equ	0xFEE
  1360                           wreg	equ	0xFE8
  1361                           status	equ	0xFD8
  1362                           
  1363 ;; *************** function _INTERRUPT_Initialize *****************
  1364 ;; Defined at:
  1365 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;		None
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;		None
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		None
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1379 ;;      Params:         0       0       0       0       0       0       0
  1380 ;;      Locals:         0       0       0       0       0       0       0
  1381 ;;      Temps:          0       0       0       0       0       0       0
  1382 ;;      Totals:         0       0       0       0       0       0       0
  1383 ;;Total ram usage:        0 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; Hardware stack levels required when called:    5
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_SYSTEM_Initialize
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text5
  1394  003426                     __ptext5:
  1395                           	opt stack 0
  1396  003426                     _INTERRUPT_Initialize:
  1397                           	opt stack 24
  1398                           
  1399                           ;interrupt_manager.c: 5: RCONbits.IPEN = 1;
  1400                           
  1401                           ;incstack = 0
  1402  003426  8ED0               	bsf	4048,7,c	;volatile
  1403                           
  1404                           ;interrupt_manager.c: 6: INTCONbits.GIEH = 1;
  1405  003428  8EF2               	bsf	intcon,7,c	;volatile
  1406                           
  1407                           ;interrupt_manager.c: 7: INTCONbits.GIEL = 1;
  1408  00342A  8CF2               	bsf	intcon,6,c	;volatile
  1409  00342C  0012               	return		;funcret
  1410  00342E                     __end_of_INTERRUPT_Initialize:
  1411                           	opt stack 0
  1412                           tblptru	equ	0xFF8
  1413                           tblptrh	equ	0xFF7
  1414                           tblptrl	equ	0xFF6
  1415                           tablat	equ	0xFF5
  1416                           intcon	equ	0xFF2
  1417                           postinc0	equ	0xFEE
  1418                           wreg	equ	0xFE8
  1419                           status	equ	0xFD8
  1420                           
  1421 ;; *************** function _CCP1_Initialize *****************
  1422 ;; Defined at:
  1423 ;;		line 3 in file "setting_hardaware/ccp1.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, status,2
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1437 ;;      Params:         0       0       0       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0
  1440 ;;      Totals:         0       0       0       0       0       0       0
  1441 ;;Total ram usage:        0 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; Hardware stack levels required when called:    5
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_SYSTEM_Initialize
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text6
  1452  003402                     __ptext6:
  1453                           	opt stack 0
  1454  003402                     _CCP1_Initialize:
  1455                           	opt stack 24
  1456                           
  1457                           ;ccp1.c: 4: TRISCbits.TRISC2=0;
  1458                           
  1459                           ;incstack = 0
  1460  003402  9494               	bcf	3988,2,c	;volatile
  1461                           
  1462                           ;ccp1.c: 5: CCP1CON=9;
  1463  003404  0E09               	movlw	9
  1464  003406  6EBD               	movwf	4029,c	;volatile
  1465                           
  1466                           ;ccp1.c: 6: PIR1bits.CCP1IF=0;
  1467  003408  949E               	bcf	3998,2,c	;volatile
  1468                           
  1469                           ;ccp1.c: 7: IPR1bits.CCP1IP = 1;
  1470  00340A  849F               	bsf	3999,2,c	;volatile
  1471  00340C  0012               	return		;funcret
  1472  00340E                     __end_of_CCP1_Initialize:
  1473                           	opt stack 0
  1474                           tblptru	equ	0xFF8
  1475                           tblptrh	equ	0xFF7
  1476                           tblptrl	equ	0xFF6
  1477                           tablat	equ	0xFF5
  1478                           intcon	equ	0xFF2
  1479                           postinc0	equ	0xFEE
  1480                           wreg	equ	0xFE8
  1481                           status	equ	0xFD8
  1482                           
  1483 ;; *************** function _ADC_Initialize *****************
  1484 ;; Defined at:
  1485 ;;		line 3 in file "setting_hardaware/adc.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1499 ;;      Params:         0       0       0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    5
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_SYSTEM_Initialize
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text7
  1514  0033AA                     __ptext7:
  1515                           	opt stack 0
  1516  0033AA                     _ADC_Initialize:
  1517                           	opt stack 24
  1518                           
  1519                           ;adc.c: 4: TRISA = 0xff;
  1520                           
  1521                           ;incstack = 0
  1522  0033AA  6892               	setf	3986,c	;volatile
  1523                           
  1524                           ;adc.c: 5: ADCON1 = 0x0e;
  1525  0033AC  0E0E               	movlw	14
  1526  0033AE  6EC1               	movwf	4033,c	;volatile
  1527                           
  1528                           ;adc.c: 7: ADFM = 1 ;
  1529  0033B0  8EC0               	bsf	4032,7,c	;volatile
  1530                           
  1531                           ;adc.c: 8: ADCON2bits.ADCS = 7;
  1532  0033B2  80C0               	bsf	4032,0,c	;volatile
  1533  0033B4  82C0               	bsf	4032,1,c	;volatile
  1534  0033B6  84C0               	bsf	4032,2,c	;volatile
  1535                           
  1536                           ;adc.c: 9: ADRESH=0;
  1537  0033B8  0E00               	movlw	0
  1538  0033BA  6EC4               	movwf	4036,c	;volatile
  1539                           
  1540                           ;adc.c: 10: ADRESL=0;
  1541  0033BC  0E00               	movlw	0
  1542  0033BE  6EC3               	movwf	4035,c	;volatile
  1543  0033C0  0012               	return		;funcret
  1544  0033C2                     __end_of_ADC_Initialize:
  1545                           	opt stack 0
  1546                           tblptru	equ	0xFF8
  1547                           tblptrh	equ	0xFF7
  1548                           tblptrl	equ	0xFF6
  1549                           tablat	equ	0xFF5
  1550                           intcon	equ	0xFF2
  1551                           postinc0	equ	0xFEE
  1552                           wreg	equ	0xFE8
  1553                           status	equ	0xFD8
  1554                           
  1555 ;; *************** function _PORT_Initialize *****************
  1556 ;; Defined at:
  1557 ;;		line 66 in file "main.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg, status,2
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1571 ;;      Params:         0       0       0       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0
  1574 ;;      Totals:         0       0       0       0       0       0       0
  1575 ;;Total ram usage:        0 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    5
  1578 ;; This function calls:
  1579 ;;		Nothing
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text8
  1586  003348                     __ptext8:
  1587                           	opt stack 0
  1588  003348                     _PORT_Initialize:
  1589                           	opt stack 25
  1590                           
  1591                           ;main.c: 68: TRISDbits.RD0 = 0;
  1592                           
  1593                           ;incstack = 0
  1594  003348  9095               	bcf	3989,0,c	;volatile
  1595                           
  1596                           ;main.c: 69: TRISDbits.RD1 = 0;
  1597  00334A  9295               	bcf	3989,1,c	;volatile
  1598                           
  1599                           ;main.c: 70: TRISDbits.RD2 = 0;
  1600  00334C  9495               	bcf	3989,2,c	;volatile
  1601                           
  1602                           ;main.c: 71: TRISDbits.RD3 = 0;
  1603  00334E  9695               	bcf	3989,3,c	;volatile
  1604                           
  1605                           ;main.c: 72: TRISDbits.RD4 = 0;
  1606  003350  9895               	bcf	3989,4,c	;volatile
  1607                           
  1608                           ;main.c: 73: TRISDbits.RD5 = 0;
  1609  003352  9A95               	bcf	3989,5,c	;volatile
  1610                           
  1611                           ;main.c: 74: TRISDbits.RD6 = 0;
  1612  003354  9C95               	bcf	3989,6,c	;volatile
  1613                           
  1614                           ;main.c: 75: TRISDbits.RD7 = 0;
  1615  003356  9E95               	bcf	3989,7,c	;volatile
  1616                           
  1617                           ;main.c: 76: TRISBbits.RB0 = 0;
  1618  003358  9093               	bcf	3987,0,c	;volatile
  1619                           
  1620                           ;main.c: 77: TRISBbits.RB1 = 0;
  1621  00335A  9293               	bcf	3987,1,c	;volatile
  1622                           
  1623                           ;main.c: 78: TRISBbits.RB2 = 0;
  1624  00335C  9493               	bcf	3987,2,c	;volatile
  1625                           
  1626                           ;main.c: 79: TRISBbits.RB3 = 0;
  1627  00335E  9693               	bcf	3987,3,c	;volatile
  1628                           
  1629                           ;main.c: 80: LATD = 0;
  1630  003360  0E00               	movlw	0
  1631  003362  6E8C               	movwf	3980,c	;volatile
  1632                           
  1633                           ;main.c: 81: LATB = 0;
  1634  003364  0E00               	movlw	0
  1635  003366  6E8A               	movwf	3978,c	;volatile
  1636  003368  0012               	return		;funcret
  1637  00336A                     __end_of_PORT_Initialize:
  1638                           	opt stack 0
  1639                           tblptru	equ	0xFF8
  1640                           tblptrh	equ	0xFF7
  1641                           tblptrl	equ	0xFF6
  1642                           tablat	equ	0xFF5
  1643                           intcon	equ	0xFF2
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           status	equ	0xFD8
  1647                           
  1648 ;; *************** function _OSCILLATOR_Initialize *****************
  1649 ;; Defined at:
  1650 ;;		line 73 in file "setting_hardaware/setting.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		None
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1664 ;;      Params:         0       0       0       0       0       0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0
  1667 ;;      Totals:         0       0       0       0       0       0       0
  1668 ;;Total ram usage:        0 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    5
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text9
  1679  00342E                     __ptext9:
  1680                           	opt stack 0
  1681  00342E                     _OSCILLATOR_Initialize:
  1682                           	opt stack 25
  1683                           
  1684                           ;setting.c: 75: IRCF2 = 1;
  1685                           
  1686                           ;incstack = 0
  1687  00342E  8CD3               	bsf	4051,6,c	;volatile
  1688                           
  1689                           ;setting.c: 76: IRCF1 = 1;
  1690  003430  8AD3               	bsf	4051,5,c	;volatile
  1691                           
  1692                           ;setting.c: 77: IRCF0 = 0;
  1693  003432  98D3               	bcf	4051,4,c	;volatile
  1694  003434  0012               	return		;funcret
  1695  003436                     __end_of_OSCILLATOR_Initialize:
  1696                           	opt stack 0
  1697                           tblptru	equ	0xFF8
  1698                           tblptrh	equ	0xFF7
  1699                           tblptrl	equ	0xFF6
  1700                           tablat	equ	0xFF5
  1701                           intcon	equ	0xFF2
  1702                           postinc0	equ	0xFEE
  1703                           wreg	equ	0xFE8
  1704                           status	equ	0xFD8
  1705                           
  1706 ;; *************** function _Music *****************
  1707 ;; Defined at:
  1708 ;;		line 199 in file "main.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;		None
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  i               2  218[BANK2 ] int 
  1713 ;;  i               2  216[BANK2 ] int 
  1714 ;;  i               2  214[BANK2 ] int 
  1715 ;;  i               2  212[BANK2 ] int 
  1716 ;;  str4           50  150[BANK2 ] unsigned char [50]
  1717 ;;  str3           50  100[BANK2 ] unsigned char [50]
  1718 ;;  str2           50   50[BANK2 ] unsigned char [50]
  1719 ;;  str1           50    0[BANK2 ] unsigned char [50]
  1720 ;;  melody4         2  210[BANK2 ] PTR unsigned char 
  1721 ;;		 -> Music@str4(50), Music@str3(50), Music@str2(50), NULL(0), 
  1722 ;;		 -> Music@str1(50), str(10), 
  1723 ;;  melody2         2  208[BANK2 ] PTR unsigned char 
  1724 ;;		 -> Music@str4(50), Music@str3(50), Music@str2(50), NULL(0), 
  1725 ;;		 -> Music@str1(50), str(10), 
  1726 ;;  melody3         2  206[BANK2 ] PTR unsigned char 
  1727 ;;		 -> Music@str4(50), Music@str3(50), Music@str2(50), NULL(0), 
  1728 ;;		 -> Music@str1(50), str(10), 
  1729 ;;  melody1         2  204[BANK2 ] PTR unsigned char 
  1730 ;;		 -> Music@str4(50), Music@str3(50), Music@str2(50), NULL(0), 
  1731 ;;		 -> Music@str1(50), str(10), 
  1732 ;;  tempo           2  202[BANK2 ] int 
  1733 ;;  number          2  200[BANK2 ] PTR unsigned char 
  1734 ;;		 -> Music@str4(50), Music@str3(50), Music@str2(50), NULL(0), 
  1735 ;;		 -> Music@str1(50), str(10), 
  1736 ;;  num             2    0        int 
  1737 ;;  MELODY_LENGT    1    0        unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1747 ;;      Params:         0       0       0       0       0       0       0
  1748 ;;      Locals:         0       0       0     220       0       0       0
  1749 ;;      Temps:          0       0       1       0       0       0       0
  1750 ;;      Totals:         0       0       1     220       0       0       0
  1751 ;;Total ram usage:      221 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    9
  1754 ;; This function calls:
  1755 ;;		_ClearBuffer
  1756 ;;		_GetString
  1757 ;;		_MusicPWM1_Duty
  1758 ;;		_MusicPWM1_Init
  1759 ;;		_MusicPWM1_Start
  1760 ;;		_SetupClock
  1761 ;;		___awdiv
  1762 ;;		___wmul
  1763 ;;		_atoi
  1764 ;;		_delay_ms
  1765 ;;		_playTone
  1766 ;;		_strcpy
  1767 ;;		_strstr
  1768 ;;		_strtok
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text10
  1775  000616                     __ptext10:
  1776                           	opt stack 0
  1777  000616                     _Music:
  1778                           	opt stack 21
  1779                           
  1780                           ;main.c: 201: char *number = strtok(str,"X");
  1781                           
  1782                           ;incstack = 0
  1783  000616  0E29               	movlw	low _str
  1784  000618  0100               	movlb	0	; () banked
  1785  00061A  6FA8               	movwf	strtok@s1& (0+255),b
  1786  00061C  0E01               	movlw	high _str
  1787  00061E  6FA9               	movwf	(strtok@s1+1)& (0+255),b
  1788  000620  0E12               	movlw	low STR_1
  1789  000622  6FAA               	movwf	strtok@s2& (0+255),b
  1790  000624  0E06               	movlw	high STR_1
  1791  000626  6FAB               	movwf	(strtok@s2+1)& (0+255),b
  1792  000628  ECE7  F015         	call	_strtok	;wreg free
  1793  00062C  C0A8  F2C8         	movff	?_strtok,Music@number
  1794  000630  C0A9  F2C9         	movff	?_strtok+1,Music@number+1
  1795                           
  1796                           ;main.c: 202: int tempo = atoi(number);
  1797  000634  C2C8  F0A1         	movff	Music@number,atoi@s
  1798  000638  C2C9  F0A2         	movff	Music@number+1,atoi@s+1
  1799  00063C  ECAC  F014         	call	_atoi	;wreg free
  1800  000640  C0A1  F2CA         	movff	?_atoi,Music@tempo
  1801  000644  C0A2  F2CB         	movff	?_atoi+1,Music@tempo+1
  1802                           
  1803                           ;main.c: 203: tempo = (tempo*15);
  1804  000648  C2CA  F09B         	movff	Music@tempo,___wmul@multiplier
  1805  00064C  C2CB  F09C         	movff	Music@tempo+1,___wmul@multiplier+1
  1806  000650  0E00               	movlw	0
  1807  000652  0100               	movlb	0	; () banked
  1808  000654  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1809  000656  0E0F               	movlw	15
  1810  000658  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  1811  00065A  EC7F  F019         	call	___wmul	;wreg free
  1812  00065E  C09B  F2CA         	movff	?___wmul,Music@tempo
  1813  000662  C09C  F2CB         	movff	?___wmul+1,Music@tempo+1
  1814                           
  1815                           ;main.c: 205: ClearBuffer();
  1816  000666  EC1B  F019         	call	_ClearBuffer	;wreg free
  1817                           
  1818                           ;main.c: 206: int num;
  1819                           ;main.c: 207: char MELODY_LENGTH;
  1820                           ;main.c: 208: char str1[50];
  1821                           ;main.c: 209: char str2[50];
  1822                           ;main.c: 210: char str3[50];
  1823                           ;main.c: 211: char str4[50];
  1824                           ;main.c: 213: SetupClock();
  1825  00066A  ECEA  F019         	call	_SetupClock	;wreg free
  1826                           
  1827                           ;main.c: 214: TRISBbits.RB3 = 0;
  1828  00066E  9693               	bcf	3987,3,c	;volatile
  1829                           
  1830                           ;main.c: 215: TRISCbits.RC2 = 0;
  1831  000670  9494               	bcf	3988,2,c	;volatile
  1832                           
  1833                           ;main.c: 217: MusicPWM1_Init(500);
  1834  000672  0EF4               	movlw	244
  1835  000674  0100               	movlb	0	; () banked
  1836  000676  6FA9               	movwf	MusicPWM1_Init@desired_frequency& (0+255),b
  1837  000678  0E01               	movlw	1
  1838  00067A  6FAA               	movwf	(MusicPWM1_Init@desired_frequency+1)& (0+255),b
  1839  00067C  0E00               	movlw	0
  1840  00067E  6FAB               	movwf	(MusicPWM1_Init@desired_frequency+2)& (0+255),b
  1841  000680  0E00               	movlw	0
  1842  000682  6FAC               	movwf	(MusicPWM1_Init@desired_frequency+3)& (0+255),b
  1843  000684  ECBE  F017         	call	_MusicPWM1_Init	;wreg free
  1844                           
  1845                           ;main.c: 218: MusicPWM1_Duty(0);
  1846  000688  0E00               	movlw	0
  1847  00068A  0101               	movlb	1	; () banked
  1848  00068C  6F25               	movwf	(MusicPWM1_Duty@duty+1)& (0+255),b
  1849  00068E  0E00               	movlw	0
  1850  000690  6F24               	movwf	MusicPWM1_Duty@duty& (0+255),b
  1851  000692  EC5C  F013         	call	_MusicPWM1_Duty	;wreg free
  1852                           
  1853                           ;main.c: 219: MusicPWM1_Start();
  1854  000696  EC07  F01A         	call	_MusicPWM1_Start	;wreg free
  1855  00069A                     
  1856                           ;main.c: 233: {
  1857                           ;main.c: 234: strcpy(str1, GetString());
  1858  00069A  0E00               	movlw	low Music@str1
  1859  00069C  0100               	movlb	0	; () banked
  1860  00069E  6F9D               	movwf	strcpy@to& (0+255),b
  1861  0006A0  0E02               	movlw	high Music@str1
  1862  0006A2  6F9E               	movwf	(strcpy@to+1)& (0+255),b
  1863  0006A4  EC0D  F01A         	call	_GetString	;wreg free
  1864  0006A8  C09B  F09F         	movff	?_GetString,strcpy@from
  1865  0006AC  C09C  F0A0         	movff	?_GetString+1,strcpy@from+1
  1866  0006B0  EC38  F019         	call	_strcpy	;wreg free
  1867                           
  1868                           ;main.c: 235: if(strstr(str1,"X"))
  1869  0006B4  0E00               	movlw	low Music@str1
  1870  0006B6  0100               	movlb	0	; () banked
  1871  0006B8  6FAA               	movwf	strstr@s1& (0+255),b
  1872  0006BA  0E02               	movlw	high Music@str1
  1873  0006BC  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  1874  0006BE  0E12               	movlw	low STR_1
  1875  0006C0  6FAC               	movwf	strstr@s2& (0+255),b
  1876  0006C2  0E06               	movlw	high STR_1
  1877  0006C4  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  1878  0006C6  EC42  F016         	call	_strstr	;wreg free
  1879  0006CA  0100               	movlb	0	; () banked
  1880  0006CC  51AA               	movf	?_strstr& (0+255),w,b
  1881  0006CE  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  1882  0006D0  B4D8               	btfsc	status,2,c
  1883  0006D2  D7E3               	goto	l280
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;main.c: 237: }
  1887                           ;main.c: 238: ClearBuffer();
  1888                           
  1889                           ; BSR set to: 0
  1890                           
  1891                           ; BSR set to: 0
  1892                           
  1893                           ; BSR set to: 0
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;main.c: 236: break;
  1897  0006D4  EC1B  F019         	call	_ClearBuffer	;wreg free
  1898                           
  1899                           ;main.c: 239: char *melody1 = strtok(str1,"X");
  1900  0006D8  0E00               	movlw	low Music@str1
  1901  0006DA  0100               	movlb	0	; () banked
  1902  0006DC  6FA8               	movwf	strtok@s1& (0+255),b
  1903  0006DE  0E02               	movlw	high Music@str1
  1904  0006E0  6FA9               	movwf	(strtok@s1+1)& (0+255),b
  1905  0006E2  0E12               	movlw	low STR_1
  1906  0006E4  6FAA               	movwf	strtok@s2& (0+255),b
  1907  0006E6  0E06               	movlw	high STR_1
  1908  0006E8  6FAB               	movwf	(strtok@s2+1)& (0+255),b
  1909  0006EA  ECE7  F015         	call	_strtok	;wreg free
  1910  0006EE  C0A8  F2CC         	movff	?_strtok,Music@melody1
  1911  0006F2  C0A9  F2CD         	movff	?_strtok+1,Music@melody1+1
  1912  0006F6                     
  1913                           ;main.c: 242: {
  1914                           ;main.c: 243: strcpy(str2, GetString());
  1915  0006F6  0E32               	movlw	low Music@str2
  1916  0006F8  0100               	movlb	0	; () banked
  1917  0006FA  6F9D               	movwf	strcpy@to& (0+255),b
  1918  0006FC  0E02               	movlw	high Music@str2
  1919  0006FE  6F9E               	movwf	(strcpy@to+1)& (0+255),b
  1920  000700  EC0D  F01A         	call	_GetString	;wreg free
  1921  000704  C09B  F09F         	movff	?_GetString,strcpy@from
  1922  000708  C09C  F0A0         	movff	?_GetString+1,strcpy@from+1
  1923  00070C  EC38  F019         	call	_strcpy	;wreg free
  1924                           
  1925                           ;main.c: 244: if(strstr(str2,"X"))
  1926  000710  0E32               	movlw	low Music@str2
  1927  000712  0100               	movlb	0	; () banked
  1928  000714  6FAA               	movwf	strstr@s1& (0+255),b
  1929  000716  0E02               	movlw	high Music@str2
  1930  000718  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  1931  00071A  0E12               	movlw	low STR_1
  1932  00071C  6FAC               	movwf	strstr@s2& (0+255),b
  1933  00071E  0E06               	movlw	high STR_1
  1934  000720  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  1935  000722  EC42  F016         	call	_strstr	;wreg free
  1936  000726  0100               	movlb	0	; () banked
  1937  000728  51AA               	movf	?_strstr& (0+255),w,b
  1938  00072A  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  1939  00072C  B4D8               	btfsc	status,2,c
  1940  00072E  D7E3               	goto	l284
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;main.c: 246: }
  1944                           ;main.c: 247: ClearBuffer();
  1945                           
  1946                           ; BSR set to: 0
  1947                           
  1948                           ; BSR set to: 0
  1949                           
  1950                           ; BSR set to: 0
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;main.c: 245: break;
  1954  000730  EC1B  F019         	call	_ClearBuffer	;wreg free
  1955                           
  1956                           ;main.c: 248: char *melody2 = strtok(str2,"X");
  1957  000734  0E32               	movlw	low Music@str2
  1958  000736  0100               	movlb	0	; () banked
  1959  000738  6FA8               	movwf	strtok@s1& (0+255),b
  1960  00073A  0E02               	movlw	high Music@str2
  1961  00073C  6FA9               	movwf	(strtok@s1+1)& (0+255),b
  1962  00073E  0E12               	movlw	low STR_1
  1963  000740  6FAA               	movwf	strtok@s2& (0+255),b
  1964  000742  0E06               	movlw	high STR_1
  1965  000744  6FAB               	movwf	(strtok@s2+1)& (0+255),b
  1966  000746  ECE7  F015         	call	_strtok	;wreg free
  1967  00074A  C0A8  F2D0         	movff	?_strtok,Music@melody2
  1968  00074E  C0A9  F2D1         	movff	?_strtok+1,Music@melody2+1
  1969  000752                     
  1970                           ;main.c: 250: {
  1971                           ;main.c: 251: strcpy(str3, GetString());
  1972  000752  0E64               	movlw	low Music@str3
  1973  000754  0100               	movlb	0	; () banked
  1974  000756  6F9D               	movwf	strcpy@to& (0+255),b
  1975  000758  0E02               	movlw	high Music@str3
  1976  00075A  6F9E               	movwf	(strcpy@to+1)& (0+255),b
  1977  00075C  EC0D  F01A         	call	_GetString	;wreg free
  1978  000760  C09B  F09F         	movff	?_GetString,strcpy@from
  1979  000764  C09C  F0A0         	movff	?_GetString+1,strcpy@from+1
  1980  000768  EC38  F019         	call	_strcpy	;wreg free
  1981                           
  1982                           ;main.c: 252: if(strstr(str3,"X"))
  1983  00076C  0E64               	movlw	low Music@str3
  1984  00076E  0100               	movlb	0	; () banked
  1985  000770  6FAA               	movwf	strstr@s1& (0+255),b
  1986  000772  0E02               	movlw	high Music@str3
  1987  000774  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  1988  000776  0E12               	movlw	low STR_1
  1989  000778  6FAC               	movwf	strstr@s2& (0+255),b
  1990  00077A  0E06               	movlw	high STR_1
  1991  00077C  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  1992  00077E  EC42  F016         	call	_strstr	;wreg free
  1993  000782  0100               	movlb	0	; () banked
  1994  000784  51AA               	movf	?_strstr& (0+255),w,b
  1995  000786  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  1996  000788  B4D8               	btfsc	status,2,c
  1997  00078A  D7E3               	goto	l288
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;main.c: 254: }
  2001                           ;main.c: 255: ClearBuffer();
  2002                           
  2003                           ; BSR set to: 0
  2004                           
  2005                           ; BSR set to: 0
  2006                           
  2007                           ; BSR set to: 0
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;main.c: 253: break;
  2011  00078C  EC1B  F019         	call	_ClearBuffer	;wreg free
  2012                           
  2013                           ;main.c: 257: char *melody3 = strtok(str3,"X");
  2014  000790  0E64               	movlw	low Music@str3
  2015  000792  0100               	movlb	0	; () banked
  2016  000794  6FA8               	movwf	strtok@s1& (0+255),b
  2017  000796  0E02               	movlw	high Music@str3
  2018  000798  6FA9               	movwf	(strtok@s1+1)& (0+255),b
  2019  00079A  0E12               	movlw	low STR_1
  2020  00079C  6FAA               	movwf	strtok@s2& (0+255),b
  2021  00079E  0E06               	movlw	high STR_1
  2022  0007A0  6FAB               	movwf	(strtok@s2+1)& (0+255),b
  2023  0007A2  ECE7  F015         	call	_strtok	;wreg free
  2024  0007A6  C0A8  F2CE         	movff	?_strtok,Music@melody3
  2025  0007AA  C0A9  F2CF         	movff	?_strtok+1,Music@melody3+1
  2026  0007AE                     
  2027                           ;main.c: 260: {
  2028                           ;main.c: 261: strcpy(str4, GetString());
  2029  0007AE  0E96               	movlw	low Music@str4
  2030  0007B0  0100               	movlb	0	; () banked
  2031  0007B2  6F9D               	movwf	strcpy@to& (0+255),b
  2032  0007B4  0E02               	movlw	high Music@str4
  2033  0007B6  6F9E               	movwf	(strcpy@to+1)& (0+255),b
  2034  0007B8  EC0D  F01A         	call	_GetString	;wreg free
  2035  0007BC  C09B  F09F         	movff	?_GetString,strcpy@from
  2036  0007C0  C09C  F0A0         	movff	?_GetString+1,strcpy@from+1
  2037  0007C4  EC38  F019         	call	_strcpy	;wreg free
  2038                           
  2039                           ;main.c: 262: if(strstr(str4,"X"))
  2040  0007C8  0E96               	movlw	low Music@str4
  2041  0007CA  0100               	movlb	0	; () banked
  2042  0007CC  6FAA               	movwf	strstr@s1& (0+255),b
  2043  0007CE  0E02               	movlw	high Music@str4
  2044  0007D0  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  2045  0007D2  0E12               	movlw	low STR_1
  2046  0007D4  6FAC               	movwf	strstr@s2& (0+255),b
  2047  0007D6  0E06               	movlw	high STR_1
  2048  0007D8  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  2049  0007DA  EC42  F016         	call	_strstr	;wreg free
  2050  0007DE  0100               	movlb	0	; () banked
  2051  0007E0  51AA               	movf	?_strstr& (0+255),w,b
  2052  0007E2  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  2053  0007E4  B4D8               	btfsc	status,2,c
  2054  0007E6  D7E3               	goto	l292
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;main.c: 264: }
  2058                           ;main.c: 265: ClearBuffer();
  2059                           
  2060                           ; BSR set to: 0
  2061                           
  2062                           ; BSR set to: 0
  2063                           
  2064                           ; BSR set to: 0
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;main.c: 263: break;
  2068  0007E8  EC1B  F019         	call	_ClearBuffer	;wreg free
  2069                           
  2070                           ;main.c: 266: char *melody4 = strtok(str4,"X");
  2071  0007EC  0E96               	movlw	low Music@str4
  2072  0007EE  0100               	movlb	0	; () banked
  2073  0007F0  6FA8               	movwf	strtok@s1& (0+255),b
  2074  0007F2  0E02               	movlw	high Music@str4
  2075  0007F4  6FA9               	movwf	(strtok@s1+1)& (0+255),b
  2076  0007F6  0E12               	movlw	low STR_1
  2077  0007F8  6FAA               	movwf	strtok@s2& (0+255),b
  2078  0007FA  0E06               	movlw	high STR_1
  2079  0007FC  6FAB               	movwf	(strtok@s2+1)& (0+255),b
  2080  0007FE  ECE7  F015         	call	_strtok	;wreg free
  2081  000802  C0A8  F2D2         	movff	?_strtok,Music@melody4
  2082  000806  C0A9  F2D3         	movff	?_strtok+1,Music@melody4+1
  2083  00080A                     
  2084                           ;main.c: 268: for(int i = 0; i < 8; i++) {
  2085  00080A  0E00               	movlw	0
  2086  00080C  0102               	movlb	2	; () banked
  2087  00080E  6FD5               	movwf	(Music@i+1)& (0+255),b
  2088  000810  0E00               	movlw	0
  2089  000812  6FD4               	movwf	Music@i& (0+255),b
  2090                           
  2091                           ; BSR set to: 2
  2092  000814  BFD5               	btfsc	(Music@i+1)& (0+255),7,b
  2093  000816  D008               	goto	l297
  2094  000818  51D5               	movf	(Music@i+1)& (0+255),w,b
  2095  00081A  E105               	bnz	u6950
  2096  00081C  0E08               	movlw	8
  2097  00081E  5DD4               	subwf	Music@i& (0+255),w,b
  2098  000820  B0D8               	btfsc	status,0,c
  2099  000822  D17F               	goto	u7140
  2100  000824  D001               	goto	l297
  2101  000826                     u6950:
  2102                           
  2103                           ; BSR set to: 2
  2104  000826  D17D               	goto	u7140
  2105  000828                     l297:
  2106                           
  2107                           ; BSR set to: 2
  2108                           ;main.c: 269: ClearBuffer();
  2109                           
  2110                           ; BSR set to: 2
  2111  000828  EC1B  F019         	call	_ClearBuffer	;wreg free
  2112                           
  2113                           ;main.c: 270: if(melody1[i]=='c'){
  2114  00082C  0102               	movlb	2	; () banked
  2115  00082E  51D4               	movf	Music@i& (0+255),w,b
  2116  000830  25CC               	addwf	Music@melody1& (0+255),w,b
  2117  000832  6ED9               	movwf	fsr2l,c
  2118  000834  51D5               	movf	(Music@i+1)& (0+255),w,b
  2119  000836  21CD               	addwfc	(Music@melody1+1)& (0+255),w,b
  2120  000838  6EDA               	movwf	fsr2h,c
  2121  00083A  0E63               	movlw	99
  2122  00083C  18DE               	xorwf	postinc2,w,c
  2123  00083E  A4D8               	btfss	status,2,c
  2124  000840  D007               	goto	l299
  2125                           
  2126                           ; BSR set to: 2
  2127                           ;main.c: 271: current_tone = 261;
  2128  000842  0E01               	movlw	1
  2129  000844  0100               	movlb	0	; () banked
  2130  000846  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2131  000848  0E05               	movlw	5
  2132  00084A  6FE3               	movwf	_current_tone& (0+255),b
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;main.c: 272: LATDbits.LATD0 = 1;
  2136  00084C  808C               	bsf	3980,0,c	;volatile
  2137                           
  2138                           ;main.c: 273: }
  2139  00084E  D0E0               	goto	l325
  2140  000850                     l299:
  2141                           
  2142                           ;main.c: 274: else if(melody1[i]=='d'){
  2143                           
  2144                           ; BSR set to: 0
  2145  000850  0102               	movlb	2	; () banked
  2146  000852  51D4               	movf	Music@i& (0+255),w,b
  2147  000854  25CC               	addwf	Music@melody1& (0+255),w,b
  2148  000856  6ED9               	movwf	fsr2l,c
  2149  000858  51D5               	movf	(Music@i+1)& (0+255),w,b
  2150  00085A  21CD               	addwfc	(Music@melody1+1)& (0+255),w,b
  2151  00085C  6EDA               	movwf	fsr2h,c
  2152  00085E  0E64               	movlw	100
  2153  000860  18DE               	xorwf	postinc2,w,c
  2154  000862  A4D8               	btfss	status,2,c
  2155  000864  D007               	goto	l301
  2156                           
  2157                           ; BSR set to: 2
  2158                           ;main.c: 275: current_tone = 293;
  2159  000866  0E01               	movlw	1
  2160  000868  0100               	movlb	0	; () banked
  2161  00086A  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2162  00086C  0E25               	movlw	37
  2163  00086E  6FE3               	movwf	_current_tone& (0+255),b
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;main.c: 276: LATDbits.LATD1 = 1;
  2167  000870  828C               	bsf	3980,1,c	;volatile
  2168                           
  2169                           ;main.c: 277: }
  2170  000872  D0CE               	goto	l325
  2171  000874                     l301:
  2172                           
  2173                           ;main.c: 278: else if(melody1[i]=='e'){
  2174                           
  2175                           ; BSR set to: 0
  2176  000874  0102               	movlb	2	; () banked
  2177  000876  51D4               	movf	Music@i& (0+255),w,b
  2178  000878  25CC               	addwf	Music@melody1& (0+255),w,b
  2179  00087A  6ED9               	movwf	fsr2l,c
  2180  00087C  51D5               	movf	(Music@i+1)& (0+255),w,b
  2181  00087E  21CD               	addwfc	(Music@melody1+1)& (0+255),w,b
  2182  000880  6EDA               	movwf	fsr2h,c
  2183  000882  0E65               	movlw	101
  2184  000884  18DE               	xorwf	postinc2,w,c
  2185  000886  A4D8               	btfss	status,2,c
  2186  000888  D007               	goto	l303
  2187                           
  2188                           ; BSR set to: 2
  2189                           ;main.c: 279: current_tone = 329;
  2190  00088A  0E01               	movlw	1
  2191  00088C  0100               	movlb	0	; () banked
  2192  00088E  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2193  000890  0E49               	movlw	73
  2194  000892  6FE3               	movwf	_current_tone& (0+255),b
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;main.c: 280: LATDbits.LATD2 = 1;
  2198  000894  848C               	bsf	3980,2,c	;volatile
  2199                           
  2200                           ;main.c: 281: }
  2201  000896  D0BC               	goto	l325
  2202  000898                     l303:
  2203                           
  2204                           ;main.c: 282: else if(melody1[i]=='f'){
  2205                           
  2206                           ; BSR set to: 0
  2207  000898  0102               	movlb	2	; () banked
  2208  00089A  51D4               	movf	Music@i& (0+255),w,b
  2209  00089C  25CC               	addwf	Music@melody1& (0+255),w,b
  2210  00089E  6ED9               	movwf	fsr2l,c
  2211  0008A0  51D5               	movf	(Music@i+1)& (0+255),w,b
  2212  0008A2  21CD               	addwfc	(Music@melody1+1)& (0+255),w,b
  2213  0008A4  6EDA               	movwf	fsr2h,c
  2214  0008A6  0E66               	movlw	102
  2215  0008A8  18DE               	xorwf	postinc2,w,c
  2216  0008AA  A4D8               	btfss	status,2,c
  2217  0008AC  D008               	goto	l305
  2218                           
  2219                           ; BSR set to: 2
  2220                           ;main.c: 283: current_tone = 349;
  2221  0008AE  0E01               	movlw	1
  2222  0008B0  0100               	movlb	0	; () banked
  2223  0008B2  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2224  0008B4  0E5D               	movlw	93
  2225  0008B6  6FE3               	movwf	_current_tone& (0+255),b
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;main.c: 284: LATDbits.LATD3 = 1;
  2229  0008B8  868C               	bsf	3980,3,c	;volatile
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;main.c: 285: LATDbits.LATD4 = 1;
  2233  0008BA  888C               	bsf	3980,4,c	;volatile
  2234                           
  2235                           ;main.c: 286: }
  2236  0008BC  D0A9               	goto	l325
  2237  0008BE                     l305:
  2238                           
  2239                           ;main.c: 287: else if(melody1[i]=='g'){
  2240                           
  2241                           ; BSR set to: 0
  2242  0008BE  0102               	movlb	2	; () banked
  2243  0008C0  51D4               	movf	Music@i& (0+255),w,b
  2244  0008C2  25CC               	addwf	Music@melody1& (0+255),w,b
  2245  0008C4  6ED9               	movwf	fsr2l,c
  2246  0008C6  51D5               	movf	(Music@i+1)& (0+255),w,b
  2247  0008C8  21CD               	addwfc	(Music@melody1+1)& (0+255),w,b
  2248  0008CA  6EDA               	movwf	fsr2h,c
  2249  0008CC  0E67               	movlw	103
  2250  0008CE  18DE               	xorwf	postinc2,w,c
  2251  0008D0  A4D8               	btfss	status,2,c
  2252  0008D2  D007               	goto	l307
  2253                           
  2254                           ; BSR set to: 2
  2255                           ;main.c: 288: current_tone = 392;
  2256  0008D4  0E01               	movlw	1
  2257  0008D6  0100               	movlb	0	; () banked
  2258  0008D8  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2259  0008DA  0E88               	movlw	136
  2260  0008DC  6FE3               	movwf	_current_tone& (0+255),b
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;main.c: 289: LATDbits.LATD5 = 1;
  2264  0008DE  8A8C               	bsf	3980,5,c	;volatile
  2265                           
  2266                           ;main.c: 290: }
  2267  0008E0  D097               	goto	l325
  2268  0008E2                     l307:
  2269                           
  2270                           ;main.c: 291: else if(melody1[i]=='a'){
  2271                           
  2272                           ; BSR set to: 0
  2273  0008E2  0102               	movlb	2	; () banked
  2274  0008E4  51D4               	movf	Music@i& (0+255),w,b
  2275  0008E6  25CC               	addwf	Music@melody1& (0+255),w,b
  2276  0008E8  6ED9               	movwf	fsr2l,c
  2277  0008EA  51D5               	movf	(Music@i+1)& (0+255),w,b
  2278  0008EC  21CD               	addwfc	(Music@melody1+1)& (0+255),w,b
  2279  0008EE  6EDA               	movwf	fsr2h,c
  2280  0008F0  0E61               	movlw	97
  2281  0008F2  18DE               	xorwf	postinc2,w,c
  2282  0008F4  A4D8               	btfss	status,2,c
  2283  0008F6  D008               	goto	l309
  2284                           
  2285                           ; BSR set to: 2
  2286                           ;main.c: 292: current_tone = 440;
  2287  0008F8  0E01               	movlw	1
  2288  0008FA  0100               	movlb	0	; () banked
  2289  0008FC  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2290  0008FE  0EB8               	movlw	184
  2291  000900  6FE3               	movwf	_current_tone& (0+255),b
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;main.c: 293: LATDbits.LATD6 = 1;
  2295  000902  8C8C               	bsf	3980,6,c	;volatile
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;main.c: 294: LATDbits.LATD7 = 1;
  2299  000904  8E8C               	bsf	3980,7,c	;volatile
  2300                           
  2301                           ;main.c: 295: }
  2302  000906  D084               	goto	l325
  2303  000908                     l309:
  2304                           
  2305                           ;main.c: 296: else if(melody1[i]=='b'){
  2306                           
  2307                           ; BSR set to: 0
  2308  000908  0102               	movlb	2	; () banked
  2309  00090A  51D4               	movf	Music@i& (0+255),w,b
  2310  00090C  25CC               	addwf	Music@melody1& (0+255),w,b
  2311  00090E  6ED9               	movwf	fsr2l,c
  2312  000910  51D5               	movf	(Music@i+1)& (0+255),w,b
  2313  000912  21CD               	addwfc	(Music@melody1+1)& (0+255),w,b
  2314  000914  6EDA               	movwf	fsr2h,c
  2315  000916  0E62               	movlw	98
  2316  000918  18DE               	xorwf	postinc2,w,c
  2317  00091A  A4D8               	btfss	status,2,c
  2318  00091C  D008               	goto	l311
  2319                           
  2320                           ; BSR set to: 2
  2321                           ;main.c: 297: current_tone = 493;
  2322  00091E  0E01               	movlw	1
  2323  000920  0100               	movlb	0	; () banked
  2324  000922  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2325  000924  0EED               	movlw	237
  2326  000926  6FE3               	movwf	_current_tone& (0+255),b
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;main.c: 298: LATBbits.LATB0 = 1;
  2330  000928  808A               	bsf	3978,0,c	;volatile
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;main.c: 299: LATBbits.LATB1 = 1;
  2334  00092A  828A               	bsf	3978,1,c	;volatile
  2335                           
  2336                           ;main.c: 300: }
  2337  00092C  D071               	goto	l325
  2338  00092E                     l311:
  2339                           
  2340                           ;main.c: 301: else if(melody1[i]=='C'){
  2341                           
  2342                           ; BSR set to: 0
  2343  00092E  0102               	movlb	2	; () banked
  2344  000930  51D4               	movf	Music@i& (0+255),w,b
  2345  000932  25CC               	addwf	Music@melody1& (0+255),w,b
  2346  000934  6ED9               	movwf	fsr2l,c
  2347  000936  51D5               	movf	(Music@i+1)& (0+255),w,b
  2348  000938  21CD               	addwfc	(Music@melody1+1)& (0+255),w,b
  2349  00093A  6EDA               	movwf	fsr2h,c
  2350  00093C  0E43               	movlw	67
  2351  00093E  18DE               	xorwf	postinc2,w,c
  2352  000940  A4D8               	btfss	status,2,c
  2353  000942  D007               	goto	l313
  2354                           
  2355                           ; BSR set to: 2
  2356                           ;main.c: 302: current_tone = 523;
  2357  000944  0E02               	movlw	2
  2358  000946  0100               	movlb	0	; () banked
  2359  000948  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2360  00094A  0E0B               	movlw	11
  2361  00094C  6FE3               	movwf	_current_tone& (0+255),b
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;main.c: 303: LATBbits.LATB2 = 1;
  2365  00094E  848A               	bsf	3978,2,c	;volatile
  2366                           
  2367                           ;main.c: 304: }
  2368  000950  D05F               	goto	l325
  2369  000952                     l313:
  2370                           
  2371                           ;main.c: 305: else if(melody1[i]=='D'){
  2372                           
  2373                           ; BSR set to: 0
  2374  000952  0102               	movlb	2	; () banked
  2375  000954  51D4               	movf	Music@i& (0+255),w,b
  2376  000956  25CC               	addwf	Music@melody1& (0+255),w,b
  2377  000958  6ED9               	movwf	fsr2l,c
  2378  00095A  51D5               	movf	(Music@i+1)& (0+255),w,b
  2379  00095C  21CD               	addwfc	(Music@melody1+1)& (0+255),w,b
  2380  00095E  6EDA               	movwf	fsr2h,c
  2381  000960  0E44               	movlw	68
  2382  000962  18DE               	xorwf	postinc2,w,c
  2383  000964  A4D8               	btfss	status,2,c
  2384  000966  D005               	goto	l315
  2385                           
  2386                           ; BSR set to: 2
  2387                           ;main.c: 306: current_tone = 587;
  2388  000968  0E02               	movlw	2
  2389  00096A  0100               	movlb	0	; () banked
  2390  00096C  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2391  00096E  0E4B               	movlw	75
  2392  000970  D03F               	goto	L4
  2393  000972                     l315:
  2394                           
  2395                           ;main.c: 309: else if(melody1[i]=='E'){
  2396                           
  2397                           ; BSR set to: 0
  2398  000972  0102               	movlb	2	; () banked
  2399  000974  51D4               	movf	Music@i& (0+255),w,b
  2400  000976  25CC               	addwf	Music@melody1& (0+255),w,b
  2401  000978  6ED9               	movwf	fsr2l,c
  2402  00097A  51D5               	movf	(Music@i+1)& (0+255),w,b
  2403  00097C  21CD               	addwfc	(Music@melody1+1)& (0+255),w,b
  2404  00097E  6EDA               	movwf	fsr2h,c
  2405  000980  0E45               	movlw	69
  2406  000982  18DE               	xorwf	postinc2,w,c
  2407  000984  A4D8               	btfss	status,2,c
  2408  000986  D005               	goto	l317
  2409                           
  2410                           ; BSR set to: 2
  2411                           ;main.c: 310: current_tone = 659;
  2412  000988  0E02               	movlw	2
  2413  00098A  0100               	movlb	0	; () banked
  2414  00098C  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2415  00098E  0E93               	movlw	147
  2416  000990  D02F               	goto	L4
  2417  000992                     l317:
  2418                           
  2419                           ;main.c: 313: else if(melody1[i]=='F'){
  2420                           
  2421                           ; BSR set to: 0
  2422  000992  0102               	movlb	2	; () banked
  2423  000994  51D4               	movf	Music@i& (0+255),w,b
  2424  000996  25CC               	addwf	Music@melody1& (0+255),w,b
  2425  000998  6ED9               	movwf	fsr2l,c
  2426  00099A  51D5               	movf	(Music@i+1)& (0+255),w,b
  2427  00099C  21CD               	addwfc	(Music@melody1+1)& (0+255),w,b
  2428  00099E  6EDA               	movwf	fsr2h,c
  2429  0009A0  0E46               	movlw	70
  2430  0009A2  18DE               	xorwf	postinc2,w,c
  2431  0009A4  A4D8               	btfss	status,2,c
  2432  0009A6  D005               	goto	l319
  2433                           
  2434                           ; BSR set to: 2
  2435                           ;main.c: 314: current_tone = 698;
  2436  0009A8  0E02               	movlw	2
  2437  0009AA  0100               	movlb	0	; () banked
  2438  0009AC  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2439  0009AE  0EBA               	movlw	186
  2440  0009B0  D01F               	goto	L4
  2441  0009B2                     l319:
  2442                           
  2443                           ;main.c: 317: else if(melody1[i]=='G'){
  2444                           
  2445                           ; BSR set to: 0
  2446  0009B2  0102               	movlb	2	; () banked
  2447  0009B4  51D4               	movf	Music@i& (0+255),w,b
  2448  0009B6  25CC               	addwf	Music@melody1& (0+255),w,b
  2449  0009B8  6ED9               	movwf	fsr2l,c
  2450  0009BA  51D5               	movf	(Music@i+1)& (0+255),w,b
  2451  0009BC  21CD               	addwfc	(Music@melody1+1)& (0+255),w,b
  2452  0009BE  6EDA               	movwf	fsr2h,c
  2453  0009C0  0E47               	movlw	71
  2454  0009C2  18DE               	xorwf	postinc2,w,c
  2455  0009C4  A4D8               	btfss	status,2,c
  2456  0009C6  D005               	goto	l321
  2457                           
  2458                           ; BSR set to: 2
  2459                           ;main.c: 318: current_tone = 784;
  2460  0009C8  0E03               	movlw	3
  2461  0009CA  0100               	movlb	0	; () banked
  2462  0009CC  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2463  0009CE  0E10               	movlw	16
  2464  0009D0  D00F               	goto	L4
  2465  0009D2                     l321:
  2466                           
  2467                           ;main.c: 321: else if(melody1[i]=='R'){
  2468                           
  2469                           ; BSR set to: 0
  2470  0009D2  0102               	movlb	2	; () banked
  2471  0009D4  51D4               	movf	Music@i& (0+255),w,b
  2472  0009D6  25CC               	addwf	Music@melody1& (0+255),w,b
  2473  0009D8  6ED9               	movwf	fsr2l,c
  2474  0009DA  51D5               	movf	(Music@i+1)& (0+255),w,b
  2475  0009DC  21CD               	addwfc	(Music@melody1+1)& (0+255),w,b
  2476  0009DE  6EDA               	movwf	fsr2h,c
  2477  0009E0  0E52               	movlw	82
  2478  0009E2  18DE               	xorwf	postinc2,w,c
  2479  0009E4  A4D8               	btfss	status,2,c
  2480  0009E6  D006               	goto	l323
  2481                           
  2482                           ; BSR set to: 2
  2483                           ;main.c: 322: current_tone = 0;
  2484  0009E8  0E00               	movlw	0
  2485  0009EA  0100               	movlb	0	; () banked
  2486  0009EC  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2487  0009EE  0E00               	movlw	0
  2488  0009F0                     L4:
  2489  0009F0  6FE3               	movwf	_current_tone& (0+255),b
  2490                           
  2491                           ;main.c: 323: }
  2492  0009F2  D00E               	goto	l325
  2493  0009F4                     l323:
  2494                           
  2495                           ;main.c: 324: else if(melody4[i]=='Z'){
  2496                           
  2497                           ; BSR set to: 0
  2498  0009F4  0102               	movlb	2	; () banked
  2499  0009F6  51D4               	movf	Music@i& (0+255),w,b
  2500  0009F8  25D2               	addwf	Music@melody4& (0+255),w,b
  2501  0009FA  6ED9               	movwf	fsr2l,c
  2502  0009FC  51D5               	movf	(Music@i+1)& (0+255),w,b
  2503  0009FE  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  2504  000A00  6EDA               	movwf	fsr2h,c
  2505  000A02  0E5A               	movlw	90
  2506  000A04  18DE               	xorwf	postinc2,w,c
  2507  000A06  A4D8               	btfss	status,2,c
  2508  000A08  D003               	goto	l325
  2509                           
  2510                           ; BSR set to: 2
  2511                           ;main.c: 325: current_tone = -1;
  2512  000A0A  0100               	movlb	0	; () banked
  2513  000A0C  69E3               	setf	_current_tone& (0+255),b
  2514  000A0E  69E4               	setf	(_current_tone+1)& (0+255),b
  2515  000A10                     l325:
  2516                           
  2517                           ;main.c: 326: }
  2518                           ;main.c: 327: current_tone_duration = (tempo) / 4;
  2519                           
  2520                           ; BSR set to: 0
  2521                           
  2522                           ; BSR set to: 0
  2523                           
  2524                           ; BSR set to: 0
  2525                           
  2526                           ; BSR set to: 0
  2527                           
  2528                           ; BSR set to: 0
  2529                           
  2530                           ; BSR set to: 0
  2531                           
  2532                           ; BSR set to: 0
  2533                           
  2534                           ; BSR set to: 0
  2535                           
  2536                           ; BSR set to: 0
  2537                           
  2538                           ; BSR set to: 0
  2539                           
  2540                           ; BSR set to: 0
  2541                           
  2542                           ; BSR set to: 0
  2543                           
  2544                           ; BSR set to: 0
  2545                           
  2546                           ; BSR set to: 0
  2547  000A10  C2CA  F09B         	movff	Music@tempo,___awdiv@dividend
  2548  000A14  C2CB  F09C         	movff	Music@tempo+1,___awdiv@dividend+1
  2549  000A18  0E00               	movlw	0
  2550  000A1A  0100               	movlb	0	; () banked
  2551  000A1C  6F9E               	movwf	(___awdiv@divisor+1)& (0+255),b
  2552  000A1E  0E04               	movlw	4
  2553  000A20  6F9D               	movwf	___awdiv@divisor& (0+255),b
  2554  000A22  EC93  F016         	call	___awdiv	;wreg free
  2555  000A26  C09B  F0D5         	movff	?___awdiv,_current_tone_duration
  2556  000A2A  C09C  F0D6         	movff	?___awdiv+1,_current_tone_duration+1
  2557                           
  2558                           ;main.c: 328: playTone();
  2559  000A2E  EC87  F017         	call	_playTone	;wreg free
  2560                           
  2561                           ;main.c: 329: delay_ms(tempo/200);
  2562  000A32  C2CA  F09B         	movff	Music@tempo,___awdiv@dividend
  2563  000A36  C2CB  F09C         	movff	Music@tempo+1,___awdiv@dividend+1
  2564  000A3A  0E00               	movlw	0
  2565  000A3C  0100               	movlb	0	; () banked
  2566  000A3E  6F9E               	movwf	(___awdiv@divisor+1)& (0+255),b
  2567  000A40  0EC8               	movlw	200
  2568  000A42  6F9D               	movwf	___awdiv@divisor& (0+255),b
  2569  000A44  EC93  F016         	call	___awdiv	;wreg free
  2570  000A48  C09B  F0A3         	movff	?___awdiv,delay_ms@milliseconds
  2571  000A4C  C09C  F0A4         	movff	?___awdiv+1,delay_ms@milliseconds+1
  2572  000A50  ECC6  F019         	call	_delay_ms	;wreg free
  2573                           
  2574                           ;main.c: 330: strcpy(str, GetString());
  2575  000A54  0E29               	movlw	low _str
  2576  000A56  0100               	movlb	0	; () banked
  2577  000A58  6F9D               	movwf	strcpy@to& (0+255),b
  2578  000A5A  0E01               	movlw	high _str
  2579  000A5C  6F9E               	movwf	(strcpy@to+1)& (0+255),b
  2580  000A5E  EC0D  F01A         	call	_GetString	;wreg free
  2581  000A62  C09B  F09F         	movff	?_GetString,strcpy@from
  2582  000A66  C09C  F0A0         	movff	?_GetString+1,strcpy@from+1
  2583  000A6A  EC38  F019         	call	_strcpy	;wreg free
  2584                           
  2585                           ;main.c: 331: if(strstr (str,"S"))
  2586  000A6E  0E29               	movlw	low _str
  2587  000A70  0100               	movlb	0	; () banked
  2588  000A72  6FAA               	movwf	strstr@s1& (0+255),b
  2589  000A74  0E01               	movlw	high _str
  2590  000A76  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  2591  000A78  0E10               	movlw	low STR_10
  2592  000A7A  6FAC               	movwf	strstr@s2& (0+255),b
  2593  000A7C  0E06               	movlw	high STR_10
  2594  000A7E  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  2595  000A80  EC42  F016         	call	_strstr	;wreg free
  2596  000A84  0100               	movlb	0	; () banked
  2597  000A86  51AA               	movf	?_strstr& (0+255),w,b
  2598  000A88  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  2599  000A8A  B4D8               	btfsc	status,2,c
  2600  000A8C  D02F               	goto	l326
  2601  000A8E                     u7100:
  2602                           
  2603                           ;main.c: 334: {
  2604                           ;main.c: 335: strcpy(str, GetString());
  2605                           
  2606                           ; BSR set to: 0
  2607                           
  2608                           ;main.c: 332: {
  2609                           ;main.c: 333: while(1)
  2610  000A8E  0E29               	movlw	low _str
  2611  000A90  0100               	movlb	0	; () banked
  2612  000A92  6F9D               	movwf	strcpy@to& (0+255),b
  2613  000A94  0E01               	movlw	high _str
  2614  000A96  6F9E               	movwf	(strcpy@to+1)& (0+255),b
  2615  000A98  EC0D  F01A         	call	_GetString	;wreg free
  2616  000A9C  C09B  F09F         	movff	?_GetString,strcpy@from
  2617  000AA0  C09C  F0A0         	movff	?_GetString+1,strcpy@from+1
  2618  000AA4  EC38  F019         	call	_strcpy	;wreg free
  2619                           
  2620                           ;main.c: 336: if(strstr(str,"P"))
  2621  000AA8  0E29               	movlw	low _str
  2622  000AAA  0100               	movlb	0	; () banked
  2623  000AAC  6FAA               	movwf	strstr@s1& (0+255),b
  2624  000AAE  0E01               	movlw	high _str
  2625  000AB0  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  2626  000AB2  0E0C               	movlw	low STR_11
  2627  000AB4  6FAC               	movwf	strstr@s2& (0+255),b
  2628  000AB6  0E06               	movlw	high STR_11
  2629  000AB8  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  2630  000ABA  EC42  F016         	call	_strstr	;wreg free
  2631  000ABE  0100               	movlb	0	; () banked
  2632  000AC0  51AA               	movf	?_strstr& (0+255),w,b
  2633  000AC2  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  2634  000AC4  A4D8               	btfss	status,2,c
  2635  000AC6  D025               	goto	l335
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;main.c: 338: else if(strstr(str, "Q")) {
  2639                           
  2640                           ; BSR set to: 0
  2641                           
  2642                           ; BSR set to: 0
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;main.c: 337: break;
  2646  000AC8  0E29               	movlw	low _str
  2647  000ACA  6FAA               	movwf	strstr@s1& (0+255),b
  2648  000ACC  0E01               	movlw	high _str
  2649  000ACE  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  2650  000AD0  0E0E               	movlw	low STR_12
  2651  000AD2  6FAC               	movwf	strstr@s2& (0+255),b
  2652  000AD4  0E06               	movlw	high STR_12
  2653  000AD6  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  2654  000AD8  EC42  F016         	call	_strstr	;wreg free
  2655  000ADC  0100               	movlb	0	; () banked
  2656  000ADE  51AA               	movf	?_strstr& (0+255),w,b
  2657  000AE0  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  2658  000AE2  B4D8               	btfsc	status,2,c
  2659  000AE4  D7D4               	goto	u7100
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;main.c: 339: ClearBuffer();
  2663  000AE6  EC1B  F019         	call	_ClearBuffer	;wreg free
  2664                           
  2665                           ;main.c: 340: return;
  2666  000AEA  0012               	return	
  2667  000AEC                     l326:
  2668                           
  2669                           ;main.c: 344: else if(strstr (str,"Q")){
  2670  000AEC  0E29               	movlw	low _str
  2671  000AEE  0100               	movlb	0	; () banked
  2672  000AF0  6FAA               	movwf	strstr@s1& (0+255),b
  2673  000AF2  0E01               	movlw	high _str
  2674  000AF4  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  2675  000AF6  0E0E               	movlw	low STR_12
  2676  000AF8  6FAC               	movwf	strstr@s2& (0+255),b
  2677  000AFA  0E06               	movlw	high STR_12
  2678  000AFC  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  2679  000AFE  EC42  F016         	call	_strstr	;wreg free
  2680  000B02  0100               	movlb	0	; () banked
  2681  000B04  51AA               	movf	?_strstr& (0+255),w,b
  2682  000B06  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  2683  000B08  B4D8               	btfsc	status,2,c
  2684  000B0A  D003               	goto	l335
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;main.c: 345: ClearBuffer();
  2688  000B0C  EC1B  F019         	call	_ClearBuffer	;wreg free
  2689                           
  2690                           ;main.c: 346: return;
  2691  000B10  0012               	return	
  2692  000B12                     l335:
  2693  000B12  0102               	movlb	2	; () banked
  2694  000B14  4BD4               	infsnz	Music@i& (0+255),f,b
  2695  000B16  2BD5               	incf	(Music@i+1)& (0+255),f,b
  2696                           
  2697                           ; BSR set to: 2
  2698  000B18  BFD5               	btfsc	(Music@i+1)& (0+255),7,b
  2699  000B1A  D686               	goto	l297
  2700  000B1C  51D5               	movf	(Music@i+1)& (0+255),w,b
  2701  000B1E  E101               	bnz	l5686
  2702  000B20  D67D               	goto	L5
  2703  000B22                     u7140:
  2704  000B22                     l5686:
  2705                           
  2706                           ; BSR set to: 2
  2707                           ;main.c: 347: }
  2708                           ;main.c: 348: }
  2709                           ;main.c: 349: for (int i = 0; i < 8; i++) {
  2710  000B22  0E00               	movlw	0
  2711  000B24  6FD7               	movwf	(Music@i_1368+1)& (0+255),b
  2712  000B26  0E00               	movlw	0
  2713  000B28  6FD6               	movwf	Music@i_1368& (0+255),b
  2714                           
  2715                           ; BSR set to: 2
  2716  000B2A  BFD7               	btfsc	(Music@i_1368+1)& (0+255),7,b
  2717  000B2C  D008               	goto	l336
  2718  000B2E  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  2719  000B30  E105               	bnz	u7150
  2720  000B32  0E08               	movlw	8
  2721  000B34  5DD6               	subwf	Music@i_1368& (0+255),w,b
  2722  000B36  B0D8               	btfsc	status,0,c
  2723  000B38  D17F               	goto	u7340
  2724  000B3A  D001               	goto	l336
  2725  000B3C                     u7150:
  2726                           
  2727                           ; BSR set to: 2
  2728  000B3C  D17D               	goto	u7340
  2729  000B3E                     l336:
  2730                           
  2731                           ; BSR set to: 2
  2732                           ;main.c: 350: ClearBuffer();
  2733                           
  2734                           ; BSR set to: 2
  2735  000B3E  EC1B  F019         	call	_ClearBuffer	;wreg free
  2736                           
  2737                           ;main.c: 351: if(melody2[i]=='c'){
  2738  000B42  0102               	movlb	2	; () banked
  2739  000B44  51D6               	movf	Music@i_1368& (0+255),w,b
  2740  000B46  25D0               	addwf	Music@melody2& (0+255),w,b
  2741  000B48  6ED9               	movwf	fsr2l,c
  2742  000B4A  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  2743  000B4C  21D1               	addwfc	(Music@melody2+1)& (0+255),w,b
  2744  000B4E  6EDA               	movwf	fsr2h,c
  2745  000B50  0E63               	movlw	99
  2746  000B52  18DE               	xorwf	postinc2,w,c
  2747  000B54  A4D8               	btfss	status,2,c
  2748  000B56  D007               	goto	l338
  2749                           
  2750                           ; BSR set to: 2
  2751                           ;main.c: 352: current_tone = 261;
  2752  000B58  0E01               	movlw	1
  2753  000B5A  0100               	movlb	0	; () banked
  2754  000B5C  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2755  000B5E  0E05               	movlw	5
  2756  000B60  6FE3               	movwf	_current_tone& (0+255),b
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;main.c: 353: LATDbits.LATD0 = 1;
  2760  000B62  808C               	bsf	3980,0,c	;volatile
  2761                           
  2762                           ;main.c: 354: }
  2763  000B64  D0E0               	goto	l364
  2764  000B66                     l338:
  2765                           
  2766                           ;main.c: 355: else if(melody2[i]=='d'){
  2767                           
  2768                           ; BSR set to: 0
  2769  000B66  0102               	movlb	2	; () banked
  2770  000B68  51D6               	movf	Music@i_1368& (0+255),w,b
  2771  000B6A  25D0               	addwf	Music@melody2& (0+255),w,b
  2772  000B6C  6ED9               	movwf	fsr2l,c
  2773  000B6E  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  2774  000B70  21D1               	addwfc	(Music@melody2+1)& (0+255),w,b
  2775  000B72  6EDA               	movwf	fsr2h,c
  2776  000B74  0E64               	movlw	100
  2777  000B76  18DE               	xorwf	postinc2,w,c
  2778  000B78  A4D8               	btfss	status,2,c
  2779  000B7A  D007               	goto	l340
  2780                           
  2781                           ; BSR set to: 2
  2782                           ;main.c: 356: current_tone = 293;
  2783  000B7C  0E01               	movlw	1
  2784  000B7E  0100               	movlb	0	; () banked
  2785  000B80  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2786  000B82  0E25               	movlw	37
  2787  000B84  6FE3               	movwf	_current_tone& (0+255),b
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;main.c: 357: LATDbits.LATD1 = 1;
  2791  000B86  828C               	bsf	3980,1,c	;volatile
  2792                           
  2793                           ;main.c: 358: }
  2794  000B88  D0CE               	goto	l364
  2795  000B8A                     l340:
  2796                           
  2797                           ;main.c: 359: else if(melody2[i]=='e'){
  2798                           
  2799                           ; BSR set to: 0
  2800  000B8A  0102               	movlb	2	; () banked
  2801  000B8C  51D6               	movf	Music@i_1368& (0+255),w,b
  2802  000B8E  25D0               	addwf	Music@melody2& (0+255),w,b
  2803  000B90  6ED9               	movwf	fsr2l,c
  2804  000B92  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  2805  000B94  21D1               	addwfc	(Music@melody2+1)& (0+255),w,b
  2806  000B96  6EDA               	movwf	fsr2h,c
  2807  000B98  0E65               	movlw	101
  2808  000B9A  18DE               	xorwf	postinc2,w,c
  2809  000B9C  A4D8               	btfss	status,2,c
  2810  000B9E  D007               	goto	l342
  2811                           
  2812                           ; BSR set to: 2
  2813                           ;main.c: 360: current_tone = 329;
  2814  000BA0  0E01               	movlw	1
  2815  000BA2  0100               	movlb	0	; () banked
  2816  000BA4  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2817  000BA6  0E49               	movlw	73
  2818  000BA8  6FE3               	movwf	_current_tone& (0+255),b
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;main.c: 361: LATDbits.LATD2 = 1;
  2822  000BAA  848C               	bsf	3980,2,c	;volatile
  2823                           
  2824                           ;main.c: 362: }
  2825  000BAC  D0BC               	goto	l364
  2826  000BAE                     l342:
  2827                           
  2828                           ;main.c: 363: else if(melody2[i]=='f'){
  2829                           
  2830                           ; BSR set to: 0
  2831  000BAE  0102               	movlb	2	; () banked
  2832  000BB0  51D6               	movf	Music@i_1368& (0+255),w,b
  2833  000BB2  25D0               	addwf	Music@melody2& (0+255),w,b
  2834  000BB4  6ED9               	movwf	fsr2l,c
  2835  000BB6  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  2836  000BB8  21D1               	addwfc	(Music@melody2+1)& (0+255),w,b
  2837  000BBA  6EDA               	movwf	fsr2h,c
  2838  000BBC  0E66               	movlw	102
  2839  000BBE  18DE               	xorwf	postinc2,w,c
  2840  000BC0  A4D8               	btfss	status,2,c
  2841  000BC2  D008               	goto	l344
  2842                           
  2843                           ; BSR set to: 2
  2844                           ;main.c: 364: current_tone = 349;
  2845  000BC4  0E01               	movlw	1
  2846  000BC6  0100               	movlb	0	; () banked
  2847  000BC8  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2848  000BCA  0E5D               	movlw	93
  2849  000BCC  6FE3               	movwf	_current_tone& (0+255),b
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;main.c: 365: LATDbits.LATD3 = 1;
  2853  000BCE  868C               	bsf	3980,3,c	;volatile
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;main.c: 366: LATDbits.LATD4 = 1;
  2857  000BD0  888C               	bsf	3980,4,c	;volatile
  2858                           
  2859                           ;main.c: 367: }
  2860  000BD2  D0A9               	goto	l364
  2861  000BD4                     l344:
  2862                           
  2863                           ;main.c: 368: else if(melody2[i]=='g'){
  2864                           
  2865                           ; BSR set to: 0
  2866  000BD4  0102               	movlb	2	; () banked
  2867  000BD6  51D6               	movf	Music@i_1368& (0+255),w,b
  2868  000BD8  25D0               	addwf	Music@melody2& (0+255),w,b
  2869  000BDA  6ED9               	movwf	fsr2l,c
  2870  000BDC  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  2871  000BDE  21D1               	addwfc	(Music@melody2+1)& (0+255),w,b
  2872  000BE0  6EDA               	movwf	fsr2h,c
  2873  000BE2  0E67               	movlw	103
  2874  000BE4  18DE               	xorwf	postinc2,w,c
  2875  000BE6  A4D8               	btfss	status,2,c
  2876  000BE8  D007               	goto	l346
  2877                           
  2878                           ; BSR set to: 2
  2879                           ;main.c: 369: current_tone = 392;
  2880  000BEA  0E01               	movlw	1
  2881  000BEC  0100               	movlb	0	; () banked
  2882  000BEE  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2883  000BF0  0E88               	movlw	136
  2884  000BF2  6FE3               	movwf	_current_tone& (0+255),b
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;main.c: 370: LATDbits.LATD5 = 1;
  2888  000BF4  8A8C               	bsf	3980,5,c	;volatile
  2889                           
  2890                           ;main.c: 371: }
  2891  000BF6  D097               	goto	l364
  2892  000BF8                     l346:
  2893                           
  2894                           ;main.c: 372: else if(melody2[i]=='a'){
  2895                           
  2896                           ; BSR set to: 0
  2897  000BF8  0102               	movlb	2	; () banked
  2898  000BFA  51D6               	movf	Music@i_1368& (0+255),w,b
  2899  000BFC  25D0               	addwf	Music@melody2& (0+255),w,b
  2900  000BFE  6ED9               	movwf	fsr2l,c
  2901  000C00  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  2902  000C02  21D1               	addwfc	(Music@melody2+1)& (0+255),w,b
  2903  000C04  6EDA               	movwf	fsr2h,c
  2904  000C06  0E61               	movlw	97
  2905  000C08  18DE               	xorwf	postinc2,w,c
  2906  000C0A  A4D8               	btfss	status,2,c
  2907  000C0C  D008               	goto	l348
  2908                           
  2909                           ; BSR set to: 2
  2910                           ;main.c: 373: current_tone = 440;
  2911  000C0E  0E01               	movlw	1
  2912  000C10  0100               	movlb	0	; () banked
  2913  000C12  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2914  000C14  0EB8               	movlw	184
  2915  000C16  6FE3               	movwf	_current_tone& (0+255),b
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;main.c: 374: LATDbits.LATD6 = 1;
  2919  000C18  8C8C               	bsf	3980,6,c	;volatile
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;main.c: 375: LATDbits.LATD7 = 1;
  2923  000C1A  8E8C               	bsf	3980,7,c	;volatile
  2924                           
  2925                           ;main.c: 376: }
  2926  000C1C  D084               	goto	l364
  2927  000C1E                     l348:
  2928                           
  2929                           ;main.c: 377: else if(melody2[i]=='b'){
  2930                           
  2931                           ; BSR set to: 0
  2932  000C1E  0102               	movlb	2	; () banked
  2933  000C20  51D6               	movf	Music@i_1368& (0+255),w,b
  2934  000C22  25D0               	addwf	Music@melody2& (0+255),w,b
  2935  000C24  6ED9               	movwf	fsr2l,c
  2936  000C26  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  2937  000C28  21D1               	addwfc	(Music@melody2+1)& (0+255),w,b
  2938  000C2A  6EDA               	movwf	fsr2h,c
  2939  000C2C  0E62               	movlw	98
  2940  000C2E  18DE               	xorwf	postinc2,w,c
  2941  000C30  A4D8               	btfss	status,2,c
  2942  000C32  D008               	goto	l350
  2943                           
  2944                           ; BSR set to: 2
  2945                           ;main.c: 378: current_tone = 493;
  2946  000C34  0E01               	movlw	1
  2947  000C36  0100               	movlb	0	; () banked
  2948  000C38  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2949  000C3A  0EED               	movlw	237
  2950  000C3C  6FE3               	movwf	_current_tone& (0+255),b
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;main.c: 379: LATBbits.LATB1 = 1;
  2954  000C3E  828A               	bsf	3978,1,c	;volatile
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;main.c: 380: LATBbits.LATB0 = 1;
  2958  000C40  808A               	bsf	3978,0,c	;volatile
  2959                           
  2960                           ;main.c: 381: }
  2961  000C42  D071               	goto	l364
  2962  000C44                     l350:
  2963                           
  2964                           ;main.c: 382: else if(melody2[i]=='C'){
  2965                           
  2966                           ; BSR set to: 0
  2967  000C44  0102               	movlb	2	; () banked
  2968  000C46  51D6               	movf	Music@i_1368& (0+255),w,b
  2969  000C48  25D0               	addwf	Music@melody2& (0+255),w,b
  2970  000C4A  6ED9               	movwf	fsr2l,c
  2971  000C4C  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  2972  000C4E  21D1               	addwfc	(Music@melody2+1)& (0+255),w,b
  2973  000C50  6EDA               	movwf	fsr2h,c
  2974  000C52  0E43               	movlw	67
  2975  000C54  18DE               	xorwf	postinc2,w,c
  2976  000C56  A4D8               	btfss	status,2,c
  2977  000C58  D007               	goto	l352
  2978                           
  2979                           ; BSR set to: 2
  2980                           ;main.c: 383: current_tone = 523;
  2981  000C5A  0E02               	movlw	2
  2982  000C5C  0100               	movlb	0	; () banked
  2983  000C5E  6FE4               	movwf	(_current_tone+1)& (0+255),b
  2984  000C60  0E0B               	movlw	11
  2985  000C62  6FE3               	movwf	_current_tone& (0+255),b
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;main.c: 384: LATBbits.LATB2 = 1;
  2989  000C64  848A               	bsf	3978,2,c	;volatile
  2990                           
  2991                           ;main.c: 385: }
  2992  000C66  D05F               	goto	l364
  2993  000C68                     l352:
  2994                           
  2995                           ;main.c: 386: else if(melody2[i]=='D'){
  2996                           
  2997                           ; BSR set to: 0
  2998  000C68  0102               	movlb	2	; () banked
  2999  000C6A  51D6               	movf	Music@i_1368& (0+255),w,b
  3000  000C6C  25D0               	addwf	Music@melody2& (0+255),w,b
  3001  000C6E  6ED9               	movwf	fsr2l,c
  3002  000C70  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  3003  000C72  21D1               	addwfc	(Music@melody2+1)& (0+255),w,b
  3004  000C74  6EDA               	movwf	fsr2h,c
  3005  000C76  0E44               	movlw	68
  3006  000C78  18DE               	xorwf	postinc2,w,c
  3007  000C7A  A4D8               	btfss	status,2,c
  3008  000C7C  D005               	goto	l354
  3009                           
  3010                           ; BSR set to: 2
  3011                           ;main.c: 387: current_tone = 587;
  3012  000C7E  0E02               	movlw	2
  3013  000C80  0100               	movlb	0	; () banked
  3014  000C82  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3015  000C84  0E4B               	movlw	75
  3016  000C86  D03F               	goto	L9
  3017  000C88                     l354:
  3018                           
  3019                           ;main.c: 390: else if(melody2[i]=='E'){
  3020                           
  3021                           ; BSR set to: 0
  3022  000C88  0102               	movlb	2	; () banked
  3023  000C8A  51D6               	movf	Music@i_1368& (0+255),w,b
  3024  000C8C  25D0               	addwf	Music@melody2& (0+255),w,b
  3025  000C8E  6ED9               	movwf	fsr2l,c
  3026  000C90  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  3027  000C92  21D1               	addwfc	(Music@melody2+1)& (0+255),w,b
  3028  000C94  6EDA               	movwf	fsr2h,c
  3029  000C96  0E45               	movlw	69
  3030  000C98  18DE               	xorwf	postinc2,w,c
  3031  000C9A  A4D8               	btfss	status,2,c
  3032  000C9C  D005               	goto	l356
  3033                           
  3034                           ; BSR set to: 2
  3035                           ;main.c: 391: current_tone = 659;
  3036  000C9E  0E02               	movlw	2
  3037  000CA0  0100               	movlb	0	; () banked
  3038  000CA2  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3039  000CA4  0E93               	movlw	147
  3040  000CA6  D02F               	goto	L9
  3041  000CA8                     l356:
  3042                           
  3043                           ;main.c: 394: else if(melody2[i]=='F'){
  3044                           
  3045                           ; BSR set to: 0
  3046  000CA8  0102               	movlb	2	; () banked
  3047  000CAA  51D6               	movf	Music@i_1368& (0+255),w,b
  3048  000CAC  25D0               	addwf	Music@melody2& (0+255),w,b
  3049  000CAE  6ED9               	movwf	fsr2l,c
  3050  000CB0  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  3051  000CB2  21D1               	addwfc	(Music@melody2+1)& (0+255),w,b
  3052  000CB4  6EDA               	movwf	fsr2h,c
  3053  000CB6  0E46               	movlw	70
  3054  000CB8  18DE               	xorwf	postinc2,w,c
  3055  000CBA  A4D8               	btfss	status,2,c
  3056  000CBC  D005               	goto	l358
  3057                           
  3058                           ; BSR set to: 2
  3059                           ;main.c: 395: current_tone = 698;
  3060  000CBE  0E02               	movlw	2
  3061  000CC0  0100               	movlb	0	; () banked
  3062  000CC2  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3063  000CC4  0EBA               	movlw	186
  3064  000CC6  D01F               	goto	L9
  3065  000CC8                     l358:
  3066                           
  3067                           ;main.c: 398: else if(melody2[i]=='G'){
  3068                           
  3069                           ; BSR set to: 0
  3070  000CC8  0102               	movlb	2	; () banked
  3071  000CCA  51D6               	movf	Music@i_1368& (0+255),w,b
  3072  000CCC  25D0               	addwf	Music@melody2& (0+255),w,b
  3073  000CCE  6ED9               	movwf	fsr2l,c
  3074  000CD0  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  3075  000CD2  21D1               	addwfc	(Music@melody2+1)& (0+255),w,b
  3076  000CD4  6EDA               	movwf	fsr2h,c
  3077  000CD6  0E47               	movlw	71
  3078  000CD8  18DE               	xorwf	postinc2,w,c
  3079  000CDA  A4D8               	btfss	status,2,c
  3080  000CDC  D005               	goto	l360
  3081                           
  3082                           ; BSR set to: 2
  3083                           ;main.c: 399: current_tone = 784;
  3084  000CDE  0E03               	movlw	3
  3085  000CE0  0100               	movlb	0	; () banked
  3086  000CE2  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3087  000CE4  0E10               	movlw	16
  3088  000CE6  D00F               	goto	L9
  3089  000CE8                     l360:
  3090                           
  3091                           ;main.c: 402: else if(melody2[i]=='R'){
  3092                           
  3093                           ; BSR set to: 0
  3094  000CE8  0102               	movlb	2	; () banked
  3095  000CEA  51D6               	movf	Music@i_1368& (0+255),w,b
  3096  000CEC  25D0               	addwf	Music@melody2& (0+255),w,b
  3097  000CEE  6ED9               	movwf	fsr2l,c
  3098  000CF0  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  3099  000CF2  21D1               	addwfc	(Music@melody2+1)& (0+255),w,b
  3100  000CF4  6EDA               	movwf	fsr2h,c
  3101  000CF6  0E52               	movlw	82
  3102  000CF8  18DE               	xorwf	postinc2,w,c
  3103  000CFA  A4D8               	btfss	status,2,c
  3104  000CFC  D006               	goto	l362
  3105                           
  3106                           ; BSR set to: 2
  3107                           ;main.c: 403: current_tone = 0;
  3108  000CFE  0E00               	movlw	0
  3109  000D00  0100               	movlb	0	; () banked
  3110  000D02  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3111  000D04  0E00               	movlw	0
  3112  000D06                     L9:
  3113  000D06  6FE3               	movwf	_current_tone& (0+255),b
  3114                           
  3115                           ;main.c: 404: }
  3116  000D08  D00E               	goto	l364
  3117  000D0A                     l362:
  3118                           
  3119                           ;main.c: 405: else if(melody2[i]=='Z'){
  3120                           
  3121                           ; BSR set to: 0
  3122  000D0A  0102               	movlb	2	; () banked
  3123  000D0C  51D6               	movf	Music@i_1368& (0+255),w,b
  3124  000D0E  25D0               	addwf	Music@melody2& (0+255),w,b
  3125  000D10  6ED9               	movwf	fsr2l,c
  3126  000D12  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  3127  000D14  21D1               	addwfc	(Music@melody2+1)& (0+255),w,b
  3128  000D16  6EDA               	movwf	fsr2h,c
  3129  000D18  0E5A               	movlw	90
  3130  000D1A  18DE               	xorwf	postinc2,w,c
  3131  000D1C  A4D8               	btfss	status,2,c
  3132  000D1E  D003               	goto	l364
  3133                           
  3134                           ; BSR set to: 2
  3135                           ;main.c: 406: current_tone = -1;
  3136  000D20  0100               	movlb	0	; () banked
  3137  000D22  69E3               	setf	_current_tone& (0+255),b
  3138  000D24  69E4               	setf	(_current_tone+1)& (0+255),b
  3139  000D26                     l364:
  3140                           
  3141                           ;main.c: 407: }
  3142                           ;main.c: 408: current_tone_duration = tempo / 4;
  3143                           
  3144                           ; BSR set to: 0
  3145                           
  3146                           ; BSR set to: 0
  3147                           
  3148                           ; BSR set to: 0
  3149                           
  3150                           ; BSR set to: 0
  3151                           
  3152                           ; BSR set to: 0
  3153                           
  3154                           ; BSR set to: 0
  3155                           
  3156                           ; BSR set to: 0
  3157                           
  3158                           ; BSR set to: 0
  3159                           
  3160                           ; BSR set to: 0
  3161                           
  3162                           ; BSR set to: 0
  3163                           
  3164                           ; BSR set to: 0
  3165                           
  3166                           ; BSR set to: 0
  3167                           
  3168                           ; BSR set to: 0
  3169                           
  3170                           ; BSR set to: 0
  3171  000D26  C2CA  F09B         	movff	Music@tempo,___awdiv@dividend
  3172  000D2A  C2CB  F09C         	movff	Music@tempo+1,___awdiv@dividend+1
  3173  000D2E  0E00               	movlw	0
  3174  000D30  0100               	movlb	0	; () banked
  3175  000D32  6F9E               	movwf	(___awdiv@divisor+1)& (0+255),b
  3176  000D34  0E04               	movlw	4
  3177  000D36  6F9D               	movwf	___awdiv@divisor& (0+255),b
  3178  000D38  EC93  F016         	call	___awdiv	;wreg free
  3179  000D3C  C09B  F0D5         	movff	?___awdiv,_current_tone_duration
  3180  000D40  C09C  F0D6         	movff	?___awdiv+1,_current_tone_duration+1
  3181                           
  3182                           ;main.c: 409: playTone();
  3183  000D44  EC87  F017         	call	_playTone	;wreg free
  3184                           
  3185                           ;main.c: 410: delay_ms(tempo/200);
  3186  000D48  C2CA  F09B         	movff	Music@tempo,___awdiv@dividend
  3187  000D4C  C2CB  F09C         	movff	Music@tempo+1,___awdiv@dividend+1
  3188  000D50  0E00               	movlw	0
  3189  000D52  0100               	movlb	0	; () banked
  3190  000D54  6F9E               	movwf	(___awdiv@divisor+1)& (0+255),b
  3191  000D56  0EC8               	movlw	200
  3192  000D58  6F9D               	movwf	___awdiv@divisor& (0+255),b
  3193  000D5A  EC93  F016         	call	___awdiv	;wreg free
  3194  000D5E  C09B  F0A3         	movff	?___awdiv,delay_ms@milliseconds
  3195  000D62  C09C  F0A4         	movff	?___awdiv+1,delay_ms@milliseconds+1
  3196  000D66  ECC6  F019         	call	_delay_ms	;wreg free
  3197                           
  3198                           ;main.c: 411: strcpy(str, GetString());
  3199  000D6A  0E29               	movlw	low _str
  3200  000D6C  0100               	movlb	0	; () banked
  3201  000D6E  6F9D               	movwf	strcpy@to& (0+255),b
  3202  000D70  0E01               	movlw	high _str
  3203  000D72  6F9E               	movwf	(strcpy@to+1)& (0+255),b
  3204  000D74  EC0D  F01A         	call	_GetString	;wreg free
  3205  000D78  C09B  F09F         	movff	?_GetString,strcpy@from
  3206  000D7C  C09C  F0A0         	movff	?_GetString+1,strcpy@from+1
  3207  000D80  EC38  F019         	call	_strcpy	;wreg free
  3208                           
  3209                           ;main.c: 412: if(strstr (str,"S"))
  3210  000D84  0E29               	movlw	low _str
  3211  000D86  0100               	movlb	0	; () banked
  3212  000D88  6FAA               	movwf	strstr@s1& (0+255),b
  3213  000D8A  0E01               	movlw	high _str
  3214  000D8C  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  3215  000D8E  0E10               	movlw	low STR_10
  3216  000D90  6FAC               	movwf	strstr@s2& (0+255),b
  3217  000D92  0E06               	movlw	high STR_10
  3218  000D94  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  3219  000D96  EC42  F016         	call	_strstr	;wreg free
  3220  000D9A  0100               	movlb	0	; () banked
  3221  000D9C  51AA               	movf	?_strstr& (0+255),w,b
  3222  000D9E  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  3223  000DA0  B4D8               	btfsc	status,2,c
  3224  000DA2  D02F               	goto	l365
  3225  000DA4                     u7300:
  3226                           
  3227                           ;main.c: 415: {
  3228                           ;main.c: 416: strcpy(str, GetString());
  3229                           
  3230                           ; BSR set to: 0
  3231                           
  3232                           ;main.c: 413: {
  3233                           ;main.c: 414: while(1)
  3234  000DA4  0E29               	movlw	low _str
  3235  000DA6  0100               	movlb	0	; () banked
  3236  000DA8  6F9D               	movwf	strcpy@to& (0+255),b
  3237  000DAA  0E01               	movlw	high _str
  3238  000DAC  6F9E               	movwf	(strcpy@to+1)& (0+255),b
  3239  000DAE  EC0D  F01A         	call	_GetString	;wreg free
  3240  000DB2  C09B  F09F         	movff	?_GetString,strcpy@from
  3241  000DB6  C09C  F0A0         	movff	?_GetString+1,strcpy@from+1
  3242  000DBA  EC38  F019         	call	_strcpy	;wreg free
  3243                           
  3244                           ;main.c: 417: if(strstr(str,"P"))
  3245  000DBE  0E29               	movlw	low _str
  3246  000DC0  0100               	movlb	0	; () banked
  3247  000DC2  6FAA               	movwf	strstr@s1& (0+255),b
  3248  000DC4  0E01               	movlw	high _str
  3249  000DC6  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  3250  000DC8  0E0C               	movlw	low STR_11
  3251  000DCA  6FAC               	movwf	strstr@s2& (0+255),b
  3252  000DCC  0E06               	movlw	high STR_11
  3253  000DCE  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  3254  000DD0  EC42  F016         	call	_strstr	;wreg free
  3255  000DD4  0100               	movlb	0	; () banked
  3256  000DD6  51AA               	movf	?_strstr& (0+255),w,b
  3257  000DD8  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  3258  000DDA  A4D8               	btfss	status,2,c
  3259  000DDC  D025               	goto	l373
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;main.c: 419: else if(strstr(str, "Q")) {
  3263                           
  3264                           ; BSR set to: 0
  3265                           
  3266                           ; BSR set to: 0
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;main.c: 418: break;
  3270  000DDE  0E29               	movlw	low _str
  3271  000DE0  6FAA               	movwf	strstr@s1& (0+255),b
  3272  000DE2  0E01               	movlw	high _str
  3273  000DE4  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  3274  000DE6  0E0E               	movlw	low STR_12
  3275  000DE8  6FAC               	movwf	strstr@s2& (0+255),b
  3276  000DEA  0E06               	movlw	high STR_12
  3277  000DEC  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  3278  000DEE  EC42  F016         	call	_strstr	;wreg free
  3279  000DF2  0100               	movlb	0	; () banked
  3280  000DF4  51AA               	movf	?_strstr& (0+255),w,b
  3281  000DF6  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  3282  000DF8  B4D8               	btfsc	status,2,c
  3283  000DFA  D7D4               	goto	u7300
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;main.c: 420: ClearBuffer();
  3287  000DFC  EC1B  F019         	call	_ClearBuffer	;wreg free
  3288                           
  3289                           ;main.c: 421: return;
  3290  000E00  0012               	return	
  3291  000E02                     l365:
  3292                           
  3293                           ;main.c: 425: else if(strstr (str,"Q")){
  3294  000E02  0E29               	movlw	low _str
  3295  000E04  0100               	movlb	0	; () banked
  3296  000E06  6FAA               	movwf	strstr@s1& (0+255),b
  3297  000E08  0E01               	movlw	high _str
  3298  000E0A  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  3299  000E0C  0E0E               	movlw	low STR_12
  3300  000E0E  6FAC               	movwf	strstr@s2& (0+255),b
  3301  000E10  0E06               	movlw	high STR_12
  3302  000E12  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  3303  000E14  EC42  F016         	call	_strstr	;wreg free
  3304  000E18  0100               	movlb	0	; () banked
  3305  000E1A  51AA               	movf	?_strstr& (0+255),w,b
  3306  000E1C  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  3307  000E1E  B4D8               	btfsc	status,2,c
  3308  000E20  D003               	goto	l373
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;main.c: 426: ClearBuffer();
  3312  000E22  EC1B  F019         	call	_ClearBuffer	;wreg free
  3313                           
  3314                           ;main.c: 427: return;
  3315  000E26  0012               	return	
  3316  000E28                     l373:
  3317  000E28  0102               	movlb	2	; () banked
  3318  000E2A  4BD6               	infsnz	Music@i_1368& (0+255),f,b
  3319  000E2C  2BD7               	incf	(Music@i_1368+1)& (0+255),f,b
  3320                           
  3321                           ; BSR set to: 2
  3322  000E2E  BFD7               	btfsc	(Music@i_1368+1)& (0+255),7,b
  3323  000E30  D686               	goto	l336
  3324  000E32  51D7               	movf	(Music@i_1368+1)& (0+255),w,b
  3325  000E34  E101               	bnz	l5806
  3326  000E36  D67D               	goto	L10
  3327  000E38                     u7340:
  3328  000E38                     l5806:
  3329                           
  3330                           ; BSR set to: 2
  3331                           ;main.c: 428: }
  3332                           ;main.c: 429: }
  3333                           ;main.c: 430: for (int i = 0; i < 8; i++) {
  3334  000E38  0E00               	movlw	0
  3335  000E3A  6FD9               	movwf	(Music@i_1373+1)& (0+255),b
  3336  000E3C  0E00               	movlw	0
  3337  000E3E  6FD8               	movwf	Music@i_1373& (0+255),b
  3338                           
  3339                           ; BSR set to: 2
  3340  000E40  BFD9               	btfsc	(Music@i_1373+1)& (0+255),7,b
  3341  000E42  D008               	goto	l374
  3342  000E44  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3343  000E46  E105               	bnz	u7350
  3344  000E48  0E08               	movlw	8
  3345  000E4A  5DD8               	subwf	Music@i_1373& (0+255),w,b
  3346  000E4C  B0D8               	btfsc	status,0,c
  3347  000E4E  D17F               	goto	u7540
  3348  000E50  D001               	goto	l374
  3349  000E52                     u7350:
  3350                           
  3351                           ; BSR set to: 2
  3352  000E52  D17D               	goto	u7540
  3353  000E54                     l374:
  3354                           
  3355                           ; BSR set to: 2
  3356                           ;main.c: 431: ClearBuffer();
  3357                           
  3358                           ; BSR set to: 2
  3359  000E54  EC1B  F019         	call	_ClearBuffer	;wreg free
  3360                           
  3361                           ;main.c: 432: if(melody3[i]=='c'){
  3362  000E58  0102               	movlb	2	; () banked
  3363  000E5A  51D8               	movf	Music@i_1373& (0+255),w,b
  3364  000E5C  25CE               	addwf	Music@melody3& (0+255),w,b
  3365  000E5E  6ED9               	movwf	fsr2l,c
  3366  000E60  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3367  000E62  21CF               	addwfc	(Music@melody3+1)& (0+255),w,b
  3368  000E64  6EDA               	movwf	fsr2h,c
  3369  000E66  0E63               	movlw	99
  3370  000E68  18DE               	xorwf	postinc2,w,c
  3371  000E6A  A4D8               	btfss	status,2,c
  3372  000E6C  D007               	goto	l376
  3373                           
  3374                           ; BSR set to: 2
  3375                           ;main.c: 433: current_tone = 261;
  3376  000E6E  0E01               	movlw	1
  3377  000E70  0100               	movlb	0	; () banked
  3378  000E72  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3379  000E74  0E05               	movlw	5
  3380  000E76  6FE3               	movwf	_current_tone& (0+255),b
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;main.c: 434: LATDbits.LATD0 = 1;
  3384  000E78  808C               	bsf	3980,0,c	;volatile
  3385                           
  3386                           ;main.c: 435: }
  3387  000E7A  D0E0               	goto	l402
  3388  000E7C                     l376:
  3389                           
  3390                           ;main.c: 436: else if(melody3[i]=='d'){
  3391                           
  3392                           ; BSR set to: 0
  3393  000E7C  0102               	movlb	2	; () banked
  3394  000E7E  51D8               	movf	Music@i_1373& (0+255),w,b
  3395  000E80  25CE               	addwf	Music@melody3& (0+255),w,b
  3396  000E82  6ED9               	movwf	fsr2l,c
  3397  000E84  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3398  000E86  21CF               	addwfc	(Music@melody3+1)& (0+255),w,b
  3399  000E88  6EDA               	movwf	fsr2h,c
  3400  000E8A  0E64               	movlw	100
  3401  000E8C  18DE               	xorwf	postinc2,w,c
  3402  000E8E  A4D8               	btfss	status,2,c
  3403  000E90  D007               	goto	l378
  3404                           
  3405                           ; BSR set to: 2
  3406                           ;main.c: 437: current_tone = 293;
  3407  000E92  0E01               	movlw	1
  3408  000E94  0100               	movlb	0	; () banked
  3409  000E96  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3410  000E98  0E25               	movlw	37
  3411  000E9A  6FE3               	movwf	_current_tone& (0+255),b
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;main.c: 438: LATDbits.LATD1 = 1;
  3415  000E9C  828C               	bsf	3980,1,c	;volatile
  3416                           
  3417                           ;main.c: 439: }
  3418  000E9E  D0CE               	goto	l402
  3419  000EA0                     l378:
  3420                           
  3421                           ;main.c: 440: else if(melody3[i]=='e'){
  3422                           
  3423                           ; BSR set to: 0
  3424  000EA0  0102               	movlb	2	; () banked
  3425  000EA2  51D8               	movf	Music@i_1373& (0+255),w,b
  3426  000EA4  25CE               	addwf	Music@melody3& (0+255),w,b
  3427  000EA6  6ED9               	movwf	fsr2l,c
  3428  000EA8  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3429  000EAA  21CF               	addwfc	(Music@melody3+1)& (0+255),w,b
  3430  000EAC  6EDA               	movwf	fsr2h,c
  3431  000EAE  0E65               	movlw	101
  3432  000EB0  18DE               	xorwf	postinc2,w,c
  3433  000EB2  A4D8               	btfss	status,2,c
  3434  000EB4  D007               	goto	l380
  3435                           
  3436                           ; BSR set to: 2
  3437                           ;main.c: 441: current_tone = 329;
  3438  000EB6  0E01               	movlw	1
  3439  000EB8  0100               	movlb	0	; () banked
  3440  000EBA  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3441  000EBC  0E49               	movlw	73
  3442  000EBE  6FE3               	movwf	_current_tone& (0+255),b
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;main.c: 442: LATDbits.LATD2 = 1;
  3446  000EC0  848C               	bsf	3980,2,c	;volatile
  3447                           
  3448                           ;main.c: 443: }
  3449  000EC2  D0BC               	goto	l402
  3450  000EC4                     l380:
  3451                           
  3452                           ;main.c: 444: else if(melody3[i]=='f'){
  3453                           
  3454                           ; BSR set to: 0
  3455  000EC4  0102               	movlb	2	; () banked
  3456  000EC6  51D8               	movf	Music@i_1373& (0+255),w,b
  3457  000EC8  25CE               	addwf	Music@melody3& (0+255),w,b
  3458  000ECA  6ED9               	movwf	fsr2l,c
  3459  000ECC  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3460  000ECE  21CF               	addwfc	(Music@melody3+1)& (0+255),w,b
  3461  000ED0  6EDA               	movwf	fsr2h,c
  3462  000ED2  0E66               	movlw	102
  3463  000ED4  18DE               	xorwf	postinc2,w,c
  3464  000ED6  A4D8               	btfss	status,2,c
  3465  000ED8  D008               	goto	l382
  3466                           
  3467                           ; BSR set to: 2
  3468                           ;main.c: 445: current_tone = 349;
  3469  000EDA  0E01               	movlw	1
  3470  000EDC  0100               	movlb	0	; () banked
  3471  000EDE  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3472  000EE0  0E5D               	movlw	93
  3473  000EE2  6FE3               	movwf	_current_tone& (0+255),b
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;main.c: 446: LATDbits.LATD3 = 1;
  3477  000EE4  868C               	bsf	3980,3,c	;volatile
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;main.c: 447: LATDbits.LATD4 = 1;
  3481  000EE6  888C               	bsf	3980,4,c	;volatile
  3482                           
  3483                           ;main.c: 448: }
  3484  000EE8  D0A9               	goto	l402
  3485  000EEA                     l382:
  3486                           
  3487                           ;main.c: 449: else if(melody3[i]=='g'){
  3488                           
  3489                           ; BSR set to: 0
  3490  000EEA  0102               	movlb	2	; () banked
  3491  000EEC  51D8               	movf	Music@i_1373& (0+255),w,b
  3492  000EEE  25CE               	addwf	Music@melody3& (0+255),w,b
  3493  000EF0  6ED9               	movwf	fsr2l,c
  3494  000EF2  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3495  000EF4  21CF               	addwfc	(Music@melody3+1)& (0+255),w,b
  3496  000EF6  6EDA               	movwf	fsr2h,c
  3497  000EF8  0E67               	movlw	103
  3498  000EFA  18DE               	xorwf	postinc2,w,c
  3499  000EFC  A4D8               	btfss	status,2,c
  3500  000EFE  D007               	goto	l384
  3501                           
  3502                           ; BSR set to: 2
  3503                           ;main.c: 450: current_tone = 392;
  3504  000F00  0E01               	movlw	1
  3505  000F02  0100               	movlb	0	; () banked
  3506  000F04  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3507  000F06  0E88               	movlw	136
  3508  000F08  6FE3               	movwf	_current_tone& (0+255),b
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;main.c: 451: LATDbits.LATD5 = 1;
  3512  000F0A  8A8C               	bsf	3980,5,c	;volatile
  3513                           
  3514                           ;main.c: 452: }
  3515  000F0C  D097               	goto	l402
  3516  000F0E                     l384:
  3517                           
  3518                           ;main.c: 453: else if(melody3[i]=='a'){
  3519                           
  3520                           ; BSR set to: 0
  3521  000F0E  0102               	movlb	2	; () banked
  3522  000F10  51D8               	movf	Music@i_1373& (0+255),w,b
  3523  000F12  25CE               	addwf	Music@melody3& (0+255),w,b
  3524  000F14  6ED9               	movwf	fsr2l,c
  3525  000F16  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3526  000F18  21CF               	addwfc	(Music@melody3+1)& (0+255),w,b
  3527  000F1A  6EDA               	movwf	fsr2h,c
  3528  000F1C  0E61               	movlw	97
  3529  000F1E  18DE               	xorwf	postinc2,w,c
  3530  000F20  A4D8               	btfss	status,2,c
  3531  000F22  D008               	goto	l386
  3532                           
  3533                           ; BSR set to: 2
  3534                           ;main.c: 454: current_tone = 440;
  3535  000F24  0E01               	movlw	1
  3536  000F26  0100               	movlb	0	; () banked
  3537  000F28  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3538  000F2A  0EB8               	movlw	184
  3539  000F2C  6FE3               	movwf	_current_tone& (0+255),b
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;main.c: 455: LATDbits.LATD6 = 1;
  3543  000F2E  8C8C               	bsf	3980,6,c	;volatile
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;main.c: 456: LATDbits.LATD7 = 1;
  3547  000F30  8E8C               	bsf	3980,7,c	;volatile
  3548                           
  3549                           ;main.c: 457: }
  3550  000F32  D084               	goto	l402
  3551  000F34                     l386:
  3552                           
  3553                           ;main.c: 458: else if(melody3[i]=='b'){
  3554                           
  3555                           ; BSR set to: 0
  3556  000F34  0102               	movlb	2	; () banked
  3557  000F36  51D8               	movf	Music@i_1373& (0+255),w,b
  3558  000F38  25CE               	addwf	Music@melody3& (0+255),w,b
  3559  000F3A  6ED9               	movwf	fsr2l,c
  3560  000F3C  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3561  000F3E  21CF               	addwfc	(Music@melody3+1)& (0+255),w,b
  3562  000F40  6EDA               	movwf	fsr2h,c
  3563  000F42  0E62               	movlw	98
  3564  000F44  18DE               	xorwf	postinc2,w,c
  3565  000F46  A4D8               	btfss	status,2,c
  3566  000F48  D008               	goto	l388
  3567                           
  3568                           ; BSR set to: 2
  3569                           ;main.c: 459: current_tone = 493;
  3570  000F4A  0E01               	movlw	1
  3571  000F4C  0100               	movlb	0	; () banked
  3572  000F4E  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3573  000F50  0EED               	movlw	237
  3574  000F52  6FE3               	movwf	_current_tone& (0+255),b
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;main.c: 460: LATBbits.LATB1 = 1;
  3578  000F54  828A               	bsf	3978,1,c	;volatile
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;main.c: 461: LATBbits.LATB0 = 1;
  3582  000F56  808A               	bsf	3978,0,c	;volatile
  3583                           
  3584                           ;main.c: 462: }
  3585  000F58  D071               	goto	l402
  3586  000F5A                     l388:
  3587                           
  3588                           ;main.c: 463: else if(melody3[i]=='C'){
  3589                           
  3590                           ; BSR set to: 0
  3591  000F5A  0102               	movlb	2	; () banked
  3592  000F5C  51D8               	movf	Music@i_1373& (0+255),w,b
  3593  000F5E  25CE               	addwf	Music@melody3& (0+255),w,b
  3594  000F60  6ED9               	movwf	fsr2l,c
  3595  000F62  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3596  000F64  21CF               	addwfc	(Music@melody3+1)& (0+255),w,b
  3597  000F66  6EDA               	movwf	fsr2h,c
  3598  000F68  0E43               	movlw	67
  3599  000F6A  18DE               	xorwf	postinc2,w,c
  3600  000F6C  A4D8               	btfss	status,2,c
  3601  000F6E  D007               	goto	l390
  3602                           
  3603                           ; BSR set to: 2
  3604                           ;main.c: 464: current_tone = 523;
  3605  000F70  0E02               	movlw	2
  3606  000F72  0100               	movlb	0	; () banked
  3607  000F74  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3608  000F76  0E0B               	movlw	11
  3609  000F78  6FE3               	movwf	_current_tone& (0+255),b
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;main.c: 465: LATBbits.LATB2 = 1;
  3613  000F7A  848A               	bsf	3978,2,c	;volatile
  3614                           
  3615                           ;main.c: 466: }
  3616  000F7C  D05F               	goto	l402
  3617  000F7E                     l390:
  3618                           
  3619                           ;main.c: 467: else if(melody3[i]=='D'){
  3620                           
  3621                           ; BSR set to: 0
  3622  000F7E  0102               	movlb	2	; () banked
  3623  000F80  51D8               	movf	Music@i_1373& (0+255),w,b
  3624  000F82  25CE               	addwf	Music@melody3& (0+255),w,b
  3625  000F84  6ED9               	movwf	fsr2l,c
  3626  000F86  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3627  000F88  21CF               	addwfc	(Music@melody3+1)& (0+255),w,b
  3628  000F8A  6EDA               	movwf	fsr2h,c
  3629  000F8C  0E44               	movlw	68
  3630  000F8E  18DE               	xorwf	postinc2,w,c
  3631  000F90  A4D8               	btfss	status,2,c
  3632  000F92  D005               	goto	l392
  3633                           
  3634                           ; BSR set to: 2
  3635                           ;main.c: 468: current_tone = 587;
  3636  000F94  0E02               	movlw	2
  3637  000F96  0100               	movlb	0	; () banked
  3638  000F98  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3639  000F9A  0E4B               	movlw	75
  3640  000F9C  D03F               	goto	L14
  3641  000F9E                     l392:
  3642                           
  3643                           ;main.c: 471: else if(melody3[i]=='E'){
  3644                           
  3645                           ; BSR set to: 0
  3646  000F9E  0102               	movlb	2	; () banked
  3647  000FA0  51D8               	movf	Music@i_1373& (0+255),w,b
  3648  000FA2  25CE               	addwf	Music@melody3& (0+255),w,b
  3649  000FA4  6ED9               	movwf	fsr2l,c
  3650  000FA6  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3651  000FA8  21CF               	addwfc	(Music@melody3+1)& (0+255),w,b
  3652  000FAA  6EDA               	movwf	fsr2h,c
  3653  000FAC  0E45               	movlw	69
  3654  000FAE  18DE               	xorwf	postinc2,w,c
  3655  000FB0  A4D8               	btfss	status,2,c
  3656  000FB2  D005               	goto	l394
  3657                           
  3658                           ; BSR set to: 2
  3659                           ;main.c: 472: current_tone = 659;
  3660  000FB4  0E02               	movlw	2
  3661  000FB6  0100               	movlb	0	; () banked
  3662  000FB8  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3663  000FBA  0E93               	movlw	147
  3664  000FBC  D02F               	goto	L14
  3665  000FBE                     l394:
  3666                           
  3667                           ;main.c: 475: else if(melody3[i]=='F'){
  3668                           
  3669                           ; BSR set to: 0
  3670  000FBE  0102               	movlb	2	; () banked
  3671  000FC0  51D8               	movf	Music@i_1373& (0+255),w,b
  3672  000FC2  25CE               	addwf	Music@melody3& (0+255),w,b
  3673  000FC4  6ED9               	movwf	fsr2l,c
  3674  000FC6  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3675  000FC8  21CF               	addwfc	(Music@melody3+1)& (0+255),w,b
  3676  000FCA  6EDA               	movwf	fsr2h,c
  3677  000FCC  0E46               	movlw	70
  3678  000FCE  18DE               	xorwf	postinc2,w,c
  3679  000FD0  A4D8               	btfss	status,2,c
  3680  000FD2  D005               	goto	l396
  3681                           
  3682                           ; BSR set to: 2
  3683                           ;main.c: 476: current_tone = 698;
  3684  000FD4  0E02               	movlw	2
  3685  000FD6  0100               	movlb	0	; () banked
  3686  000FD8  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3687  000FDA  0EBA               	movlw	186
  3688  000FDC  D01F               	goto	L14
  3689  000FDE                     l396:
  3690                           
  3691                           ;main.c: 479: else if(melody3[i]=='G'){
  3692                           
  3693                           ; BSR set to: 0
  3694  000FDE  0102               	movlb	2	; () banked
  3695  000FE0  51D8               	movf	Music@i_1373& (0+255),w,b
  3696  000FE2  25CE               	addwf	Music@melody3& (0+255),w,b
  3697  000FE4  6ED9               	movwf	fsr2l,c
  3698  000FE6  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3699  000FE8  21CF               	addwfc	(Music@melody3+1)& (0+255),w,b
  3700  000FEA  6EDA               	movwf	fsr2h,c
  3701  000FEC  0E47               	movlw	71
  3702  000FEE  18DE               	xorwf	postinc2,w,c
  3703  000FF0  A4D8               	btfss	status,2,c
  3704  000FF2  D005               	goto	l398
  3705                           
  3706                           ; BSR set to: 2
  3707                           ;main.c: 480: current_tone = 784;
  3708  000FF4  0E03               	movlw	3
  3709  000FF6  0100               	movlb	0	; () banked
  3710  000FF8  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3711  000FFA  0E10               	movlw	16
  3712  000FFC  D00F               	goto	L14
  3713  000FFE                     l398:
  3714                           
  3715                           ;main.c: 483: else if(melody3[i]=='R'){
  3716                           
  3717                           ; BSR set to: 0
  3718  000FFE  0102               	movlb	2	; () banked
  3719  001000  51D8               	movf	Music@i_1373& (0+255),w,b
  3720  001002  25CE               	addwf	Music@melody3& (0+255),w,b
  3721  001004  6ED9               	movwf	fsr2l,c
  3722  001006  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3723  001008  21CF               	addwfc	(Music@melody3+1)& (0+255),w,b
  3724  00100A  6EDA               	movwf	fsr2h,c
  3725  00100C  0E52               	movlw	82
  3726  00100E  18DE               	xorwf	postinc2,w,c
  3727  001010  A4D8               	btfss	status,2,c
  3728  001012  D006               	goto	l400
  3729                           
  3730                           ; BSR set to: 2
  3731                           ;main.c: 484: current_tone = 0;
  3732  001014  0E00               	movlw	0
  3733  001016  0100               	movlb	0	; () banked
  3734  001018  6FE4               	movwf	(_current_tone+1)& (0+255),b
  3735  00101A  0E00               	movlw	0
  3736  00101C                     L14:
  3737  00101C  6FE3               	movwf	_current_tone& (0+255),b
  3738                           
  3739                           ;main.c: 485: }
  3740  00101E  D00E               	goto	l402
  3741  001020                     l400:
  3742                           
  3743                           ;main.c: 486: else if(melody4[i]=='Z'){
  3744                           
  3745                           ; BSR set to: 0
  3746  001020  0102               	movlb	2	; () banked
  3747  001022  51D8               	movf	Music@i_1373& (0+255),w,b
  3748  001024  25D2               	addwf	Music@melody4& (0+255),w,b
  3749  001026  6ED9               	movwf	fsr2l,c
  3750  001028  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3751  00102A  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  3752  00102C  6EDA               	movwf	fsr2h,c
  3753  00102E  0E5A               	movlw	90
  3754  001030  18DE               	xorwf	postinc2,w,c
  3755  001032  A4D8               	btfss	status,2,c
  3756  001034  D003               	goto	l402
  3757                           
  3758                           ; BSR set to: 2
  3759                           ;main.c: 487: current_tone = -1;
  3760  001036  0100               	movlb	0	; () banked
  3761  001038  69E3               	setf	_current_tone& (0+255),b
  3762  00103A  69E4               	setf	(_current_tone+1)& (0+255),b
  3763  00103C                     l402:
  3764                           
  3765                           ;main.c: 488: }
  3766                           ;main.c: 489: current_tone_duration = tempo / 4;
  3767                           
  3768                           ; BSR set to: 0
  3769                           
  3770                           ; BSR set to: 0
  3771                           
  3772                           ; BSR set to: 0
  3773                           
  3774                           ; BSR set to: 0
  3775                           
  3776                           ; BSR set to: 0
  3777                           
  3778                           ; BSR set to: 0
  3779                           
  3780                           ; BSR set to: 0
  3781                           
  3782                           ; BSR set to: 0
  3783                           
  3784                           ; BSR set to: 0
  3785                           
  3786                           ; BSR set to: 0
  3787                           
  3788                           ; BSR set to: 0
  3789                           
  3790                           ; BSR set to: 0
  3791                           
  3792                           ; BSR set to: 0
  3793                           
  3794                           ; BSR set to: 0
  3795  00103C  C2CA  F09B         	movff	Music@tempo,___awdiv@dividend
  3796  001040  C2CB  F09C         	movff	Music@tempo+1,___awdiv@dividend+1
  3797  001044  0E00               	movlw	0
  3798  001046  0100               	movlb	0	; () banked
  3799  001048  6F9E               	movwf	(___awdiv@divisor+1)& (0+255),b
  3800  00104A  0E04               	movlw	4
  3801  00104C  6F9D               	movwf	___awdiv@divisor& (0+255),b
  3802  00104E  EC93  F016         	call	___awdiv	;wreg free
  3803  001052  C09B  F0D5         	movff	?___awdiv,_current_tone_duration
  3804  001056  C09C  F0D6         	movff	?___awdiv+1,_current_tone_duration+1
  3805                           
  3806                           ;main.c: 490: playTone();
  3807  00105A  EC87  F017         	call	_playTone	;wreg free
  3808                           
  3809                           ;main.c: 491: delay_ms(tempo/200);
  3810  00105E  C2CA  F09B         	movff	Music@tempo,___awdiv@dividend
  3811  001062  C2CB  F09C         	movff	Music@tempo+1,___awdiv@dividend+1
  3812  001066  0E00               	movlw	0
  3813  001068  0100               	movlb	0	; () banked
  3814  00106A  6F9E               	movwf	(___awdiv@divisor+1)& (0+255),b
  3815  00106C  0EC8               	movlw	200
  3816  00106E  6F9D               	movwf	___awdiv@divisor& (0+255),b
  3817  001070  EC93  F016         	call	___awdiv	;wreg free
  3818  001074  C09B  F0A3         	movff	?___awdiv,delay_ms@milliseconds
  3819  001078  C09C  F0A4         	movff	?___awdiv+1,delay_ms@milliseconds+1
  3820  00107C  ECC6  F019         	call	_delay_ms	;wreg free
  3821                           
  3822                           ;main.c: 492: strcpy(str, GetString());
  3823  001080  0E29               	movlw	low _str
  3824  001082  0100               	movlb	0	; () banked
  3825  001084  6F9D               	movwf	strcpy@to& (0+255),b
  3826  001086  0E01               	movlw	high _str
  3827  001088  6F9E               	movwf	(strcpy@to+1)& (0+255),b
  3828  00108A  EC0D  F01A         	call	_GetString	;wreg free
  3829  00108E  C09B  F09F         	movff	?_GetString,strcpy@from
  3830  001092  C09C  F0A0         	movff	?_GetString+1,strcpy@from+1
  3831  001096  EC38  F019         	call	_strcpy	;wreg free
  3832                           
  3833                           ;main.c: 493: if(strstr (str,"S"))
  3834  00109A  0E29               	movlw	low _str
  3835  00109C  0100               	movlb	0	; () banked
  3836  00109E  6FAA               	movwf	strstr@s1& (0+255),b
  3837  0010A0  0E01               	movlw	high _str
  3838  0010A2  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  3839  0010A4  0E10               	movlw	low STR_10
  3840  0010A6  6FAC               	movwf	strstr@s2& (0+255),b
  3841  0010A8  0E06               	movlw	high STR_10
  3842  0010AA  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  3843  0010AC  EC42  F016         	call	_strstr	;wreg free
  3844  0010B0  0100               	movlb	0	; () banked
  3845  0010B2  51AA               	movf	?_strstr& (0+255),w,b
  3846  0010B4  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  3847  0010B6  B4D8               	btfsc	status,2,c
  3848  0010B8  D02F               	goto	l403
  3849  0010BA                     u7500:
  3850                           
  3851                           ;main.c: 496: {
  3852                           ;main.c: 497: strcpy(str, GetString());
  3853                           
  3854                           ; BSR set to: 0
  3855                           
  3856                           ;main.c: 494: {
  3857                           ;main.c: 495: while(1)
  3858  0010BA  0E29               	movlw	low _str
  3859  0010BC  0100               	movlb	0	; () banked
  3860  0010BE  6F9D               	movwf	strcpy@to& (0+255),b
  3861  0010C0  0E01               	movlw	high _str
  3862  0010C2  6F9E               	movwf	(strcpy@to+1)& (0+255),b
  3863  0010C4  EC0D  F01A         	call	_GetString	;wreg free
  3864  0010C8  C09B  F09F         	movff	?_GetString,strcpy@from
  3865  0010CC  C09C  F0A0         	movff	?_GetString+1,strcpy@from+1
  3866  0010D0  EC38  F019         	call	_strcpy	;wreg free
  3867                           
  3868                           ;main.c: 498: if(strstr(str,"P"))
  3869  0010D4  0E29               	movlw	low _str
  3870  0010D6  0100               	movlb	0	; () banked
  3871  0010D8  6FAA               	movwf	strstr@s1& (0+255),b
  3872  0010DA  0E01               	movlw	high _str
  3873  0010DC  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  3874  0010DE  0E0C               	movlw	low STR_11
  3875  0010E0  6FAC               	movwf	strstr@s2& (0+255),b
  3876  0010E2  0E06               	movlw	high STR_11
  3877  0010E4  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  3878  0010E6  EC42  F016         	call	_strstr	;wreg free
  3879  0010EA  0100               	movlb	0	; () banked
  3880  0010EC  51AA               	movf	?_strstr& (0+255),w,b
  3881  0010EE  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  3882  0010F0  A4D8               	btfss	status,2,c
  3883  0010F2  D025               	goto	l411
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;main.c: 500: else if(strstr(str, "Q")) {
  3887                           
  3888                           ; BSR set to: 0
  3889                           
  3890                           ; BSR set to: 0
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;main.c: 499: break;
  3894  0010F4  0E29               	movlw	low _str
  3895  0010F6  6FAA               	movwf	strstr@s1& (0+255),b
  3896  0010F8  0E01               	movlw	high _str
  3897  0010FA  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  3898  0010FC  0E0E               	movlw	low STR_12
  3899  0010FE  6FAC               	movwf	strstr@s2& (0+255),b
  3900  001100  0E06               	movlw	high STR_12
  3901  001102  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  3902  001104  EC42  F016         	call	_strstr	;wreg free
  3903  001108  0100               	movlb	0	; () banked
  3904  00110A  51AA               	movf	?_strstr& (0+255),w,b
  3905  00110C  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  3906  00110E  B4D8               	btfsc	status,2,c
  3907  001110  D7D4               	goto	u7500
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;main.c: 501: ClearBuffer();
  3911  001112  EC1B  F019         	call	_ClearBuffer	;wreg free
  3912                           
  3913                           ;main.c: 502: return;
  3914  001116  0012               	return	
  3915  001118                     l403:
  3916                           
  3917                           ;main.c: 506: else if(strstr (str,"Q")){
  3918  001118  0E29               	movlw	low _str
  3919  00111A  0100               	movlb	0	; () banked
  3920  00111C  6FAA               	movwf	strstr@s1& (0+255),b
  3921  00111E  0E01               	movlw	high _str
  3922  001120  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  3923  001122  0E0E               	movlw	low STR_12
  3924  001124  6FAC               	movwf	strstr@s2& (0+255),b
  3925  001126  0E06               	movlw	high STR_12
  3926  001128  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  3927  00112A  EC42  F016         	call	_strstr	;wreg free
  3928  00112E  0100               	movlb	0	; () banked
  3929  001130  51AA               	movf	?_strstr& (0+255),w,b
  3930  001132  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  3931  001134  B4D8               	btfsc	status,2,c
  3932  001136  D003               	goto	l411
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;main.c: 507: ClearBuffer();
  3936  001138  EC1B  F019         	call	_ClearBuffer	;wreg free
  3937                           
  3938                           ;main.c: 508: return;
  3939  00113C  0012               	return	
  3940  00113E                     l411:
  3941  00113E  0102               	movlb	2	; () banked
  3942  001140  4BD8               	infsnz	Music@i_1373& (0+255),f,b
  3943  001142  2BD9               	incf	(Music@i_1373+1)& (0+255),f,b
  3944                           
  3945                           ; BSR set to: 2
  3946  001144  BFD9               	btfsc	(Music@i_1373+1)& (0+255),7,b
  3947  001146  D686               	goto	l374
  3948  001148  51D9               	movf	(Music@i_1373+1)& (0+255),w,b
  3949  00114A  E101               	bnz	l5926
  3950  00114C  D67D               	goto	L15
  3951  00114E                     u7540:
  3952  00114E                     l5926:
  3953                           
  3954                           ; BSR set to: 2
  3955                           ;main.c: 509: }
  3956                           ;main.c: 510: }
  3957                           ;main.c: 511: for (int i = 0; i < 8; i++) {
  3958  00114E  0E00               	movlw	0
  3959  001150  6FDB               	movwf	(Music@i_1378+1)& (0+255),b
  3960  001152  0E00               	movlw	0
  3961  001154  6FDA               	movwf	Music@i_1378& (0+255),b
  3962                           
  3963                           ; BSR set to: 2
  3964  001156  BFDB               	btfsc	(Music@i_1378+1)& (0+255),7,b
  3965  001158  D00A               	goto	l412
  3966  00115A  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  3967  00115C  E106               	bnz	u7550
  3968  00115E  0E08               	movlw	8
  3969  001160  5DDA               	subwf	Music@i_1378& (0+255),w,b
  3970  001162  B0D8               	btfsc	status,0,c
  3971  001164  EF05  F004         	goto	l296
  3972  001168  D002               	goto	l412
  3973  00116A                     u7550:
  3974                           
  3975                           ; BSR set to: 2
  3976  00116A  EF05  F004         	goto	l296
  3977  00116E                     l412:
  3978                           
  3979                           ; BSR set to: 2
  3980                           ;main.c: 512: ClearBuffer();
  3981                           
  3982                           ; BSR set to: 2
  3983  00116E  EC1B  F019         	call	_ClearBuffer	;wreg free
  3984                           
  3985                           ;main.c: 513: if(melody4[i]=='c'){
  3986  001172  0102               	movlb	2	; () banked
  3987  001174  51DA               	movf	Music@i_1378& (0+255),w,b
  3988  001176  25D2               	addwf	Music@melody4& (0+255),w,b
  3989  001178  6ED9               	movwf	fsr2l,c
  3990  00117A  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  3991  00117C  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  3992  00117E  6EDA               	movwf	fsr2h,c
  3993  001180  0E63               	movlw	99
  3994  001182  18DE               	xorwf	postinc2,w,c
  3995  001184  A4D8               	btfss	status,2,c
  3996  001186  D007               	goto	l414
  3997                           
  3998                           ; BSR set to: 2
  3999                           ;main.c: 514: current_tone = 261;
  4000  001188  0E01               	movlw	1
  4001  00118A  0100               	movlb	0	; () banked
  4002  00118C  6FE4               	movwf	(_current_tone+1)& (0+255),b
  4003  00118E  0E05               	movlw	5
  4004  001190  6FE3               	movwf	_current_tone& (0+255),b
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;main.c: 515: LATDbits.LATD0 = 1;
  4008  001192  808C               	bsf	3980,0,c	;volatile
  4009                           
  4010                           ;main.c: 516: }
  4011  001194  D0E0               	goto	l440
  4012  001196                     l414:
  4013                           
  4014                           ;main.c: 517: else if(melody4[i]=='d'){
  4015                           
  4016                           ; BSR set to: 0
  4017  001196  0102               	movlb	2	; () banked
  4018  001198  51DA               	movf	Music@i_1378& (0+255),w,b
  4019  00119A  25D2               	addwf	Music@melody4& (0+255),w,b
  4020  00119C  6ED9               	movwf	fsr2l,c
  4021  00119E  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  4022  0011A0  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  4023  0011A2  6EDA               	movwf	fsr2h,c
  4024  0011A4  0E64               	movlw	100
  4025  0011A6  18DE               	xorwf	postinc2,w,c
  4026  0011A8  A4D8               	btfss	status,2,c
  4027  0011AA  D007               	goto	l416
  4028                           
  4029                           ; BSR set to: 2
  4030                           ;main.c: 518: current_tone = 293;
  4031  0011AC  0E01               	movlw	1
  4032  0011AE  0100               	movlb	0	; () banked
  4033  0011B0  6FE4               	movwf	(_current_tone+1)& (0+255),b
  4034  0011B2  0E25               	movlw	37
  4035  0011B4  6FE3               	movwf	_current_tone& (0+255),b
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;main.c: 519: LATDbits.LATD1 = 1;
  4039  0011B6  828C               	bsf	3980,1,c	;volatile
  4040                           
  4041                           ;main.c: 520: }
  4042  0011B8  D0CE               	goto	l440
  4043  0011BA                     l416:
  4044                           
  4045                           ;main.c: 521: else if(melody4[i]=='e'){
  4046                           
  4047                           ; BSR set to: 0
  4048  0011BA  0102               	movlb	2	; () banked
  4049  0011BC  51DA               	movf	Music@i_1378& (0+255),w,b
  4050  0011BE  25D2               	addwf	Music@melody4& (0+255),w,b
  4051  0011C0  6ED9               	movwf	fsr2l,c
  4052  0011C2  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  4053  0011C4  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  4054  0011C6  6EDA               	movwf	fsr2h,c
  4055  0011C8  0E65               	movlw	101
  4056  0011CA  18DE               	xorwf	postinc2,w,c
  4057  0011CC  A4D8               	btfss	status,2,c
  4058  0011CE  D007               	goto	l418
  4059                           
  4060                           ; BSR set to: 2
  4061                           ;main.c: 522: current_tone = 329;
  4062  0011D0  0E01               	movlw	1
  4063  0011D2  0100               	movlb	0	; () banked
  4064  0011D4  6FE4               	movwf	(_current_tone+1)& (0+255),b
  4065  0011D6  0E49               	movlw	73
  4066  0011D8  6FE3               	movwf	_current_tone& (0+255),b
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;main.c: 523: LATDbits.LATD2 = 1;
  4070  0011DA  848C               	bsf	3980,2,c	;volatile
  4071                           
  4072                           ;main.c: 524: }
  4073  0011DC  D0BC               	goto	l440
  4074  0011DE                     l418:
  4075                           
  4076                           ;main.c: 525: else if(melody4[i]=='f'){
  4077                           
  4078                           ; BSR set to: 0
  4079  0011DE  0102               	movlb	2	; () banked
  4080  0011E0  51DA               	movf	Music@i_1378& (0+255),w,b
  4081  0011E2  25D2               	addwf	Music@melody4& (0+255),w,b
  4082  0011E4  6ED9               	movwf	fsr2l,c
  4083  0011E6  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  4084  0011E8  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  4085  0011EA  6EDA               	movwf	fsr2h,c
  4086  0011EC  0E66               	movlw	102
  4087  0011EE  18DE               	xorwf	postinc2,w,c
  4088  0011F0  A4D8               	btfss	status,2,c
  4089  0011F2  D008               	goto	l420
  4090                           
  4091                           ; BSR set to: 2
  4092                           ;main.c: 526: current_tone = 349;
  4093  0011F4  0E01               	movlw	1
  4094  0011F6  0100               	movlb	0	; () banked
  4095  0011F8  6FE4               	movwf	(_current_tone+1)& (0+255),b
  4096  0011FA  0E5D               	movlw	93
  4097  0011FC  6FE3               	movwf	_current_tone& (0+255),b
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;main.c: 527: LATDbits.LATD3 = 1;
  4101  0011FE  868C               	bsf	3980,3,c	;volatile
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;main.c: 528: LATDbits.LATD4 = 1;
  4105  001200  888C               	bsf	3980,4,c	;volatile
  4106                           
  4107                           ;main.c: 529: }
  4108  001202  D0A9               	goto	l440
  4109  001204                     l420:
  4110                           
  4111                           ;main.c: 530: else if(melody4[i]=='g'){
  4112                           
  4113                           ; BSR set to: 0
  4114  001204  0102               	movlb	2	; () banked
  4115  001206  51DA               	movf	Music@i_1378& (0+255),w,b
  4116  001208  25D2               	addwf	Music@melody4& (0+255),w,b
  4117  00120A  6ED9               	movwf	fsr2l,c
  4118  00120C  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  4119  00120E  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  4120  001210  6EDA               	movwf	fsr2h,c
  4121  001212  0E67               	movlw	103
  4122  001214  18DE               	xorwf	postinc2,w,c
  4123  001216  A4D8               	btfss	status,2,c
  4124  001218  D007               	goto	l422
  4125                           
  4126                           ; BSR set to: 2
  4127                           ;main.c: 531: current_tone = 392;
  4128  00121A  0E01               	movlw	1
  4129  00121C  0100               	movlb	0	; () banked
  4130  00121E  6FE4               	movwf	(_current_tone+1)& (0+255),b
  4131  001220  0E88               	movlw	136
  4132  001222  6FE3               	movwf	_current_tone& (0+255),b
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;main.c: 532: LATDbits.LATD5 = 1;
  4136  001224  8A8C               	bsf	3980,5,c	;volatile
  4137                           
  4138                           ;main.c: 533: }
  4139  001226  D097               	goto	l440
  4140  001228                     l422:
  4141                           
  4142                           ;main.c: 534: else if(melody4[i]=='a'){
  4143                           
  4144                           ; BSR set to: 0
  4145  001228  0102               	movlb	2	; () banked
  4146  00122A  51DA               	movf	Music@i_1378& (0+255),w,b
  4147  00122C  25D2               	addwf	Music@melody4& (0+255),w,b
  4148  00122E  6ED9               	movwf	fsr2l,c
  4149  001230  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  4150  001232  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  4151  001234  6EDA               	movwf	fsr2h,c
  4152  001236  0E61               	movlw	97
  4153  001238  18DE               	xorwf	postinc2,w,c
  4154  00123A  A4D8               	btfss	status,2,c
  4155  00123C  D008               	goto	l424
  4156                           
  4157                           ; BSR set to: 2
  4158                           ;main.c: 535: current_tone = 440;
  4159  00123E  0E01               	movlw	1
  4160  001240  0100               	movlb	0	; () banked
  4161  001242  6FE4               	movwf	(_current_tone+1)& (0+255),b
  4162  001244  0EB8               	movlw	184
  4163  001246  6FE3               	movwf	_current_tone& (0+255),b
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;main.c: 536: LATDbits.LATD6 = 1;
  4167  001248  8C8C               	bsf	3980,6,c	;volatile
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;main.c: 537: LATDbits.LATD7 = 1;
  4171  00124A  8E8C               	bsf	3980,7,c	;volatile
  4172                           
  4173                           ;main.c: 538: }
  4174  00124C  D084               	goto	l440
  4175  00124E                     l424:
  4176                           
  4177                           ;main.c: 539: else if(melody4[i]=='b'){
  4178                           
  4179                           ; BSR set to: 0
  4180  00124E  0102               	movlb	2	; () banked
  4181  001250  51DA               	movf	Music@i_1378& (0+255),w,b
  4182  001252  25D2               	addwf	Music@melody4& (0+255),w,b
  4183  001254  6ED9               	movwf	fsr2l,c
  4184  001256  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  4185  001258  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  4186  00125A  6EDA               	movwf	fsr2h,c
  4187  00125C  0E62               	movlw	98
  4188  00125E  18DE               	xorwf	postinc2,w,c
  4189  001260  A4D8               	btfss	status,2,c
  4190  001262  D008               	goto	l426
  4191                           
  4192                           ; BSR set to: 2
  4193                           ;main.c: 540: current_tone = 493;
  4194  001264  0E01               	movlw	1
  4195  001266  0100               	movlb	0	; () banked
  4196  001268  6FE4               	movwf	(_current_tone+1)& (0+255),b
  4197  00126A  0EED               	movlw	237
  4198  00126C  6FE3               	movwf	_current_tone& (0+255),b
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;main.c: 541: LATBbits.LATB1 = 1;
  4202  00126E  828A               	bsf	3978,1,c	;volatile
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;main.c: 542: LATBbits.LATB0 = 1;
  4206  001270  808A               	bsf	3978,0,c	;volatile
  4207                           
  4208                           ;main.c: 543: }
  4209  001272  D071               	goto	l440
  4210  001274                     l426:
  4211                           
  4212                           ;main.c: 544: else if(melody4[i]=='C'){
  4213                           
  4214                           ; BSR set to: 0
  4215  001274  0102               	movlb	2	; () banked
  4216  001276  51DA               	movf	Music@i_1378& (0+255),w,b
  4217  001278  25D2               	addwf	Music@melody4& (0+255),w,b
  4218  00127A  6ED9               	movwf	fsr2l,c
  4219  00127C  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  4220  00127E  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  4221  001280  6EDA               	movwf	fsr2h,c
  4222  001282  0E43               	movlw	67
  4223  001284  18DE               	xorwf	postinc2,w,c
  4224  001286  A4D8               	btfss	status,2,c
  4225  001288  D007               	goto	l428
  4226                           
  4227                           ; BSR set to: 2
  4228                           ;main.c: 545: current_tone = 523;
  4229  00128A  0E02               	movlw	2
  4230  00128C  0100               	movlb	0	; () banked
  4231  00128E  6FE4               	movwf	(_current_tone+1)& (0+255),b
  4232  001290  0E0B               	movlw	11
  4233  001292  6FE3               	movwf	_current_tone& (0+255),b
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;main.c: 546: LATBbits.LATB2 = 1;
  4237  001294  848A               	bsf	3978,2,c	;volatile
  4238                           
  4239                           ;main.c: 547: }
  4240  001296  D05F               	goto	l440
  4241  001298                     l428:
  4242                           
  4243                           ;main.c: 548: else if(melody4[i]=='D'){
  4244                           
  4245                           ; BSR set to: 0
  4246  001298  0102               	movlb	2	; () banked
  4247  00129A  51DA               	movf	Music@i_1378& (0+255),w,b
  4248  00129C  25D2               	addwf	Music@melody4& (0+255),w,b
  4249  00129E  6ED9               	movwf	fsr2l,c
  4250  0012A0  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  4251  0012A2  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  4252  0012A4  6EDA               	movwf	fsr2h,c
  4253  0012A6  0E44               	movlw	68
  4254  0012A8  18DE               	xorwf	postinc2,w,c
  4255  0012AA  A4D8               	btfss	status,2,c
  4256  0012AC  D005               	goto	l430
  4257                           
  4258                           ; BSR set to: 2
  4259                           ;main.c: 549: current_tone = 587;
  4260  0012AE  0E02               	movlw	2
  4261  0012B0  0100               	movlb	0	; () banked
  4262  0012B2  6FE4               	movwf	(_current_tone+1)& (0+255),b
  4263  0012B4  0E4B               	movlw	75
  4264  0012B6  D03F               	goto	L19
  4265  0012B8                     l430:
  4266                           
  4267                           ;main.c: 552: else if(melody4[i]=='E'){
  4268                           
  4269                           ; BSR set to: 0
  4270  0012B8  0102               	movlb	2	; () banked
  4271  0012BA  51DA               	movf	Music@i_1378& (0+255),w,b
  4272  0012BC  25D2               	addwf	Music@melody4& (0+255),w,b
  4273  0012BE  6ED9               	movwf	fsr2l,c
  4274  0012C0  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  4275  0012C2  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  4276  0012C4  6EDA               	movwf	fsr2h,c
  4277  0012C6  0E45               	movlw	69
  4278  0012C8  18DE               	xorwf	postinc2,w,c
  4279  0012CA  A4D8               	btfss	status,2,c
  4280  0012CC  D005               	goto	l432
  4281                           
  4282                           ; BSR set to: 2
  4283                           ;main.c: 553: current_tone = 659;
  4284  0012CE  0E02               	movlw	2
  4285  0012D0  0100               	movlb	0	; () banked
  4286  0012D2  6FE4               	movwf	(_current_tone+1)& (0+255),b
  4287  0012D4  0E93               	movlw	147
  4288  0012D6  D02F               	goto	L19
  4289  0012D8                     l432:
  4290                           
  4291                           ;main.c: 556: else if(melody4[i]=='F'){
  4292                           
  4293                           ; BSR set to: 0
  4294  0012D8  0102               	movlb	2	; () banked
  4295  0012DA  51DA               	movf	Music@i_1378& (0+255),w,b
  4296  0012DC  25D2               	addwf	Music@melody4& (0+255),w,b
  4297  0012DE  6ED9               	movwf	fsr2l,c
  4298  0012E0  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  4299  0012E2  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  4300  0012E4  6EDA               	movwf	fsr2h,c
  4301  0012E6  0E46               	movlw	70
  4302  0012E8  18DE               	xorwf	postinc2,w,c
  4303  0012EA  A4D8               	btfss	status,2,c
  4304  0012EC  D005               	goto	l434
  4305                           
  4306                           ; BSR set to: 2
  4307                           ;main.c: 557: current_tone = 698;
  4308  0012EE  0E02               	movlw	2
  4309  0012F0  0100               	movlb	0	; () banked
  4310  0012F2  6FE4               	movwf	(_current_tone+1)& (0+255),b
  4311  0012F4  0EBA               	movlw	186
  4312  0012F6  D01F               	goto	L19
  4313  0012F8                     l434:
  4314                           
  4315                           ;main.c: 560: else if(melody4[i]=='G'){
  4316                           
  4317                           ; BSR set to: 0
  4318  0012F8  0102               	movlb	2	; () banked
  4319  0012FA  51DA               	movf	Music@i_1378& (0+255),w,b
  4320  0012FC  25D2               	addwf	Music@melody4& (0+255),w,b
  4321  0012FE  6ED9               	movwf	fsr2l,c
  4322  001300  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  4323  001302  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  4324  001304  6EDA               	movwf	fsr2h,c
  4325  001306  0E47               	movlw	71
  4326  001308  18DE               	xorwf	postinc2,w,c
  4327  00130A  A4D8               	btfss	status,2,c
  4328  00130C  D005               	goto	l436
  4329                           
  4330                           ; BSR set to: 2
  4331                           ;main.c: 561: current_tone = 784;
  4332  00130E  0E03               	movlw	3
  4333  001310  0100               	movlb	0	; () banked
  4334  001312  6FE4               	movwf	(_current_tone+1)& (0+255),b
  4335  001314  0E10               	movlw	16
  4336  001316  D00F               	goto	L19
  4337  001318                     l436:
  4338                           
  4339                           ;main.c: 564: else if(melody4[i]=='R'){
  4340                           
  4341                           ; BSR set to: 0
  4342  001318  0102               	movlb	2	; () banked
  4343  00131A  51DA               	movf	Music@i_1378& (0+255),w,b
  4344  00131C  25D2               	addwf	Music@melody4& (0+255),w,b
  4345  00131E  6ED9               	movwf	fsr2l,c
  4346  001320  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  4347  001322  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  4348  001324  6EDA               	movwf	fsr2h,c
  4349  001326  0E52               	movlw	82
  4350  001328  18DE               	xorwf	postinc2,w,c
  4351  00132A  A4D8               	btfss	status,2,c
  4352  00132C  D006               	goto	l438
  4353                           
  4354                           ; BSR set to: 2
  4355                           ;main.c: 565: current_tone = 0;
  4356  00132E  0E00               	movlw	0
  4357  001330  0100               	movlb	0	; () banked
  4358  001332  6FE4               	movwf	(_current_tone+1)& (0+255),b
  4359  001334  0E00               	movlw	0
  4360  001336                     L19:
  4361  001336  6FE3               	movwf	_current_tone& (0+255),b
  4362                           
  4363                           ;main.c: 566: }
  4364  001338  D00E               	goto	l440
  4365  00133A                     l438:
  4366                           
  4367                           ;main.c: 567: else if(melody4[i]=='Z'){
  4368                           
  4369                           ; BSR set to: 0
  4370  00133A  0102               	movlb	2	; () banked
  4371  00133C  51DA               	movf	Music@i_1378& (0+255),w,b
  4372  00133E  25D2               	addwf	Music@melody4& (0+255),w,b
  4373  001340  6ED9               	movwf	fsr2l,c
  4374  001342  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  4375  001344  21D3               	addwfc	(Music@melody4+1)& (0+255),w,b
  4376  001346  6EDA               	movwf	fsr2h,c
  4377  001348  0E5A               	movlw	90
  4378  00134A  18DE               	xorwf	postinc2,w,c
  4379  00134C  A4D8               	btfss	status,2,c
  4380  00134E  D003               	goto	l440
  4381                           
  4382                           ; BSR set to: 2
  4383                           ;main.c: 568: current_tone = -1;
  4384  001350  0100               	movlb	0	; () banked
  4385  001352  69E3               	setf	_current_tone& (0+255),b
  4386  001354  69E4               	setf	(_current_tone+1)& (0+255),b
  4387  001356                     l440:
  4388                           
  4389                           ;main.c: 569: }
  4390                           ;main.c: 570: current_tone_duration = tempo / 4;
  4391                           
  4392                           ; BSR set to: 0
  4393                           
  4394                           ; BSR set to: 0
  4395                           
  4396                           ; BSR set to: 0
  4397                           
  4398                           ; BSR set to: 0
  4399                           
  4400                           ; BSR set to: 0
  4401                           
  4402                           ; BSR set to: 0
  4403                           
  4404                           ; BSR set to: 0
  4405                           
  4406                           ; BSR set to: 0
  4407                           
  4408                           ; BSR set to: 0
  4409                           
  4410                           ; BSR set to: 0
  4411                           
  4412                           ; BSR set to: 0
  4413                           
  4414                           ; BSR set to: 0
  4415                           
  4416                           ; BSR set to: 0
  4417                           
  4418                           ; BSR set to: 0
  4419  001356  C2CA  F09B         	movff	Music@tempo,___awdiv@dividend
  4420  00135A  C2CB  F09C         	movff	Music@tempo+1,___awdiv@dividend+1
  4421  00135E  0E00               	movlw	0
  4422  001360  0100               	movlb	0	; () banked
  4423  001362  6F9E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4424  001364  0E04               	movlw	4
  4425  001366  6F9D               	movwf	___awdiv@divisor& (0+255),b
  4426  001368  EC93  F016         	call	___awdiv	;wreg free
  4427  00136C  C09B  F0D5         	movff	?___awdiv,_current_tone_duration
  4428  001370  C09C  F0D6         	movff	?___awdiv+1,_current_tone_duration+1
  4429                           
  4430                           ;main.c: 571: playTone();
  4431  001374  EC87  F017         	call	_playTone	;wreg free
  4432                           
  4433                           ;main.c: 572: delay_ms(tempo/200);
  4434  001378  C2CA  F09B         	movff	Music@tempo,___awdiv@dividend
  4435  00137C  C2CB  F09C         	movff	Music@tempo+1,___awdiv@dividend+1
  4436  001380  0E00               	movlw	0
  4437  001382  0100               	movlb	0	; () banked
  4438  001384  6F9E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4439  001386  0EC8               	movlw	200
  4440  001388  6F9D               	movwf	___awdiv@divisor& (0+255),b
  4441  00138A  EC93  F016         	call	___awdiv	;wreg free
  4442  00138E  C09B  F0A3         	movff	?___awdiv,delay_ms@milliseconds
  4443  001392  C09C  F0A4         	movff	?___awdiv+1,delay_ms@milliseconds+1
  4444  001396  ECC6  F019         	call	_delay_ms	;wreg free
  4445                           
  4446                           ;main.c: 573: strcpy(str, GetString());
  4447  00139A  0E29               	movlw	low _str
  4448  00139C  0100               	movlb	0	; () banked
  4449  00139E  6F9D               	movwf	strcpy@to& (0+255),b
  4450  0013A0  0E01               	movlw	high _str
  4451  0013A2  6F9E               	movwf	(strcpy@to+1)& (0+255),b
  4452  0013A4  EC0D  F01A         	call	_GetString	;wreg free
  4453  0013A8  C09B  F09F         	movff	?_GetString,strcpy@from
  4454  0013AC  C09C  F0A0         	movff	?_GetString+1,strcpy@from+1
  4455  0013B0  EC38  F019         	call	_strcpy	;wreg free
  4456                           
  4457                           ;main.c: 574: if(strstr (str,"S"))
  4458  0013B4  0E29               	movlw	low _str
  4459  0013B6  0100               	movlb	0	; () banked
  4460  0013B8  6FAA               	movwf	strstr@s1& (0+255),b
  4461  0013BA  0E01               	movlw	high _str
  4462  0013BC  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  4463  0013BE  0E10               	movlw	low STR_10
  4464  0013C0  6FAC               	movwf	strstr@s2& (0+255),b
  4465  0013C2  0E06               	movlw	high STR_10
  4466  0013C4  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  4467  0013C6  EC42  F016         	call	_strstr	;wreg free
  4468  0013CA  0100               	movlb	0	; () banked
  4469  0013CC  51AA               	movf	?_strstr& (0+255),w,b
  4470  0013CE  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  4471  0013D0  B4D8               	btfsc	status,2,c
  4472  0013D2  D02F               	goto	l441
  4473  0013D4                     u7700:
  4474                           
  4475                           ;main.c: 577: {
  4476                           ;main.c: 578: strcpy(str, GetString());
  4477                           
  4478                           ; BSR set to: 0
  4479                           
  4480                           ;main.c: 575: {
  4481                           ;main.c: 576: while(1)
  4482  0013D4  0E29               	movlw	low _str
  4483  0013D6  0100               	movlb	0	; () banked
  4484  0013D8  6F9D               	movwf	strcpy@to& (0+255),b
  4485  0013DA  0E01               	movlw	high _str
  4486  0013DC  6F9E               	movwf	(strcpy@to+1)& (0+255),b
  4487  0013DE  EC0D  F01A         	call	_GetString	;wreg free
  4488  0013E2  C09B  F09F         	movff	?_GetString,strcpy@from
  4489  0013E6  C09C  F0A0         	movff	?_GetString+1,strcpy@from+1
  4490  0013EA  EC38  F019         	call	_strcpy	;wreg free
  4491                           
  4492                           ;main.c: 579: if(strstr(str,"P"))
  4493  0013EE  0E29               	movlw	low _str
  4494  0013F0  0100               	movlb	0	; () banked
  4495  0013F2  6FAA               	movwf	strstr@s1& (0+255),b
  4496  0013F4  0E01               	movlw	high _str
  4497  0013F6  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  4498  0013F8  0E0C               	movlw	low STR_11
  4499  0013FA  6FAC               	movwf	strstr@s2& (0+255),b
  4500  0013FC  0E06               	movlw	high STR_11
  4501  0013FE  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  4502  001400  EC42  F016         	call	_strstr	;wreg free
  4503  001404  0100               	movlb	0	; () banked
  4504  001406  51AA               	movf	?_strstr& (0+255),w,b
  4505  001408  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  4506  00140A  A4D8               	btfss	status,2,c
  4507  00140C  D025               	goto	l449
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;main.c: 581: else if(strstr(str, "Q")) {
  4511                           
  4512                           ; BSR set to: 0
  4513                           
  4514                           ; BSR set to: 0
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;main.c: 580: break;
  4518  00140E  0E29               	movlw	low _str
  4519  001410  6FAA               	movwf	strstr@s1& (0+255),b
  4520  001412  0E01               	movlw	high _str
  4521  001414  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  4522  001416  0E0E               	movlw	low STR_12
  4523  001418  6FAC               	movwf	strstr@s2& (0+255),b
  4524  00141A  0E06               	movlw	high STR_12
  4525  00141C  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  4526  00141E  EC42  F016         	call	_strstr	;wreg free
  4527  001422  0100               	movlb	0	; () banked
  4528  001424  51AA               	movf	?_strstr& (0+255),w,b
  4529  001426  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  4530  001428  B4D8               	btfsc	status,2,c
  4531  00142A  D7D4               	goto	u7700
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;main.c: 582: ClearBuffer();
  4535  00142C  EC1B  F019         	call	_ClearBuffer	;wreg free
  4536                           
  4537                           ;main.c: 583: return;
  4538  001430  0012               	return	
  4539  001432                     l441:
  4540                           
  4541                           ;main.c: 587: else if(strstr (str,"Q")){
  4542  001432  0E29               	movlw	low _str
  4543  001434  0100               	movlb	0	; () banked
  4544  001436  6FAA               	movwf	strstr@s1& (0+255),b
  4545  001438  0E01               	movlw	high _str
  4546  00143A  6FAB               	movwf	(strstr@s1+1)& (0+255),b
  4547  00143C  0E0E               	movlw	low STR_12
  4548  00143E  6FAC               	movwf	strstr@s2& (0+255),b
  4549  001440  0E06               	movlw	high STR_12
  4550  001442  6FAD               	movwf	(strstr@s2+1)& (0+255),b
  4551  001444  EC42  F016         	call	_strstr	;wreg free
  4552  001448  0100               	movlb	0	; () banked
  4553  00144A  51AA               	movf	?_strstr& (0+255),w,b
  4554  00144C  11AB               	iorwf	(?_strstr+1)& (0+255),w,b
  4555  00144E  B4D8               	btfsc	status,2,c
  4556  001450  D003               	goto	l449
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;main.c: 588: ClearBuffer();
  4560  001452  EC1B  F019         	call	_ClearBuffer	;wreg free
  4561                           
  4562                           ;main.c: 589: return;
  4563  001456  0012               	return	
  4564  001458                     l449:
  4565  001458  0102               	movlb	2	; () banked
  4566  00145A  4BDA               	infsnz	Music@i_1378& (0+255),f,b
  4567  00145C  2BDB               	incf	(Music@i_1378+1)& (0+255),f,b
  4568                           
  4569                           ; BSR set to: 2
  4570  00145E  BFDB               	btfsc	(Music@i_1378+1)& (0+255),7,b
  4571  001460  D686               	goto	l412
  4572  001462  51DB               	movf	(Music@i_1378+1)& (0+255),w,b
  4573  001464  E101               	bnz	u7740
  4574  001466  D67B               	goto	L20
  4575  001468                     u7740:
  4576                           
  4577                           ; BSR set to: 2
  4578                           
  4579                           ; BSR set to: 2
  4580  001468  EF05  F004         	goto	l296
  4581  00146C                     __end_of_Music:
  4582                           	opt stack 0
  4583                           tblptru	equ	0xFF8
  4584                           tblptrh	equ	0xFF7
  4585                           tblptrl	equ	0xFF6
  4586                           tablat	equ	0xFF5
  4587                           intcon	equ	0xFF2
  4588                           postinc0	equ	0xFEE
  4589                           wreg	equ	0xFE8
  4590                           postinc2	equ	0xFDE
  4591                           fsr2h	equ	0xFDA
  4592                           fsr2l	equ	0xFD9
  4593                           status	equ	0xFD8
  4594                           
  4595 ;; *************** function _strtok *****************
  4596 ;; Defined at:
  4597 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strtok.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;  s1              2   40[BANK0 ] PTR unsigned char 
  4600 ;;		 -> Music@str4(50), Music@str3(50), Music@str2(50), NULL(0), 
  4601 ;;		 -> Music@str1(50), str(10), 
  4602 ;;  s2              2   42[BANK0 ] PTR const unsigned char 
  4603 ;;		 -> STR_9(2), STR_7(2), STR_5(2), STR_3(2), 
  4604 ;;		 -> STR_1(2), 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;		None
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  2   40[BANK0 ] PTR unsigned char 
  4609 ;; Registers used:
  4610 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4616 ;;      Params:         0       4       0       0       0       0       0
  4617 ;;      Locals:         0       0       0       0       0       0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0
  4619 ;;      Totals:         0       4       0       0       0       0       0
  4620 ;;Total ram usage:        4 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; Hardware stack levels required when called:    7
  4623 ;; This function calls:
  4624 ;;		_strcspn
  4625 ;;		_strspn
  4626 ;; This function is called by:
  4627 ;;		_Music
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text11
  4632  002BCE                     __ptext11:
  4633                           	opt stack 0
  4634  002BCE                     _strtok:
  4635                           	opt stack 22
  4636                           
  4637                           ;incstack = 0
  4638  002BCE  0100               	movlb	0	; () banked
  4639  002BD0  51A8               	movf	strtok@s1& (0+255),w,b
  4640  002BD2  11A9               	iorwf	(strtok@s1+1)& (0+255),w,b
  4641  002BD4  A4D8               	btfss	status,2,c
  4642  002BD6  D004               	goto	l1057
  4643                           
  4644                           ; BSR set to: 0
  4645  002BD8  C0D3  F0A8         	movff	strtok@sp,strtok@s1
  4646  002BDC  C0D4  F0A9         	movff	strtok@sp+1,strtok@s1+1
  4647  002BE0                     l1057:
  4648                           
  4649                           ; BSR set to: 0
  4650  002BE0  51A8               	movf	strtok@s1& (0+255),w,b
  4651  002BE2  11A9               	iorwf	(strtok@s1+1)& (0+255),w,b
  4652  002BE4  A4D8               	btfss	status,2,c
  4653  002BE6  D005               	goto	l1058
  4654                           
  4655                           ; BSR set to: 0
  4656  002BE8  0E00               	movlw	0
  4657  002BEA  6FA8               	movwf	?_strtok& (0+255),b
  4658  002BEC  0E00               	movlw	0
  4659  002BEE  6FA9               	movwf	(?_strtok+1)& (0+255),b
  4660                           
  4661                           ; BSR set to: 0
  4662  002BF0  0012               	return	
  4663  002BF2                     l1058:
  4664                           
  4665                           ; BSR set to: 0
  4666                           
  4667                           ; BSR set to: 0
  4668  002BF2  C0A8  F0A1         	movff	strtok@s1,strspn@s1
  4669  002BF6  C0A9  F0A2         	movff	strtok@s1+1,strspn@s1+1
  4670  002BFA  C0AA  F0A3         	movff	strtok@s2,strspn@s2
  4671  002BFE  C0AB  F0A4         	movff	strtok@s2+1,strspn@s2+1
  4672  002C02  ECF1  F017         	call	_strspn	;wreg free
  4673  002C06  0100               	movlb	0	; () banked
  4674  002C08  51A1               	movf	?_strspn& (0+255),w,b
  4675  002C0A  27A8               	addwf	strtok@s1& (0+255),f,b
  4676  002C0C  51A2               	movf	(?_strspn+1)& (0+255),w,b
  4677  002C0E  23A9               	addwfc	(strtok@s1+1)& (0+255),f,b
  4678                           
  4679                           ; BSR set to: 0
  4680  002C10  C0A8  FFD9         	movff	strtok@s1,fsr2l
  4681  002C14  C0A9  FFDA         	movff	strtok@s1+1,fsr2h
  4682  002C18  50DF               	movf	indf2,w,c
  4683  002C1A  A4D8               	btfss	status,2,c
  4684  002C1C  D009               	goto	l1060
  4685                           
  4686                           ; BSR set to: 0
  4687  002C1E  0E00               	movlw	0
  4688  002C20  6FD3               	movwf	strtok@sp& (0+255),b
  4689  002C22  0E00               	movlw	0
  4690  002C24  6FD4               	movwf	(strtok@sp+1)& (0+255),b
  4691  002C26  C0D3  F0A8         	movff	strtok@sp,?_strtok
  4692  002C2A  C0D4  F0A9         	movff	strtok@sp+1,?_strtok+1
  4693                           
  4694                           ; BSR set to: 0
  4695  002C2E  0012               	return	
  4696  002C30                     l1060:
  4697                           
  4698                           ; BSR set to: 0
  4699                           
  4700                           ; BSR set to: 0
  4701  002C30  C0A8  F0A1         	movff	strtok@s1,strcspn@s1
  4702  002C34  C0A9  F0A2         	movff	strtok@s1+1,strcspn@s1+1
  4703  002C38  C0AA  F0A3         	movff	strtok@s2,strcspn@s2
  4704  002C3C  C0AB  F0A4         	movff	strtok@s2+1,strcspn@s2+1
  4705  002C40  EC1B  F018         	call	_strcspn	;wreg free
  4706  002C44  0100               	movlb	0	; () banked
  4707  002C46  51A1               	movf	?_strcspn& (0+255),w,b
  4708  002C48  25A8               	addwf	strtok@s1& (0+255),w,b
  4709  002C4A  6FD3               	movwf	strtok@sp& (0+255),b
  4710  002C4C  51A2               	movf	(?_strcspn+1)& (0+255),w,b
  4711  002C4E  21A9               	addwfc	(strtok@s1+1)& (0+255),w,b
  4712  002C50  6FD4               	movwf	(strtok@sp+1)& (0+255),b
  4713                           
  4714                           ; BSR set to: 0
  4715  002C52  C0D3  FFD9         	movff	strtok@sp,fsr2l
  4716  002C56  C0D4  FFDA         	movff	strtok@sp+1,fsr2h
  4717  002C5A  50DF               	movf	indf2,w,c
  4718  002C5C  B4D8               	btfsc	status,2,c
  4719  002C5E  D009               	goto	l1061
  4720                           
  4721                           ; BSR set to: 0
  4722  002C60  C0D3  FFD9         	movff	strtok@sp,fsr2l
  4723  002C64  C0D4  FFDA         	movff	strtok@sp+1,fsr2h
  4724  002C68  0E00               	movlw	0
  4725  002C6A  6EDF               	movwf	indf2,c
  4726                           
  4727                           ; BSR set to: 0
  4728  002C6C  4BD3               	infsnz	strtok@sp& (0+255),f,b
  4729  002C6E  2BD4               	incf	(strtok@sp+1)& (0+255),f,b
  4730  002C70  D004               	goto	l1062
  4731  002C72                     l1061:
  4732                           
  4733                           ; BSR set to: 0
  4734                           
  4735                           ; BSR set to: 0
  4736  002C72  0E00               	movlw	0
  4737  002C74  6FD3               	movwf	strtok@sp& (0+255),b
  4738  002C76  0E00               	movlw	0
  4739  002C78  6FD4               	movwf	(strtok@sp+1)& (0+255),b
  4740  002C7A                     l1062:
  4741                           
  4742                           ; BSR set to: 0
  4743  002C7A  C0A8  F0A8         	movff	strtok@s1,?_strtok
  4744  002C7E  C0A9  F0A9         	movff	strtok@s1+1,?_strtok+1
  4745  002C82  0012               	return	
  4746  002C84                     __end_of_strtok:
  4747                           	opt stack 0
  4748                           tblptru	equ	0xFF8
  4749                           tblptrh	equ	0xFF7
  4750                           tblptrl	equ	0xFF6
  4751                           tablat	equ	0xFF5
  4752                           intcon	equ	0xFF2
  4753                           postinc0	equ	0xFEE
  4754                           wreg	equ	0xFE8
  4755                           indf2	equ	0xFDF
  4756                           postinc2	equ	0xFDE
  4757                           fsr2h	equ	0xFDA
  4758                           fsr2l	equ	0xFD9
  4759                           status	equ	0xFD8
  4760                           
  4761 ;; *************** function _strspn *****************
  4762 ;; Defined at:
  4763 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strspn.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  s1              2   33[BANK0 ] PTR const unsigned char 
  4766 ;;		 -> Music@str4(50), Music@str3(50), Music@str2(50), NULL(0), 
  4767 ;;		 -> Music@str1(50), str(10), 
  4768 ;;  s2              2   35[BANK0 ] PTR const unsigned char 
  4769 ;;		 -> STR_9(2), STR_7(2), STR_5(2), STR_3(2), 
  4770 ;;		 -> STR_1(2), 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  i               2   38[BANK0 ] unsigned int 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  2   33[BANK0 ] unsigned int 
  4775 ;; Registers used:
  4776 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4782 ;;      Params:         0       4       0       0       0       0       0
  4783 ;;      Locals:         0       2       0       0       0       0       0
  4784 ;;      Temps:          0       1       0       0       0       0       0
  4785 ;;      Totals:         0       7       0       0       0       0       0
  4786 ;;Total ram usage:        7 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    6
  4789 ;; This function calls:
  4790 ;;		_strchr
  4791 ;; This function is called by:
  4792 ;;		_strtok
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text12
  4797  002FE2                     __ptext12:
  4798                           	opt stack 0
  4799  002FE2                     _strspn:
  4800                           	opt stack 22
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;incstack = 0
  4804  002FE2  0E00               	movlw	0
  4805  002FE4  0100               	movlb	0	; () banked
  4806  002FE6  6FA7               	movwf	(strspn@i+1)& (0+255),b
  4807  002FE8  0E00               	movlw	0
  4808  002FEA  6FA6               	movwf	strspn@i& (0+255),b
  4809  002FEC  D004               	goto	l1117
  4810  002FEE                     
  4811                           ; BSR set to: 0
  4812                           
  4813                           ; BSR set to: 0
  4814  002FEE  4BA1               	infsnz	strspn@s1& (0+255),f,b
  4815  002FF0  2BA2               	incf	(strspn@s1+1)& (0+255),f,b
  4816  002FF2  4BA6               	infsnz	strspn@i& (0+255),f,b
  4817  002FF4  2BA7               	incf	(strspn@i+1)& (0+255),f,b
  4818  002FF6                     l1117:
  4819                           
  4820                           ; BSR set to: 0
  4821                           
  4822                           ; BSR set to: 0
  4823  002FF6  C0A1  FFD9         	movff	strspn@s1,fsr2l
  4824  002FFA  C0A2  FFDA         	movff	strspn@s1+1,fsr2h
  4825  002FFE  50DF               	movf	indf2,w,c
  4826  003000  B4D8               	btfsc	status,2,c
  4827  003002  D014               	goto	u6630
  4828                           
  4829                           ; BSR set to: 0
  4830  003004  C0A3  F09B         	movff	strspn@s2,strchr@ptr
  4831  003008  C0A4  F09C         	movff	strspn@s2+1,strchr@ptr+1
  4832  00300C  C0A1  FFD9         	movff	strspn@s1,fsr2l
  4833  003010  C0A2  FFDA         	movff	strspn@s1+1,fsr2h
  4834  003014  50DF               	movf	indf2,w,c
  4835  003016  6FA5               	movwf	??_strspn& (0+255),b
  4836  003018  51A5               	movf	??_strspn& (0+255),w,b
  4837  00301A  6F9D               	movwf	strchr@chr& (0+255),b
  4838  00301C  6B9E               	clrf	(strchr@chr+1)& (0+255),b
  4839  00301E  EC4F  F017         	call	_strchr	;wreg free
  4840  003022  0100               	movlb	0	; () banked
  4841  003024  519B               	movf	?_strchr& (0+255),w,b
  4842  003026  119C               	iorwf	(?_strchr+1)& (0+255),w,b
  4843  003028  A4D8               	btfss	status,2,c
  4844  00302A  D7E1               	goto	l1118
  4845  00302C                     u6630:
  4846                           
  4847                           ; BSR set to: 0
  4848                           
  4849                           ; BSR set to: 0
  4850  00302C  C0A6  F0A1         	movff	strspn@i,?_strspn
  4851  003030  C0A7  F0A2         	movff	strspn@i+1,?_strspn+1
  4852                           
  4853                           ; BSR set to: 0
  4854  003034  0012               	return		;funcret
  4855  003036                     __end_of_strspn:
  4856                           	opt stack 0
  4857                           tblptru	equ	0xFF8
  4858                           tblptrh	equ	0xFF7
  4859                           tblptrl	equ	0xFF6
  4860                           tablat	equ	0xFF5
  4861                           intcon	equ	0xFF2
  4862                           postinc0	equ	0xFEE
  4863                           wreg	equ	0xFE8
  4864                           indf2	equ	0xFDF
  4865                           postinc2	equ	0xFDE
  4866                           fsr2h	equ	0xFDA
  4867                           fsr2l	equ	0xFD9
  4868                           status	equ	0xFD8
  4869                           
  4870 ;; *************** function _strcspn *****************
  4871 ;; Defined at:
  4872 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcspn.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  s1              2   33[BANK0 ] PTR const unsigned char 
  4875 ;;		 -> Music@str4(50), Music@str3(50), Music@str2(50), NULL(0), 
  4876 ;;		 -> Music@str1(50), str(10), 
  4877 ;;  s2              2   35[BANK0 ] PTR const unsigned char 
  4878 ;;		 -> STR_9(2), STR_7(2), STR_5(2), STR_3(2), 
  4879 ;;		 -> STR_1(2), 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  i               2   38[BANK0 ] unsigned int 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  2   33[BANK0 ] unsigned int 
  4884 ;; Registers used:
  4885 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4891 ;;      Params:         0       4       0       0       0       0       0
  4892 ;;      Locals:         0       2       0       0       0       0       0
  4893 ;;      Temps:          0       1       0       0       0       0       0
  4894 ;;      Totals:         0       7       0       0       0       0       0
  4895 ;;Total ram usage:        7 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    6
  4898 ;; This function calls:
  4899 ;;		_strchr
  4900 ;; This function is called by:
  4901 ;;		_strtok
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text13
  4906  003036                     __ptext13:
  4907                           	opt stack 0
  4908  003036                     _strcspn:
  4909                           	opt stack 22
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;incstack = 0
  4913  003036  0E00               	movlw	0
  4914  003038  0100               	movlb	0	; () banked
  4915  00303A  6FA7               	movwf	(strcspn@i+1)& (0+255),b
  4916  00303C  0E00               	movlw	0
  4917  00303E  6FA6               	movwf	strcspn@i& (0+255),b
  4918  003040  D004               	goto	l1092
  4919  003042                     
  4920                           ; BSR set to: 0
  4921                           
  4922                           ; BSR set to: 0
  4923  003042  4BA1               	infsnz	strcspn@s1& (0+255),f,b
  4924  003044  2BA2               	incf	(strcspn@s1+1)& (0+255),f,b
  4925  003046  4BA6               	infsnz	strcspn@i& (0+255),f,b
  4926  003048  2BA7               	incf	(strcspn@i+1)& (0+255),f,b
  4927  00304A                     l1092:
  4928                           
  4929                           ; BSR set to: 0
  4930                           
  4931                           ; BSR set to: 0
  4932  00304A  C0A1  FFD9         	movff	strcspn@s1,fsr2l
  4933  00304E  C0A2  FFDA         	movff	strcspn@s1+1,fsr2h
  4934  003052  50DF               	movf	indf2,w,c
  4935  003054  B4D8               	btfsc	status,2,c
  4936  003056  D014               	goto	u6650
  4937                           
  4938                           ; BSR set to: 0
  4939  003058  C0A3  F09B         	movff	strcspn@s2,strchr@ptr
  4940  00305C  C0A4  F09C         	movff	strcspn@s2+1,strchr@ptr+1
  4941  003060  C0A1  FFD9         	movff	strcspn@s1,fsr2l
  4942  003064  C0A2  FFDA         	movff	strcspn@s1+1,fsr2h
  4943  003068  50DF               	movf	indf2,w,c
  4944  00306A  6FA5               	movwf	??_strcspn& (0+255),b
  4945  00306C  51A5               	movf	??_strcspn& (0+255),w,b
  4946  00306E  6F9D               	movwf	strchr@chr& (0+255),b
  4947  003070  6B9E               	clrf	(strchr@chr+1)& (0+255),b
  4948  003072  EC4F  F017         	call	_strchr	;wreg free
  4949  003076  0100               	movlb	0	; () banked
  4950  003078  519B               	movf	?_strchr& (0+255),w,b
  4951  00307A  119C               	iorwf	(?_strchr+1)& (0+255),w,b
  4952  00307C  B4D8               	btfsc	status,2,c
  4953  00307E  D7E1               	goto	l1093
  4954  003080                     u6650:
  4955                           
  4956                           ; BSR set to: 0
  4957                           
  4958                           ; BSR set to: 0
  4959  003080  C0A6  F0A1         	movff	strcspn@i,?_strcspn
  4960  003084  C0A7  F0A2         	movff	strcspn@i+1,?_strcspn+1
  4961                           
  4962                           ; BSR set to: 0
  4963  003088  0012               	return		;funcret
  4964  00308A                     __end_of_strcspn:
  4965                           	opt stack 0
  4966                           tblptru	equ	0xFF8
  4967                           tblptrh	equ	0xFF7
  4968                           tblptrl	equ	0xFF6
  4969                           tablat	equ	0xFF5
  4970                           intcon	equ	0xFF2
  4971                           postinc0	equ	0xFEE
  4972                           wreg	equ	0xFE8
  4973                           indf2	equ	0xFDF
  4974                           postinc2	equ	0xFDE
  4975                           fsr2h	equ	0xFDA
  4976                           fsr2l	equ	0xFD9
  4977                           status	equ	0xFD8
  4978                           
  4979 ;; *************** function _strstr *****************
  4980 ;; Defined at:
  4981 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strstr.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  s1              2   42[BANK0 ] PTR const unsigned char 
  4984 ;;		 -> STR_9(2), Music@str4(50), STR_7(2), Music@str3(50), 
  4985 ;;		 -> STR_5(2), Music@str2(50), STR_3(2), NULL(0), 
  4986 ;;		 -> Music@str1(50), STR_1(2), str(10), 
  4987 ;;  s2              2   44[BANK0 ] PTR const unsigned char 
  4988 ;;		 -> STR_28(2), STR_27(2), STR_25(2), STR_24(2), 
  4989 ;;		 -> STR_23(2), STR_22(2), STR_21(2), STR_20(2), 
  4990 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  4991 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  4992 ;;		 -> STR_11(2), STR_10(2), STR_8(2), STR_6(2), 
  4993 ;;		 -> STR_4(2), STR_2(2), 
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;		None
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  2   42[BANK0 ] PTR unsigned char 
  4998 ;; Registers used:
  4999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5005 ;;      Params:         0       4       0       0       0       0       0
  5006 ;;      Locals:         0       0       0       0       0       0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0
  5008 ;;      Totals:         0       4       0       0       0       0       0
  5009 ;;Total ram usage:        4 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:    6
  5012 ;; This function calls:
  5013 ;;		_strchr
  5014 ;;		_strlen
  5015 ;;		_strncmp
  5016 ;; This function is called by:
  5017 ;;		_Music
  5018 ;;		_main
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text14
  5023  002C84                     __ptext14:
  5024                           	opt stack 0
  5025  002C84                     _strstr:
  5026                           	opt stack 24
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;incstack = 0
  5030  002C84  D032               	goto	l1042
  5031  002C86  C0AA  F0A1         	movff	strstr@s1,strncmp@s1
  5032  002C8A  C0AB  F0A2         	movff	strstr@s1+1,strncmp@s1+1
  5033  002C8E  C0AC  F0A3         	movff	strstr@s2,strncmp@s2
  5034  002C92  C0AD  F0A4         	movff	strstr@s2+1,strncmp@s2+1
  5035  002C96  C0AC  F09B         	movff	strstr@s2,strlen@s
  5036  002C9A  C0AD  F09C         	movff	strstr@s2+1,strlen@s+1
  5037  002C9E  ECDB  F018         	call	_strlen	;wreg free
  5038  002CA2  C09B  F0A5         	movff	?_strlen,strncmp@len
  5039  002CA6  C09C  F0A6         	movff	?_strlen+1,strncmp@len+1
  5040  002CAA  EC18  F015         	call	_strncmp	;wreg free
  5041  002CAE  0100               	movlb	0	; () banked
  5042  002CB0  51A1               	movf	?_strncmp& (0+255),w,b
  5043  002CB2  11A2               	iorwf	(?_strncmp+1)& (0+255),w,b
  5044  002CB4  A4D8               	btfss	status,2,c
  5045  002CB6  D005               	goto	l1044
  5046                           
  5047                           ; BSR set to: 0
  5048  002CB8  C0AA  F0AA         	movff	strstr@s1,?_strstr
  5049  002CBC  C0AB  F0AB         	movff	strstr@s1+1,?_strstr+1
  5050                           
  5051                           ; BSR set to: 0
  5052  002CC0  0012               	return	
  5053  002CC2                     l1044:
  5054                           
  5055                           ; BSR set to: 0
  5056                           
  5057                           ; BSR set to: 0
  5058  002CC2  0E01               	movlw	1
  5059  002CC4  25AA               	addwf	strstr@s1& (0+255),w,b
  5060  002CC6  6F9B               	movwf	strchr@ptr& (0+255),b
  5061  002CC8  0E00               	movlw	0
  5062  002CCA  21AB               	addwfc	(strstr@s1+1)& (0+255),w,b
  5063  002CCC  6F9C               	movwf	(strchr@ptr+1)& (0+255),b
  5064  002CCE  C0AC  FFF6         	movff	strstr@s2,tblptrl
  5065  002CD2  C0AD  FFF7         	movff	strstr@s2+1,tblptrh
  5066  002CD6                     	if	0	;tblptru may be non-zero
  5067  002CD6                     	endif
  5068  002CD6                     	if	0	;tblptru may be non-zero
  5069  002CD6                     	endif
  5070  002CD6  0008               	tblrd		*
  5071  002CD8  50F5               	movf	tablat,w,c
  5072  002CDA  6F9D               	movwf	strchr@chr& (0+255),b
  5073  002CDC  6B9E               	clrf	(strchr@chr+1)& (0+255),b
  5074  002CDE  EC4F  F017         	call	_strchr	;wreg free
  5075  002CE2  C09B  F0AA         	movff	?_strchr,strstr@s1
  5076  002CE6  C09C  F0AB         	movff	?_strchr+1,strstr@s1+1
  5077  002CEA                     l1042:
  5078  002CEA  0100               	movlb	0	; () banked
  5079  002CEC  51AA               	movf	strstr@s1& (0+255),w,b
  5080  002CEE  11AB               	iorwf	(strstr@s1+1)& (0+255),w,b
  5081  002CF0  B4D8               	btfsc	status,2,c
  5082  002CF2  D013               	goto	u6840
  5083                           
  5084                           ; BSR set to: 0
  5085  002CF4  C0AA  FFF6         	movff	strstr@s1,tblptrl
  5086  002CF8  C0AB  FFF7         	movff	strstr@s1+1,tblptrh
  5087  002CFC  6AF8               	clrf	tblptru,c
  5088  002CFE  0E05               	movlw	(high __ramtop+-1)
  5089  002D00  64F7               	cpfsgt	tblptrh,c
  5090  002D02  D003               	bra	u6837
  5091  002D04  0008               	tblrd		*
  5092  002D06  50F5               	movf	tablat,w,c
  5093  002D08  D005               	bra	u6830
  5094  002D0A                     u6837:
  5095  002D0A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5096  002D0E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5097  002D12  50EF               	movf	indf0,w,c
  5098  002D14                     u6830:
  5099  002D14  0900               	iorlw	0
  5100  002D16  A4D8               	btfss	status,2,c
  5101  002D18  D7B6               	goto	l1043
  5102  002D1A                     u6840:
  5103  002D1A  0E00               	movlw	0
  5104  002D1C  0100               	movlb	0	; () banked
  5105  002D1E  6FAA               	movwf	?_strstr& (0+255),b
  5106  002D20  0E00               	movlw	0
  5107  002D22  6FAB               	movwf	(?_strstr+1)& (0+255),b
  5108  002D24  0012               	return	
  5109  002D26                     __end_of_strstr:
  5110                           	opt stack 0
  5111                           tblptru	equ	0xFF8
  5112                           tblptrh	equ	0xFF7
  5113                           tblptrl	equ	0xFF6
  5114                           tablat	equ	0xFF5
  5115                           intcon	equ	0xFF2
  5116                           indf0	equ	0xFEF
  5117                           postinc0	equ	0xFEE
  5118                           fsr0h	equ	0xFEA
  5119                           fsr0l	equ	0xFE9
  5120                           wreg	equ	0xFE8
  5121                           indf2	equ	0xFDF
  5122                           postinc2	equ	0xFDE
  5123                           fsr2h	equ	0xFDA
  5124                           fsr2l	equ	0xFD9
  5125                           status	equ	0xFD8
  5126                           
  5127 ;; *************** function _strncmp *****************
  5128 ;; Defined at:
  5129 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  s1              2   33[BANK0 ] PTR const unsigned char 
  5132 ;;		 -> STR_9(2), Music@str4(50), STR_7(2), Music@str3(50), 
  5133 ;;		 -> STR_5(2), Music@str2(50), STR_3(2), NULL(0), 
  5134 ;;		 -> Music@str1(50), STR_1(2), str(10), 
  5135 ;;  s2              2   35[BANK0 ] PTR const unsigned char 
  5136 ;;		 -> STR_28(2), STR_27(2), STR_25(2), STR_24(2), 
  5137 ;;		 -> STR_23(2), STR_22(2), STR_21(2), STR_20(2), 
  5138 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  5139 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  5140 ;;		 -> STR_11(2), STR_10(2), STR_8(2), STR_6(2), 
  5141 ;;		 -> STR_4(2), STR_2(2), 
  5142 ;;  len             2   37[BANK0 ] unsigned int 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  2   33[BANK0 ] int 
  5147 ;; Registers used:
  5148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5154 ;;      Params:         0       6       0       0       0       0       0
  5155 ;;      Locals:         0       0       0       0       0       0       0
  5156 ;;      Temps:          0       3       0       0       0       0       0
  5157 ;;      Totals:         0       9       0       0       0       0       0
  5158 ;;Total ram usage:        9 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; Hardware stack levels required when called:    5
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_strstr
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text15
  5169  002A30                     __ptext15:
  5170                           	opt stack 0
  5171  002A30                     _strncmp:
  5172                           	opt stack 24
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;incstack = 0
  5176  002A30  D059               	goto	l1106
  5177  002A32                     l5306:
  5178  002A32  C0A1  FFF6         	movff	strncmp@s1,tblptrl
  5179  002A36  C0A2  FFF7         	movff	strncmp@s1+1,tblptrh
  5180  002A3A  6AF8               	clrf	tblptru,c
  5181  002A3C  0E05               	movlw	(high __ramtop+-1)
  5182  002A3E  64F7               	cpfsgt	tblptrh,c
  5183  002A40  D003               	bra	u6577
  5184  002A42  0008               	tblrd		*
  5185  002A44  50F5               	movf	tablat,w,c
  5186  002A46  D005               	bra	u6570
  5187  002A48                     u6577:
  5188  002A48  CFF6 FFE9          	movff	tblptrl,fsr0l
  5189  002A4C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5190  002A50  50EF               	movf	indf0,w,c
  5191  002A52                     u6570:
  5192  002A52  0900               	iorlw	0
  5193  002A54  B4D8               	btfsc	status,2,c
  5194  002A56  D01B               	goto	u6590
  5195  002A58  C0A3  FFF6         	movff	strncmp@s2,tblptrl
  5196  002A5C  C0A4  FFF7         	movff	strncmp@s2+1,tblptrh
  5197  002A60                     	if	0	;tblptru may be non-zero
  5198  002A60                     	endif
  5199  002A60                     	if	0	;tblptru may be non-zero
  5200  002A60                     	endif
  5201  002A60  0008               	tblrd		*
  5202  002A62  CFF5 F0A7          	movff	tablat,??_strncmp
  5203  002A66  C0A1  FFF6         	movff	strncmp@s1,tblptrl
  5204  002A6A  C0A2  FFF7         	movff	strncmp@s1+1,tblptrh
  5205  002A6E  6AF8               	clrf	tblptru,c
  5206  002A70  0100               	movlb	0	; () banked
  5207  002A72  0E05               	movlw	(high __ramtop+-1)
  5208  002A74  64F7               	cpfsgt	tblptrh,c
  5209  002A76  D003               	bra	u6597
  5210  002A78  0008               	tblrd		*
  5211  002A7A  50F5               	movf	tablat,w,c
  5212  002A7C  D005               	bra	u6595
  5213  002A7E                     u6597:
  5214  002A7E  CFF6 FFE9          	movff	tblptrl,fsr0l
  5215  002A82  CFF7 FFEA          	movff	tblptrh,fsr0h
  5216  002A86  50EF               	movf	indf0,w,c
  5217  002A88                     u6595:
  5218  002A88  19A7               	xorwf	??_strncmp& (0+255),w,b
  5219  002A8A  B4D8               	btfsc	status,2,c
  5220  002A8C  D026               	goto	l1108
  5221  002A8E                     u6590:
  5222  002A8E  C0A3  FFF6         	movff	strncmp@s2,tblptrl
  5223  002A92  C0A4  FFF7         	movff	strncmp@s2+1,tblptrh
  5224  002A96                     	if	0	;tblptru may be non-zero
  5225  002A96                     	endif
  5226  002A96                     	if	0	;tblptru may be non-zero
  5227  002A96                     	endif
  5228  002A96  0008               	tblrd		*
  5229  002A98  50F5               	movf	tablat,w,c
  5230  002A9A  0100               	movlb	0	; () banked
  5231  002A9C  6FA7               	movwf	??_strncmp& (0+255),b
  5232  002A9E  6BA8               	clrf	(??_strncmp+1)& (0+255),b
  5233  002AA0  1FA7               	comf	??_strncmp& (0+255),f,b
  5234  002AA2  1FA8               	comf	(??_strncmp+1)& (0+255),f,b
  5235  002AA4  4BA7               	infsnz	??_strncmp& (0+255),f,b
  5236  002AA6  2BA8               	incf	(??_strncmp+1)& (0+255),f,b
  5237  002AA8  C0A1  FFF6         	movff	strncmp@s1,tblptrl
  5238  002AAC  C0A2  FFF7         	movff	strncmp@s1+1,tblptrh
  5239  002AB0  6AF8               	clrf	tblptru,c
  5240  002AB2  0E05               	movlw	(high __ramtop+-1)
  5241  002AB4  64F7               	cpfsgt	tblptrh,c
  5242  002AB6  D003               	bra	u6607
  5243  002AB8  0008               	tblrd		*
  5244  002ABA  50F5               	movf	tablat,w,c
  5245  002ABC  D005               	bra	u6600
  5246  002ABE                     u6607:
  5247  002ABE  CFF6 FFE9          	movff	tblptrl,fsr0l
  5248  002AC2  CFF7 FFEA          	movff	tblptrh,fsr0h
  5249  002AC6  50EF               	movf	indf0,w,c
  5250  002AC8                     u6600:
  5251  002AC8  0100               	movlb	0	; () banked
  5252  002ACA  6FA9               	movwf	(??_strncmp+2)& (0+255),b
  5253  002ACC  51A9               	movf	(??_strncmp+2)& (0+255),w,b
  5254  002ACE  25A7               	addwf	??_strncmp& (0+255),w,b
  5255  002AD0  6FA1               	movwf	?_strncmp& (0+255),b
  5256  002AD2  0E00               	movlw	0
  5257  002AD4  21A8               	addwfc	(??_strncmp+1)& (0+255),w,b
  5258  002AD6  6FA2               	movwf	(?_strncmp+1)& (0+255),b
  5259                           
  5260                           ; BSR set to: 0
  5261  002AD8  0012               	return	
  5262  002ADA                     l1108:
  5263                           
  5264                           ; BSR set to: 0
  5265  002ADA  0100               	movlb	0	; () banked
  5266  002ADC  4BA1               	infsnz	strncmp@s1& (0+255),f,b
  5267  002ADE  2BA2               	incf	(strncmp@s1+1)& (0+255),f,b
  5268  002AE0  4BA3               	infsnz	strncmp@s2& (0+255),f,b
  5269  002AE2  2BA4               	incf	(strncmp@s2+1)& (0+255),f,b
  5270  002AE4                     l1106:
  5271                           
  5272                           ; BSR set to: 0
  5273  002AE4  0100               	movlb	0	; () banked
  5274  002AE6  07A5               	decf	strncmp@len& (0+255),f,b
  5275  002AE8  A0D8               	btfss	status,0,c
  5276  002AEA  07A6               	decf	(strncmp@len+1)& (0+255),f,b
  5277  002AEC  29A5               	incf	strncmp@len& (0+255),w,b
  5278  002AEE  E1A1               	bnz	l5306
  5279  002AF0  29A6               	incf	(strncmp@len+1)& (0+255),w,b
  5280  002AF2  A4D8               	btfss	status,2,c
  5281  002AF4  D79E               	goto	l1107
  5282                           
  5283                           ; BSR set to: 0
  5284                           
  5285                           ; BSR set to: 0
  5286  002AF6  0E00               	movlw	0
  5287  002AF8  6FA2               	movwf	(?_strncmp+1)& (0+255),b
  5288  002AFA  0E00               	movlw	0
  5289  002AFC  6FA1               	movwf	?_strncmp& (0+255),b
  5290  002AFE  0012               	return	
  5291  002B00                     __end_of_strncmp:
  5292                           	opt stack 0
  5293                           tblptru	equ	0xFF8
  5294                           tblptrh	equ	0xFF7
  5295                           tblptrl	equ	0xFF6
  5296                           tablat	equ	0xFF5
  5297                           intcon	equ	0xFF2
  5298                           indf0	equ	0xFEF
  5299                           postinc0	equ	0xFEE
  5300                           fsr0h	equ	0xFEA
  5301                           fsr0l	equ	0xFE9
  5302                           wreg	equ	0xFE8
  5303                           indf2	equ	0xFDF
  5304                           postinc2	equ	0xFDE
  5305                           fsr2h	equ	0xFDA
  5306                           fsr2l	equ	0xFD9
  5307                           status	equ	0xFD8
  5308                           
  5309 ;; *************** function _strlen *****************
  5310 ;; Defined at:
  5311 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  s               2   27[BANK0 ] PTR const unsigned char 
  5314 ;;		 -> STR_28(2), STR_27(2), STR_25(2), STR_24(2), 
  5315 ;;		 -> STR_23(2), STR_22(2), STR_21(2), STR_20(2), 
  5316 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  5317 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  5318 ;;		 -> STR_11(2), STR_10(2), STR_8(2), STR_6(2), 
  5319 ;;		 -> STR_4(2), STR_2(2), 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;  cp              2   31[BANK0 ] PTR const unsigned char 
  5322 ;;		 -> STR_28(2), STR_27(2), STR_25(2), STR_24(2), 
  5323 ;;		 -> STR_23(2), STR_22(2), STR_21(2), STR_20(2), 
  5324 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  5325 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  5326 ;;		 -> STR_11(2), STR_10(2), STR_8(2), STR_6(2), 
  5327 ;;		 -> STR_4(2), STR_2(2), 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  2   27[BANK0 ] unsigned int 
  5330 ;; Registers used:
  5331 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5337 ;;      Params:         0       2       0       0       0       0       0
  5338 ;;      Locals:         0       2       0       0       0       0       0
  5339 ;;      Temps:          0       2       0       0       0       0       0
  5340 ;;      Totals:         0       6       0       0       0       0       0
  5341 ;;Total ram usage:        6 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    5
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_strstr
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text16
  5352  0031B6                     __ptext16:
  5353                           	opt stack 0
  5354  0031B6                     _strlen:
  5355                           	opt stack 24
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;incstack = 0
  5359  0031B6  C09B  F09F         	movff	strlen@s,strlen@cp
  5360  0031BA  C09C  F0A0         	movff	strlen@s+1,strlen@cp+1
  5361  0031BE  D003               	goto	l1100
  5362  0031C0  0100               	movlb	0	; () banked
  5363  0031C2  4B9F               	infsnz	strlen@cp& (0+255),f,b
  5364  0031C4  2BA0               	incf	(strlen@cp+1)& (0+255),f,b
  5365  0031C6                     l1100:
  5366                           
  5367                           ; BSR set to: 0
  5368  0031C6  C09F  FFF6         	movff	strlen@cp,tblptrl
  5369  0031CA  C0A0  FFF7         	movff	strlen@cp+1,tblptrh
  5370  0031CE                     	if	0	;tblptru may be non-zero
  5371  0031CE                     	endif
  5372  0031CE                     	if	0	;tblptru may be non-zero
  5373  0031CE                     	endif
  5374  0031CE  0008               	tblrd		*
  5375  0031D0  50F5               	movf	tablat,w,c
  5376  0031D2  0900               	iorlw	0
  5377  0031D4  A4D8               	btfss	status,2,c
  5378  0031D6  D7F4               	goto	l1101
  5379  0031D8  C09B  F09D         	movff	strlen@s,??_strlen
  5380  0031DC  C09C  F09E         	movff	strlen@s+1,??_strlen+1
  5381  0031E0  0100               	movlb	0	; () banked
  5382  0031E2  1F9D               	comf	??_strlen& (0+255),f,b
  5383  0031E4  1F9E               	comf	(??_strlen+1)& (0+255),f,b
  5384  0031E6  4B9D               	infsnz	??_strlen& (0+255),f,b
  5385  0031E8  2B9E               	incf	(??_strlen+1)& (0+255),f,b
  5386  0031EA  519F               	movf	strlen@cp& (0+255),w,b
  5387  0031EC  259D               	addwf	??_strlen& (0+255),w,b
  5388  0031EE  6F9B               	movwf	?_strlen& (0+255),b
  5389  0031F0  51A0               	movf	(strlen@cp+1)& (0+255),w,b
  5390  0031F2  219E               	addwfc	(??_strlen+1)& (0+255),w,b
  5391  0031F4  6F9C               	movwf	(?_strlen+1)& (0+255),b
  5392  0031F6  0012               	return	
  5393  0031F8                     __end_of_strlen:
  5394                           	opt stack 0
  5395                           tblptru	equ	0xFF8
  5396                           tblptrh	equ	0xFF7
  5397                           tblptrl	equ	0xFF6
  5398                           tablat	equ	0xFF5
  5399                           intcon	equ	0xFF2
  5400                           indf0	equ	0xFEF
  5401                           postinc0	equ	0xFEE
  5402                           fsr0h	equ	0xFEA
  5403                           fsr0l	equ	0xFE9
  5404                           wreg	equ	0xFE8
  5405                           indf2	equ	0xFDF
  5406                           postinc2	equ	0xFDE
  5407                           fsr2h	equ	0xFDA
  5408                           fsr2l	equ	0xFD9
  5409                           status	equ	0xFD8
  5410                           
  5411 ;; *************** function _strchr *****************
  5412 ;; Defined at:
  5413 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strchr.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;  ptr             2   27[BANK0 ] PTR const unsigned char 
  5416 ;;		 -> STR_9(2), Music@str4(50), STR_7(2), Music@str3(50), 
  5417 ;;		 -> STR_5(2), Music@str2(50), STR_3(2), NULL(0), 
  5418 ;;		 -> Music@str1(50), STR_1(2), str(10), 
  5419 ;;  chr             2   29[BANK0 ] int 
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  2   27[BANK0 ] PTR unsigned char 
  5424 ;; Registers used:
  5425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5431 ;;      Params:         0       4       0       0       0       0       0
  5432 ;;      Locals:         0       0       0       0       0       0       0
  5433 ;;      Temps:          0       2       0       0       0       0       0
  5434 ;;      Totals:         0       6       0       0       0       0       0
  5435 ;;Total ram usage:        6 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    5
  5438 ;; This function calls:
  5439 ;;		Nothing
  5440 ;; This function is called by:
  5441 ;;		_strstr
  5442 ;;		_strcspn
  5443 ;;		_strspn
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text17
  5448  002E9E                     __ptext17:
  5449                           	opt stack 0
  5450  002E9E                     _strchr:
  5451                           	opt stack 24
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;incstack = 0
  5455  002E9E  C09B  FFF6         	movff	strchr@ptr,tblptrl
  5456  002EA2  C09C  FFF7         	movff	strchr@ptr+1,tblptrh
  5457  002EA6  6AF8               	clrf	tblptru,c
  5458  002EA8  0E05               	movlw	(high __ramtop+-1)
  5459  002EAA  64F7               	cpfsgt	tblptrh,c
  5460  002EAC  D003               	bra	u6367
  5461  002EAE  0008               	tblrd		*
  5462  002EB0  50F5               	movf	tablat,w,c
  5463  002EB2  D005               	bra	u6360
  5464  002EB4                     u6367:
  5465  002EB4  CFF6 FFE9          	movff	tblptrl,fsr0l
  5466  002EB8  CFF7 FFEA          	movff	tblptrh,fsr0h
  5467  002EBC  50EF               	movf	indf0,w,c
  5468  002EBE                     u6360:
  5469  002EBE  0100               	movlb	0	; () banked
  5470  002EC0  199D               	xorwf	strchr@chr& (0+255),w,b
  5471  002EC2  A4D8               	btfss	status,2,c
  5472  002EC4  D005               	goto	l1085
  5473                           
  5474                           ; BSR set to: 0
  5475  002EC6  C09B  F09B         	movff	strchr@ptr,?_strchr
  5476  002ECA  C09C  F09C         	movff	strchr@ptr+1,?_strchr+1
  5477                           
  5478                           ; BSR set to: 0
  5479  002ECE  0012               	return	
  5480  002ED0                     l1085:
  5481                           
  5482                           ; BSR set to: 0
  5483                           
  5484                           ; BSR set to: 0
  5485  002ED0  519B               	movf	strchr@ptr& (0+255),w,b
  5486  002ED2  6F9F               	movwf	??_strchr& (0+255),b
  5487  002ED4  519C               	movf	(strchr@ptr+1)& (0+255),w,b
  5488  002ED6  6FA0               	movwf	(??_strchr+1)& (0+255),b
  5489  002ED8  4B9B               	infsnz	strchr@ptr& (0+255),f,b
  5490  002EDA  2B9C               	incf	(strchr@ptr+1)& (0+255),f,b
  5491  002EDC  C09F  FFF6         	movff	??_strchr,tblptrl
  5492  002EE0  C0A0  FFF7         	movff	??_strchr+1,tblptrh
  5493  002EE4  6AF8               	clrf	tblptru,c
  5494  002EE6  0E05               	movlw	(high __ramtop+-1)
  5495  002EE8  64F7               	cpfsgt	tblptrh,c
  5496  002EEA  D003               	bra	u6387
  5497  002EEC  0008               	tblrd		*
  5498  002EEE  50F5               	movf	tablat,w,c
  5499  002EF0  D005               	bra	u6380
  5500  002EF2                     u6387:
  5501  002EF2  CFF6 FFE9          	movff	tblptrl,fsr0l
  5502  002EF6  CFF7 FFEA          	movff	tblptrh,fsr0h
  5503  002EFA  50EF               	movf	indf0,w,c
  5504  002EFC                     u6380:
  5505  002EFC  0900               	iorlw	0
  5506  002EFE  A4D8               	btfss	status,2,c
  5507  002F00  D7CE               	goto	_strchr
  5508  002F02  0E00               	movlw	0
  5509  002F04  0100               	movlb	0	; () banked
  5510  002F06  6F9B               	movwf	?_strchr& (0+255),b
  5511  002F08  0E00               	movlw	0
  5512  002F0A  6F9C               	movwf	(?_strchr+1)& (0+255),b
  5513  002F0C  0012               	return	
  5514  002F0E                     __end_of_strchr:
  5515                           	opt stack 0
  5516                           tblptru	equ	0xFF8
  5517                           tblptrh	equ	0xFF7
  5518                           tblptrl	equ	0xFF6
  5519                           tablat	equ	0xFF5
  5520                           intcon	equ	0xFF2
  5521                           indf0	equ	0xFEF
  5522                           postinc0	equ	0xFEE
  5523                           fsr0h	equ	0xFEA
  5524                           fsr0l	equ	0xFE9
  5525                           wreg	equ	0xFE8
  5526                           indf2	equ	0xFDF
  5527                           postinc2	equ	0xFDE
  5528                           fsr2h	equ	0xFDA
  5529                           fsr2l	equ	0xFD9
  5530                           status	equ	0xFD8
  5531                           
  5532 ;; *************** function _strcpy *****************
  5533 ;; Defined at:
  5534 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcpy.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;  to              2   29[BANK0 ] PTR unsigned char 
  5537 ;;		 -> Music@str4(50), Music@str3(50), Music@str2(50), Music@str1(50), 
  5538 ;;		 -> str(10), 
  5539 ;;  from            2   31[BANK0 ] PTR const unsigned char 
  5540 ;;		 -> mystring(10), 
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;  cp              2   33[BANK0 ] PTR unsigned char 
  5543 ;;		 -> Music@str4(50), Music@str3(50), Music@str2(50), Music@str1(50), 
  5544 ;;		 -> str(10), 
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  2   29[BANK0 ] PTR unsigned char 
  5547 ;; Registers used:
  5548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5554 ;;      Params:         0       4       0       0       0       0       0
  5555 ;;      Locals:         0       2       0       0       0       0       0
  5556 ;;      Temps:          0       0       0       0       0       0       0
  5557 ;;      Totals:         0       6       0       0       0       0       0
  5558 ;;Total ram usage:        6 bytes
  5559 ;; Hardware stack levels used:    1
  5560 ;; Hardware stack levels required when called:    5
  5561 ;; This function calls:
  5562 ;;		Nothing
  5563 ;; This function is called by:
  5564 ;;		_Music
  5565 ;;		_main
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text18
  5570  003270                     __ptext18:
  5571                           	opt stack 0
  5572  003270                     _strcpy:
  5573                           	opt stack 25
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;incstack = 0
  5577  003270  C09D  F0A1         	movff	strcpy@to,strcpy@cp
  5578  003274  C09E  F0A2         	movff	strcpy@to+1,strcpy@cp+1
  5579  003278  D005               	goto	l1030
  5580  00327A  0100               	movlb	0	; () banked
  5581  00327C  4BA1               	infsnz	strcpy@cp& (0+255),f,b
  5582  00327E  2BA2               	incf	(strcpy@cp+1)& (0+255),f,b
  5583  003280  4B9F               	infsnz	strcpy@from& (0+255),f,b
  5584  003282  2BA0               	incf	(strcpy@from+1)& (0+255),f,b
  5585  003284                     l1030:
  5586                           
  5587                           ; BSR set to: 0
  5588  003284  C09F  FFD9         	movff	strcpy@from,fsr2l
  5589  003288  C0A0  FFDA         	movff	strcpy@from+1,fsr2h
  5590  00328C  C0A1  FFE1         	movff	strcpy@cp,fsr1l
  5591  003290  C0A2  FFE2         	movff	strcpy@cp+1,fsr1h
  5592  003294  CFDF FFE7          	movff	indf2,indf1
  5593  003298  50E7               	movf	indf1,w,c
  5594  00329A  B4D8               	btfsc	status,2,c
  5595  00329C  0012               	return	
  5596  00329E  D7ED               	goto	l1031
  5597  0032A0                     __end_of_strcpy:
  5598                           	opt stack 0
  5599                           tblptru	equ	0xFF8
  5600                           tblptrh	equ	0xFF7
  5601                           tblptrl	equ	0xFF6
  5602                           tablat	equ	0xFF5
  5603                           intcon	equ	0xFF2
  5604                           indf0	equ	0xFEF
  5605                           postinc0	equ	0xFEE
  5606                           fsr0h	equ	0xFEA
  5607                           fsr0l	equ	0xFE9
  5608                           wreg	equ	0xFE8
  5609                           indf1	equ	0xFE7
  5610                           fsr1h	equ	0xFE2
  5611                           fsr1l	equ	0xFE1
  5612                           indf2	equ	0xFDF
  5613                           postinc2	equ	0xFDE
  5614                           fsr2h	equ	0xFDA
  5615                           fsr2l	equ	0xFD9
  5616                           status	equ	0xFD8
  5617                           
  5618 ;; *************** function _playTone *****************
  5619 ;; Defined at:
  5620 ;;		line 183 in file "main.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      void 
  5627 ;; Registers used:
  5628 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5634 ;;      Params:         0       0       0       0       0       0       0
  5635 ;;      Locals:         0       0       0       0       0       0       0
  5636 ;;      Temps:          0       0       0       0       0       0       0
  5637 ;;      Totals:         0       0       0       0       0       0       0
  5638 ;;Total ram usage:        0 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    8
  5641 ;; This function calls:
  5642 ;;		_MusicPWM1_Duty
  5643 ;;		_MusicPWM1_Init
  5644 ;;		_delay_ms
  5645 ;; This function is called by:
  5646 ;;		_Music
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text19
  5651  002F0E                     __ptext19:
  5652                           	opt stack 0
  5653  002F0E                     _playTone:
  5654                           	opt stack 21
  5655                           
  5656                           ;main.c: 185: if (current_tone > 0) {
  5657                           
  5658                           ;incstack = 0
  5659  002F0E  0100               	movlb	0	; () banked
  5660  002F10  BFE4               	btfsc	(_current_tone+1)& (0+255),7,b
  5661  002F12  D028               	goto	l274
  5662  002F14  51E4               	movf	(_current_tone+1)& (0+255),w,b
  5663  002F16  E103               	bnz	u6680
  5664  002F18  05E3               	decf	_current_tone& (0+255),w,b
  5665  002F1A  A0D8               	btfss	status,0,c
  5666  002F1C  D023               	goto	l274
  5667  002F1E                     u6680:
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;main.c: 186: MusicPWM1_Init(current_tone);
  5671  002F1E  C0E3  F0A9         	movff	_current_tone,MusicPWM1_Init@desired_frequency
  5672  002F22  C0E4  F0AA         	movff	_current_tone+1,MusicPWM1_Init@desired_frequency+1
  5673  002F26  0E00               	movlw	0
  5674  002F28  BFAA               	btfsc	(MusicPWM1_Init@desired_frequency+1)& (0+255),7,b
  5675  002F2A  0EFF               	movlw	-1
  5676  002F2C  6FAB               	movwf	(MusicPWM1_Init@desired_frequency+2)& (0+255),b
  5677  002F2E  6FAC               	movwf	(MusicPWM1_Init@desired_frequency+3)& (0+255),b
  5678  002F30  ECBE  F017         	call	_MusicPWM1_Init	;wreg free
  5679                           
  5680                           ;main.c: 187: MusicPWM1_Duty(511);
  5681  002F34  0E01               	movlw	1
  5682  002F36  0101               	movlb	1	; () banked
  5683  002F38  6F25               	movwf	(MusicPWM1_Duty@duty+1)& (0+255),b
  5684  002F3A  6924               	setf	MusicPWM1_Duty@duty& (0+255),b
  5685  002F3C  EC5C  F013         	call	_MusicPWM1_Duty	;wreg free
  5686                           
  5687                           ;main.c: 189: delay_ms(current_tone_duration);
  5688  002F40  C0D5  F0A3         	movff	_current_tone_duration,delay_ms@milliseconds
  5689  002F44  C0D6  F0A4         	movff	_current_tone_duration+1,delay_ms@milliseconds+1
  5690  002F48  ECC6  F019         	call	_delay_ms	;wreg free
  5691                           
  5692                           ;main.c: 190: MusicPWM1_Duty(0);
  5693  002F4C  0E00               	movlw	0
  5694  002F4E  0101               	movlb	1	; () banked
  5695  002F50  6F25               	movwf	(MusicPWM1_Duty@duty+1)& (0+255),b
  5696  002F52  0E00               	movlw	0
  5697  002F54  6F24               	movwf	MusicPWM1_Duty@duty& (0+255),b
  5698  002F56  EC5C  F013         	call	_MusicPWM1_Duty	;wreg free
  5699                           
  5700                           ;main.c: 191: LATD = 0;
  5701  002F5A  0E00               	movlw	0
  5702  002F5C  6E8C               	movwf	3980,c	;volatile
  5703                           
  5704                           ;main.c: 192: LATB = 0;
  5705  002F5E  0E00               	movlw	0
  5706  002F60  6E8A               	movwf	3978,c	;volatile
  5707                           
  5708                           ;main.c: 193: }
  5709  002F62  0012               	return	
  5710  002F64                     l274:
  5711                           
  5712                           ;main.c: 194: else if(current_tone == 0){
  5713  002F64  0100               	movlb	0	; () banked
  5714  002F66  51E3               	movf	_current_tone& (0+255),w,b
  5715  002F68  11E4               	iorwf	(_current_tone+1)& (0+255),w,b
  5716  002F6A  A4D8               	btfss	status,2,c
  5717  002F6C  0012               	return	
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;main.c: 195: delay_ms(current_tone_duration);
  5721  002F6E  C0D5  F0A3         	movff	_current_tone_duration,delay_ms@milliseconds
  5722  002F72  C0D6  F0A4         	movff	_current_tone_duration+1,delay_ms@milliseconds+1
  5723  002F76  ECC6  F019         	call	_delay_ms	;wreg free
  5724  002F7A  0012               	return	
  5725  002F7C                     __end_of_playTone:
  5726                           	opt stack 0
  5727                           tblptru	equ	0xFF8
  5728                           tblptrh	equ	0xFF7
  5729                           tblptrl	equ	0xFF6
  5730                           tablat	equ	0xFF5
  5731                           intcon	equ	0xFF2
  5732                           indf0	equ	0xFEF
  5733                           postinc0	equ	0xFEE
  5734                           fsr0h	equ	0xFEA
  5735                           fsr0l	equ	0xFE9
  5736                           wreg	equ	0xFE8
  5737                           indf1	equ	0xFE7
  5738                           fsr1h	equ	0xFE2
  5739                           fsr1l	equ	0xFE1
  5740                           indf2	equ	0xFDF
  5741                           postinc2	equ	0xFDE
  5742                           fsr2h	equ	0xFDA
  5743                           fsr2l	equ	0xFD9
  5744                           status	equ	0xFD8
  5745                           
  5746 ;; *************** function _delay_ms *****************
  5747 ;; Defined at:
  5748 ;;		line 135 in file "main.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  milliseconds    2   35[BANK0 ] unsigned int 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;		None
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      void 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5762 ;;      Params:         0       2       0       0       0       0       0
  5763 ;;      Locals:         0       0       0       0       0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0
  5765 ;;      Totals:         0       2       0       0       0       0       0
  5766 ;;Total ram usage:        2 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    5
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		_playTone
  5773 ;;		_Music
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           	psect	text20
  5778  00338C                     __ptext20:
  5779                           	opt stack 0
  5780  00338C                     _delay_ms:
  5781                           	opt stack 23
  5782                           
  5783                           ;main.c: 136: while(milliseconds > 0) {
  5784                           
  5785                           ;incstack = 0
  5786  00338C  D008               	goto	l246
  5787  00338E                     
  5788                           ;main.c: 137: milliseconds--;
  5789  00338E  0100               	movlb	0	; () banked
  5790  003390  07A3               	decf	delay_ms@milliseconds& (0+255),f,b
  5791  003392  A0D8               	btfss	status,0,c
  5792  003394  07A4               	decf	(delay_ms@milliseconds+1)& (0+255),f,b
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;main.c: 138: _delay((unsigned long)((990)*(4000000/4000000.0)));
  5796  003396  0EC6               	movlw	198
  5797  003398                     u7777:
  5798  003398  D000               	nop2	
  5799  00339A  2EE8               	decfsz	wreg,f,c
  5800  00339C  D7FD               	bra	u7777
  5801  00339E                     l246:
  5802  00339E  0100               	movlb	0	; () banked
  5803  0033A0  51A3               	movf	delay_ms@milliseconds& (0+255),w,b
  5804  0033A2  11A4               	iorwf	(delay_ms@milliseconds+1)& (0+255),w,b
  5805  0033A4  B4D8               	btfsc	status,2,c
  5806  0033A6  0012               	return	
  5807  0033A8  D7F2               	goto	l247
  5808  0033AA                     __end_of_delay_ms:
  5809                           	opt stack 0
  5810                           tblptru	equ	0xFF8
  5811                           tblptrh	equ	0xFF7
  5812                           tblptrl	equ	0xFF6
  5813                           tablat	equ	0xFF5
  5814                           intcon	equ	0xFF2
  5815                           indf0	equ	0xFEF
  5816                           postinc0	equ	0xFEE
  5817                           fsr0h	equ	0xFEA
  5818                           fsr0l	equ	0xFE9
  5819                           wreg	equ	0xFE8
  5820                           indf1	equ	0xFE7
  5821                           fsr1h	equ	0xFE2
  5822                           fsr1l	equ	0xFE1
  5823                           indf2	equ	0xFDF
  5824                           postinc2	equ	0xFDE
  5825                           fsr2h	equ	0xFDA
  5826                           fsr2l	equ	0xFD9
  5827                           status	equ	0xFD8
  5828                           
  5829 ;; *************** function _MusicPWM1_Init *****************
  5830 ;; Defined at:
  5831 ;;		line 147 in file "main.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;  desired_freq    4   41[BANK0 ] long 
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;		None
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      void 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0, cstack
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5845 ;;      Params:         0       4       0       0       0       0       0
  5846 ;;      Locals:         0       0       0       0       0       0       0
  5847 ;;      Temps:          0       4       0       0       0       0       0
  5848 ;;      Totals:         0       8       0       0       0       0       0
  5849 ;;Total ram usage:        8 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; Hardware stack levels required when called:    6
  5852 ;; This function calls:
  5853 ;;		___aldiv
  5854 ;; This function is called by:
  5855 ;;		_playTone
  5856 ;;		_Music
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           	psect	text21
  5861  002F7C                     __ptext21:
  5862                           	opt stack 0
  5863  002F7C                     _MusicPWM1_Init:
  5864                           	opt stack 22
  5865                           
  5866                           ;main.c: 148: PR2 = (4000000 / (desired_frequency * 4 * 16)) - 1;
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;incstack = 0
  5870  002F7C  0E00               	movlw	0
  5871  002F7E  0100               	movlb	0	; () banked
  5872  002F80  6F9B               	movwf	___aldiv@dividend& (0+255),b
  5873  002F82  0E09               	movlw	9
  5874  002F84  6F9C               	movwf	(___aldiv@dividend+1)& (0+255),b
  5875  002F86  0E3D               	movlw	61
  5876  002F88  6F9D               	movwf	(___aldiv@dividend+2)& (0+255),b
  5877  002F8A  0E00               	movlw	0
  5878  002F8C  6F9E               	movwf	(___aldiv@dividend+3)& (0+255),b
  5879  002F8E  C0A9  F0AD         	movff	MusicPWM1_Init@desired_frequency,??_MusicPWM1_Init
  5880  002F92  C0AA  F0AE         	movff	MusicPWM1_Init@desired_frequency+1,??_MusicPWM1_Init+1
  5881  002F96  C0AB  F0AF         	movff	MusicPWM1_Init@desired_frequency+2,??_MusicPWM1_Init+2
  5882  002F9A  C0AC  F0B0         	movff	MusicPWM1_Init@desired_frequency+3,??_MusicPWM1_Init+3
  5883  002F9E  0E02               	movlw	2
  5884  002FA0                     u6515:
  5885  002FA0  90D8               	bcf	status,0,c
  5886  002FA2  37AD               	rlcf	??_MusicPWM1_Init& (0+255),f,b
  5887  002FA4  37AE               	rlcf	(??_MusicPWM1_Init+1)& (0+255),f,b
  5888  002FA6  37AF               	rlcf	(??_MusicPWM1_Init+2)& (0+255),f,b
  5889  002FA8  37B0               	rlcf	(??_MusicPWM1_Init+3)& (0+255),f,b
  5890  002FAA  2EE8               	decfsz	wreg,f,c
  5891  002FAC  D7F9               	goto	u6515
  5892  002FAE  0E04               	movlw	4
  5893  002FB0                     u6525:
  5894  002FB0  90D8               	bcf	status,0,c
  5895  002FB2  37AD               	rlcf	??_MusicPWM1_Init& (0+255),f,b
  5896  002FB4  37AE               	rlcf	(??_MusicPWM1_Init+1)& (0+255),f,b
  5897  002FB6  37AF               	rlcf	(??_MusicPWM1_Init+2)& (0+255),f,b
  5898  002FB8  37B0               	rlcf	(??_MusicPWM1_Init+3)& (0+255),f,b
  5899  002FBA  2EE8               	decfsz	wreg,f,c
  5900  002FBC  D7F9               	goto	u6525
  5901  002FBE  C0AD  F09F         	movff	??_MusicPWM1_Init,___aldiv@divisor
  5902  002FC2  C0AE  F0A0         	movff	??_MusicPWM1_Init+1,___aldiv@divisor+1
  5903  002FC6  C0AF  F0A1         	movff	??_MusicPWM1_Init+2,___aldiv@divisor+2
  5904  002FCA  C0B0  F0A2         	movff	??_MusicPWM1_Init+3,___aldiv@divisor+3
  5905  002FCE  EC80  F015         	call	___aldiv	;wreg free
  5906  002FD2  0100               	movlb	0	; () banked
  5907  002FD4  059B               	decf	?___aldiv& (0+255),w,b
  5908  002FD6  6ECB               	movwf	4043,c	;volatile
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;main.c: 149: current_tone = desired_frequency;
  5912  002FD8  C0A9  F0E3         	movff	MusicPWM1_Init@desired_frequency,_current_tone
  5913  002FDC  C0AA  F0E4         	movff	MusicPWM1_Init@desired_frequency+1,_current_tone+1
  5914                           
  5915                           ; BSR set to: 0
  5916  002FE0  0012               	return		;funcret
  5917  002FE2                     __end_of_MusicPWM1_Init:
  5918                           	opt stack 0
  5919                           tblptru	equ	0xFF8
  5920                           tblptrh	equ	0xFF7
  5921                           tblptrl	equ	0xFF6
  5922                           tablat	equ	0xFF5
  5923                           intcon	equ	0xFF2
  5924                           indf0	equ	0xFEF
  5925                           postinc0	equ	0xFEE
  5926                           fsr0h	equ	0xFEA
  5927                           fsr0l	equ	0xFE9
  5928                           wreg	equ	0xFE8
  5929                           indf1	equ	0xFE7
  5930                           fsr1h	equ	0xFE2
  5931                           fsr1l	equ	0xFE1
  5932                           indf2	equ	0xFDF
  5933                           postinc2	equ	0xFDE
  5934                           fsr2h	equ	0xFDA
  5935                           fsr2l	equ	0xFD9
  5936                           status	equ	0xFD8
  5937                           
  5938 ;; *************** function _MusicPWM1_Duty *****************
  5939 ;; Defined at:
  5940 ;;		line 156 in file "main.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  duty            2   36[BANK1 ] unsigned int 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;		None
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  1    wreg      void 
  5947 ;; Registers used:
  5948 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5954 ;;      Params:         0       0       2       0       0       0       0
  5955 ;;      Locals:         0       0       0       0       0       0       0
  5956 ;;      Temps:          0       0       2       0       0       0       0
  5957 ;;      Totals:         0       0       4       0       0       0       0
  5958 ;;Total ram usage:        4 bytes
  5959 ;; Hardware stack levels used:    1
  5960 ;; Hardware stack levels required when called:    7
  5961 ;; This function calls:
  5962 ;;		_MusicPWM_Max_Duty
  5963 ;;		___fldiv
  5964 ;;		___flmul
  5965 ;;		___fltol
  5966 ;;		___xxtofl
  5967 ;; This function is called by:
  5968 ;;		_playTone
  5969 ;;		_Music
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text22
  5974  0026B8                     __ptext22:
  5975                           	opt stack 0
  5976  0026B8                     _MusicPWM1_Duty:
  5977                           	opt stack 21
  5978                           
  5979                           ;main.c: 157: if (duty < 1024) {
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;incstack = 0
  5983  0026B8  0E04               	movlw	4
  5984  0026BA  0101               	movlb	1	; () banked
  5985  0026BC  5D25               	subwf	(MusicPWM1_Duty@duty+1)& (0+255),w,b
  5986  0026BE  B0D8               	btfsc	status,0,c
  5987  0026C0  0012               	return	
  5988                           
  5989                           ; BSR set to: 1
  5990                           ;main.c: 158: duty = ((float) duty / 1023) * MusicPWM_Max_Duty();
  5991  0026C2  EC6C  F018         	call	_MusicPWM_Max_Duty	;wreg free
  5992  0026C6  0100               	movlb	0	; () banked
  5993  0026C8  C0A9  F0AD         	movff	?_MusicPWM_Max_Duty,___xxtofl@val
  5994  0026CC  C0AA  F0AE         	movff	?_MusicPWM_Max_Duty+1,___xxtofl@val+1
  5995  0026D0  0E00               	movlw	0
  5996  0026D2  BFAE               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  5997  0026D4  0EFF               	movlw	-1
  5998  0026D6  6FAF               	movwf	(___xxtofl@val+2)& (0+255),b
  5999  0026D8  6FB0               	movwf	(___xxtofl@val+3)& (0+255),b
  6000  0026DA  0E01               	movlw	1
  6001  0026DC  EC0A  F012         	call	___xxtofl
  6002  0026E0  C0AD  F0CB         	movff	?___xxtofl,___flmul@a
  6003  0026E4  C0AE  F0CC         	movff	?___xxtofl+1,___flmul@a+1
  6004  0026E8  C0AF  F0CD         	movff	?___xxtofl+2,___flmul@a+2
  6005  0026EC  C0B0  F0CE         	movff	?___xxtofl+3,___flmul@a+3
  6006  0026F0  0E00               	movlw	0
  6007  0026F2  0100               	movlb	0	; () banked
  6008  0026F4  6FBF               	movwf	___fldiv@a& (0+255),b
  6009  0026F6  0EC0               	movlw	192
  6010  0026F8  6FC0               	movwf	(___fldiv@a+1)& (0+255),b
  6011  0026FA  0E7F               	movlw	127
  6012  0026FC  6FC1               	movwf	(___fldiv@a+2)& (0+255),b
  6013  0026FE  0E44               	movlw	68
  6014  002700  6FC2               	movwf	(___fldiv@a+3)& (0+255),b
  6015  002702  C124  F0AD         	movff	MusicPWM1_Duty@duty,___xxtofl@val
  6016  002706  C125  F0AE         	movff	MusicPWM1_Duty@duty+1,___xxtofl@val+1
  6017  00270A  6BAF               	clrf	(___xxtofl@val+2)& (0+255),b
  6018  00270C  6BB0               	clrf	(___xxtofl@val+3)& (0+255),b
  6019  00270E  0E00               	movlw	0
  6020  002710  EC0A  F012         	call	___xxtofl
  6021  002714  C0AD  F0BB         	movff	?___xxtofl,___fldiv@b
  6022  002718  C0AE  F0BC         	movff	?___xxtofl+1,___fldiv@b+1
  6023  00271C  C0AF  F0BD         	movff	?___xxtofl+2,___fldiv@b+2
  6024  002720  C0B0  F0BE         	movff	?___xxtofl+3,___fldiv@b+3
  6025  002724  EC2A  F00C         	call	___fldiv	;wreg free
  6026  002728  C0BB  F0C7         	movff	?___fldiv,___flmul@b
  6027  00272C  C0BC  F0C8         	movff	?___fldiv+1,___flmul@b+1
  6028  002730  C0BD  F0C9         	movff	?___fldiv+2,___flmul@b+2
  6029  002734  C0BE  F0CA         	movff	?___fldiv+3,___flmul@b+3
  6030  002738  EC36  F00A         	call	___flmul	;wreg free
  6031  00273C  C0C7  F11A         	movff	?___flmul,___fltol@f1
  6032  002740  C0C8  F11B         	movff	?___flmul+1,___fltol@f1+1
  6033  002744  C0C9  F11C         	movff	?___flmul+2,___fltol@f1+2
  6034  002748  C0CA  F11D         	movff	?___flmul+3,___fltol@f1+3
  6035  00274C  ECCF  F013         	call	___fltol	;wreg free
  6036  002750  C11A  F124         	movff	?___fltol,MusicPWM1_Duty@duty
  6037  002754  C11B  F125         	movff	?___fltol+1,MusicPWM1_Duty@duty+1
  6038                           
  6039                           ;main.c: 159: CCP1CONbits.DC1B1 = duty & 2;
  6040  002758  C124  F126         	movff	MusicPWM1_Duty@duty,??_MusicPWM1_Duty
  6041  00275C  0E02               	movlw	2
  6042  00275E  0101               	movlb	1	; () banked
  6043  002760  1726               	andwf	??_MusicPWM1_Duty& (0+255),f,b
  6044  002762  3B26               	swapf	??_MusicPWM1_Duty& (0+255),f,b
  6045  002764  4726               	rlncf	??_MusicPWM1_Duty& (0+255),f,b
  6046  002766  50BD               	movf	4029,w,c	;volatile
  6047  002768  1926               	xorwf	??_MusicPWM1_Duty& (0+255),w,b
  6048  00276A  0BDF               	andlw	-33
  6049  00276C  1926               	xorwf	??_MusicPWM1_Duty& (0+255),w,b
  6050  00276E  6EBD               	movwf	4029,c	;volatile
  6051                           
  6052                           ; BSR set to: 1
  6053                           ;main.c: 160: CCP1CONbits.DC1B0 = duty & 1;
  6054  002770  C124  F126         	movff	MusicPWM1_Duty@duty,??_MusicPWM1_Duty
  6055  002774  0E01               	movlw	1
  6056  002776  1726               	andwf	??_MusicPWM1_Duty& (0+255),f,b
  6057  002778  3B26               	swapf	??_MusicPWM1_Duty& (0+255),f,b
  6058  00277A  50BD               	movf	4029,w,c	;volatile
  6059  00277C  1926               	xorwf	??_MusicPWM1_Duty& (0+255),w,b
  6060  00277E  0BEF               	andlw	-17
  6061  002780  1926               	xorwf	??_MusicPWM1_Duty& (0+255),w,b
  6062  002782  6EBD               	movwf	4029,c	;volatile
  6063                           
  6064                           ; BSR set to: 1
  6065                           ;main.c: 161: CCPR1L = duty >> 2;
  6066  002784  C124  F126         	movff	MusicPWM1_Duty@duty,??_MusicPWM1_Duty
  6067  002788  C125  F127         	movff	MusicPWM1_Duty@duty+1,??_MusicPWM1_Duty+1
  6068  00278C  90D8               	bcf	status,0,c
  6069  00278E  3327               	rrcf	(??_MusicPWM1_Duty+1)& (0+255),f,b
  6070  002790  3326               	rrcf	??_MusicPWM1_Duty& (0+255),f,b
  6071  002792  90D8               	bcf	status,0,c
  6072  002794  3327               	rrcf	(??_MusicPWM1_Duty+1)& (0+255),f,b
  6073  002796  3326               	rrcf	??_MusicPWM1_Duty& (0+255),f,b
  6074  002798  5126               	movf	??_MusicPWM1_Duty& (0+255),w,b
  6075  00279A  6EBE               	movwf	4030,c	;volatile
  6076  00279C  0012               	return	
  6077  00279E                     __end_of_MusicPWM1_Duty:
  6078                           	opt stack 0
  6079                           tblptru	equ	0xFF8
  6080                           tblptrh	equ	0xFF7
  6081                           tblptrl	equ	0xFF6
  6082                           tablat	equ	0xFF5
  6083                           intcon	equ	0xFF2
  6084                           indf0	equ	0xFEF
  6085                           postinc0	equ	0xFEE
  6086                           fsr0h	equ	0xFEA
  6087                           fsr0l	equ	0xFE9
  6088                           wreg	equ	0xFE8
  6089                           indf1	equ	0xFE7
  6090                           fsr1h	equ	0xFE2
  6091                           fsr1l	equ	0xFE1
  6092                           indf2	equ	0xFDF
  6093                           postinc2	equ	0xFDE
  6094                           fsr2h	equ	0xFDA
  6095                           fsr2l	equ	0xFD9
  6096                           status	equ	0xFD8
  6097                           
  6098 ;; *************** function ___xxtofl *****************
  6099 ;; Defined at:
  6100 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\xxtofl.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  sign            1    wreg     unsigned char 
  6103 ;;  val             4   45[BANK0 ] long 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;  sign            1   53[BANK0 ] unsigned char 
  6106 ;;  arg             4   55[BANK0 ] unsigned long 
  6107 ;;  exp             1   54[BANK0 ] unsigned char 
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  4   45[BANK0 ] unsigned char 
  6110 ;; Registers used:
  6111 ;;		wreg, status,2, status,0
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6117 ;;      Params:         0       4       0       0       0       0       0
  6118 ;;      Locals:         0       6       0       0       0       0       0
  6119 ;;      Temps:          0       4       0       0       0       0       0
  6120 ;;      Totals:         0      14       0       0       0       0       0
  6121 ;;Total ram usage:       14 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:    5
  6124 ;; This function calls:
  6125 ;;		Nothing
  6126 ;; This function is called by:
  6127 ;;		_MusicPWM1_Duty
  6128 ;;		_TMR1_Init
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	text23
  6133  002414                     __ptext23:
  6134                           	opt stack 0
  6135  002414                     ___xxtofl:
  6136                           	opt stack 22
  6137                           
  6138                           ; BSR set to: 1
  6139                           ;incstack = 0
  6140                           ;___xxtofl@sign stored from wreg
  6141  002414  0100               	movlb	0	; () banked
  6142  002416  6FB5               	movwf	___xxtofl@sign& (0+255),b
  6143  002418  0100               	movlb	0	; () banked
  6144  00241A  51B5               	movf	___xxtofl@sign& (0+255),w,b
  6145  00241C  A4D8               	btfss	status,2,c
  6146                           
  6147                           ; BSR set to: 0
  6148  00241E  AFB0               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6149  002420  D01A               	goto	l1065
  6150                           
  6151                           ; BSR set to: 0
  6152  002422  C0AD  F0B1         	movff	___xxtofl@val,??___xxtofl
  6153  002426  C0AE  F0B2         	movff	___xxtofl@val+1,??___xxtofl+1
  6154  00242A  C0AF  F0B3         	movff	___xxtofl@val+2,??___xxtofl+2
  6155  00242E  C0B0  F0B4         	movff	___xxtofl@val+3,??___xxtofl+3
  6156  002432  1FB1               	comf	??___xxtofl& (0+255),f,b
  6157  002434  1FB2               	comf	(??___xxtofl+1)& (0+255),f,b
  6158  002436  1FB3               	comf	(??___xxtofl+2)& (0+255),f,b
  6159  002438  1FB4               	comf	(??___xxtofl+3)& (0+255),f,b
  6160  00243A  2BB1               	incf	??___xxtofl& (0+255),f,b
  6161  00243C  0E00               	movlw	0
  6162  00243E  23B2               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6163  002440  23B3               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6164  002442  23B4               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6165  002444  C0B1  F0B7         	movff	??___xxtofl,___xxtofl@arg
  6166  002448  C0B2  F0B8         	movff	??___xxtofl+1,___xxtofl@arg+1
  6167  00244C  C0B3  F0B9         	movff	??___xxtofl+2,___xxtofl@arg+2
  6168  002450  C0B4  F0BA         	movff	??___xxtofl+3,___xxtofl@arg+3
  6169  002454  D008               	goto	l1066
  6170  002456                     l1065:
  6171                           
  6172                           ; BSR set to: 0
  6173  002456  C0AD  F0B7         	movff	___xxtofl@val,___xxtofl@arg
  6174  00245A  C0AE  F0B8         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6175  00245E  C0AF  F0B9         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6176  002462  C0B0  F0BA         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6177  002466                     l1066:
  6178                           
  6179                           ; BSR set to: 0
  6180                           
  6181                           ; BSR set to: 0
  6182  002466  51AD               	movf	___xxtofl@val& (0+255),w,b
  6183  002468  11AE               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6184  00246A  11AF               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6185  00246C  11B0               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6186  00246E  A4D8               	btfss	status,2,c
  6187  002470  D009               	goto	l1067
  6188                           
  6189                           ; BSR set to: 0
  6190  002472  0E00               	movlw	0
  6191  002474  6FAD               	movwf	?___xxtofl& (0+255),b
  6192  002476  0E00               	movlw	0
  6193  002478  6FAE               	movwf	(?___xxtofl+1)& (0+255),b
  6194  00247A  0E00               	movlw	0
  6195  00247C  6FAF               	movwf	(?___xxtofl+2)& (0+255),b
  6196  00247E  0E00               	movlw	0
  6197  002480  6FB0               	movwf	(?___xxtofl+3)& (0+255),b
  6198                           
  6199                           ; BSR set to: 0
  6200  002482  0012               	return	
  6201  002484                     l1067:
  6202                           
  6203                           ; BSR set to: 0
  6204                           
  6205                           ; BSR set to: 0
  6206  002484  0E96               	movlw	150
  6207  002486  6FB6               	movwf	___xxtofl@exp& (0+255),b
  6208  002488  D006               	goto	l1069
  6209  00248A                     
  6210                           ; BSR set to: 0
  6211                           
  6212                           ; BSR set to: 0
  6213  00248A  2BB6               	incf	___xxtofl@exp& (0+255),f,b
  6214  00248C  90D8               	bcf	status,0,c
  6215  00248E  33BA               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6216  002490  33B9               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6217  002492  33B8               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6218  002494  33B7               	rrcf	___xxtofl@arg& (0+255),f,b
  6219  002496                     l1069:
  6220                           
  6221                           ; BSR set to: 0
  6222                           
  6223                           ; BSR set to: 0
  6224  002496  0E00               	movlw	0
  6225  002498  15B7               	andwf	___xxtofl@arg& (0+255),w,b
  6226  00249A  6FB1               	movwf	??___xxtofl& (0+255),b
  6227  00249C  0E00               	movlw	0
  6228  00249E  15B8               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6229  0024A0  6FB2               	movwf	(??___xxtofl+1)& (0+255),b
  6230  0024A2  0E00               	movlw	0
  6231  0024A4  15B9               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6232  0024A6  6FB3               	movwf	(??___xxtofl+2)& (0+255),b
  6233  0024A8  0EFE               	movlw	254
  6234  0024AA  15BA               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6235  0024AC  6FB4               	movwf	(??___xxtofl+3)& (0+255),b
  6236  0024AE  51B1               	movf	??___xxtofl& (0+255),w,b
  6237  0024B0  11B2               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6238  0024B2  11B3               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6239  0024B4  11B4               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6240  0024B6  B4D8               	btfsc	status,2,c
  6241  0024B8  D00D               	goto	l1072
  6242  0024BA  D7E7               	goto	l1070
  6243  0024BC                     
  6244                           ; BSR set to: 0
  6245                           
  6246                           ; BSR set to: 0
  6247  0024BC  2BB6               	incf	___xxtofl@exp& (0+255),f,b
  6248                           
  6249                           ; BSR set to: 0
  6250  0024BE  0E01               	movlw	1
  6251  0024C0  27B7               	addwf	___xxtofl@arg& (0+255),f,b
  6252  0024C2  0E00               	movlw	0
  6253  0024C4  23B8               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6254  0024C6  23B9               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6255  0024C8  23BA               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6256                           
  6257                           ; BSR set to: 0
  6258  0024CA  90D8               	bcf	status,0,c
  6259  0024CC  33BA               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6260  0024CE  33B9               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6261  0024D0  33B8               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6262  0024D2  33B7               	rrcf	___xxtofl@arg& (0+255),f,b
  6263  0024D4                     l1072:
  6264                           
  6265                           ; BSR set to: 0
  6266  0024D4  0E00               	movlw	0
  6267  0024D6  15B7               	andwf	___xxtofl@arg& (0+255),w,b
  6268  0024D8  6FB1               	movwf	??___xxtofl& (0+255),b
  6269  0024DA  0E00               	movlw	0
  6270  0024DC  15B8               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6271  0024DE  6FB2               	movwf	(??___xxtofl+1)& (0+255),b
  6272  0024E0  0E00               	movlw	0
  6273  0024E2  15B9               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6274  0024E4  6FB3               	movwf	(??___xxtofl+2)& (0+255),b
  6275  0024E6  0EFF               	movlw	255
  6276  0024E8  15BA               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6277  0024EA  6FB4               	movwf	(??___xxtofl+3)& (0+255),b
  6278  0024EC  51B1               	movf	??___xxtofl& (0+255),w,b
  6279  0024EE  11B2               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6280  0024F0  11B3               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6281  0024F2  11B4               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6282  0024F4  B4D8               	btfsc	status,2,c
  6283  0024F6  D007               	goto	l1075
  6284  0024F8  D7E1               	goto	l1073
  6285  0024FA                     
  6286                           ; BSR set to: 0
  6287                           
  6288                           ; BSR set to: 0
  6289  0024FA  07B6               	decf	___xxtofl@exp& (0+255),f,b
  6290  0024FC  90D8               	bcf	status,0,c
  6291  0024FE  37B7               	rlcf	___xxtofl@arg& (0+255),f,b
  6292  002500  37B8               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6293  002502  37B9               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6294  002504  37BA               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6295  002506                     l1075:
  6296                           
  6297                           ; BSR set to: 0
  6298                           
  6299                           ; BSR set to: 0
  6300  002506  BFB9               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6301  002508  D003               	goto	u6460
  6302                           
  6303                           ; BSR set to: 0
  6304  00250A  0E02               	movlw	2
  6305  00250C  61B6               	cpfslt	___xxtofl@exp& (0+255),b
  6306  00250E  D7F5               	goto	l1076
  6307  002510                     u6460:
  6308                           
  6309                           ; BSR set to: 0
  6310                           
  6311                           ; BSR set to: 0
  6312  002510  B1B6               	btfsc	___xxtofl@exp& (0+255),0,b
  6313  002512  D008               	goto	l1080
  6314                           
  6315                           ; BSR set to: 0
  6316  002514  0EFF               	movlw	255
  6317  002516  17B7               	andwf	___xxtofl@arg& (0+255),f,b
  6318  002518  0EFF               	movlw	255
  6319  00251A  17B8               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6320  00251C  0E7F               	movlw	127
  6321  00251E  17B9               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6322  002520  0EFF               	movlw	255
  6323  002522  17BA               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6324  002524                     l1080:
  6325                           
  6326                           ; BSR set to: 0
  6327  002524  90D8               	bcf	status,0,c
  6328  002526  33B6               	rrcf	___xxtofl@exp& (0+255),f,b
  6329  002528  C0B6  F0B1         	movff	___xxtofl@exp,??___xxtofl
  6330  00252C  6BB2               	clrf	(??___xxtofl+1)& (0+255),b
  6331  00252E  6BB3               	clrf	(??___xxtofl+2)& (0+255),b
  6332  002530  6BB4               	clrf	(??___xxtofl+3)& (0+255),b
  6333  002532  C0B1  F0B4         	movff	??___xxtofl,??___xxtofl+3
  6334  002536  6BB3               	clrf	(??___xxtofl+2)& (0+255),b
  6335  002538  6BB2               	clrf	(??___xxtofl+1)& (0+255),b
  6336  00253A  6BB1               	clrf	??___xxtofl& (0+255),b
  6337  00253C  51B1               	movf	??___xxtofl& (0+255),w,b
  6338  00253E  13B7               	iorwf	___xxtofl@arg& (0+255),f,b
  6339  002540  51B2               	movf	(??___xxtofl+1)& (0+255),w,b
  6340  002542  13B8               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6341  002544  51B3               	movf	(??___xxtofl+2)& (0+255),w,b
  6342  002546  13B9               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6343  002548  51B4               	movf	(??___xxtofl+3)& (0+255),w,b
  6344  00254A  13BA               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6345                           
  6346                           ; BSR set to: 0
  6347  00254C  51B5               	movf	___xxtofl@sign& (0+255),w,b
  6348  00254E  A4D8               	btfss	status,2,c
  6349                           
  6350                           ; BSR set to: 0
  6351  002550  AFB0               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6352  002552  D001               	goto	l1081
  6353                           
  6354                           ; BSR set to: 0
  6355  002554  8FBA               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6356  002556                     l1081:
  6357                           
  6358                           ; BSR set to: 0
  6359                           
  6360                           ; BSR set to: 0
  6361  002556  C0B7  F0AD         	movff	___xxtofl@arg,?___xxtofl
  6362  00255A  C0B8  F0AE         	movff	___xxtofl@arg+1,?___xxtofl+1
  6363  00255E  C0B9  F0AF         	movff	___xxtofl@arg+2,?___xxtofl+2
  6364  002562  C0BA  F0B0         	movff	___xxtofl@arg+3,?___xxtofl+3
  6365  002566  0012               	return	
  6366  002568                     __end_of___xxtofl:
  6367                           	opt stack 0
  6368                           tblptru	equ	0xFF8
  6369                           tblptrh	equ	0xFF7
  6370                           tblptrl	equ	0xFF6
  6371                           tablat	equ	0xFF5
  6372                           intcon	equ	0xFF2
  6373                           indf0	equ	0xFEF
  6374                           postinc0	equ	0xFEE
  6375                           fsr0h	equ	0xFEA
  6376                           fsr0l	equ	0xFE9
  6377                           wreg	equ	0xFE8
  6378                           indf1	equ	0xFE7
  6379                           fsr1h	equ	0xFE2
  6380                           fsr1l	equ	0xFE1
  6381                           indf2	equ	0xFDF
  6382                           postinc2	equ	0xFDE
  6383                           fsr2h	equ	0xFDA
  6384                           fsr2l	equ	0xFD9
  6385                           status	equ	0xFD8
  6386                           
  6387 ;; *************** function ___fltol *****************
  6388 ;; Defined at:
  6389 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fltol.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  f1              4   26[BANK1 ] unsigned char 
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;  exp1            1   35[BANK1 ] unsigned char 
  6394 ;;  sign1           1   34[BANK1 ] unsigned char 
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  4   26[BANK1 ] long 
  6397 ;; Registers used:
  6398 ;;		wreg, status,2, status,0
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6404 ;;      Params:         0       0       4       0       0       0       0
  6405 ;;      Locals:         0       0       2       0       0       0       0
  6406 ;;      Temps:          0       0       4       0       0       0       0
  6407 ;;      Totals:         0       0      10       0       0       0       0
  6408 ;;Total ram usage:       10 bytes
  6409 ;; Hardware stack levels used:    1
  6410 ;; Hardware stack levels required when called:    5
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		_MusicPWM1_Duty
  6415 ;;		_TMR1_Init
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419                           	psect	text24
  6420  00279E                     __ptext24:
  6421                           	opt stack 0
  6422  00279E                     ___fltol:
  6423                           	opt stack 22
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;incstack = 0
  6427  00279E  0101               	movlb	1	; () banked
  6428  0027A0  351C               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6429  0027A2  351D               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6430  0027A4  6F23               	movwf	___fltol@exp1& (0+255),b
  6431  0027A6  5123               	movf	___fltol@exp1& (0+255),w,b
  6432  0027A8  A4D8               	btfss	status,2,c
  6433  0027AA  D009               	goto	l707
  6434                           
  6435                           ; BSR set to: 1
  6436  0027AC  0E00               	movlw	0
  6437  0027AE  6F1A               	movwf	?___fltol& (0+255),b
  6438  0027B0  0E00               	movlw	0
  6439  0027B2  6F1B               	movwf	(?___fltol+1)& (0+255),b
  6440  0027B4  0E00               	movlw	0
  6441  0027B6  6F1C               	movwf	(?___fltol+2)& (0+255),b
  6442  0027B8  0E00               	movlw	0
  6443  0027BA  6F1D               	movwf	(?___fltol+3)& (0+255),b
  6444                           
  6445                           ; BSR set to: 1
  6446  0027BC  0012               	return	
  6447  0027BE                     l707:
  6448                           
  6449                           ; BSR set to: 1
  6450                           
  6451                           ; BSR set to: 1
  6452  0027BE  C11A  F11E         	movff	___fltol@f1,??___fltol
  6453  0027C2  C11B  F11F         	movff	___fltol@f1+1,??___fltol+1
  6454  0027C6  C11C  F120         	movff	___fltol@f1+2,??___fltol+2
  6455  0027CA  C11D  F121         	movff	___fltol@f1+3,??___fltol+3
  6456  0027CE  0E20               	movlw	32
  6457  0027D0  D005               	goto	u6300
  6458  0027D2                     u6305:
  6459  0027D2  90D8               	bcf	status,0,c
  6460  0027D4  3321               	rrcf	(??___fltol+3)& (0+255),f,b
  6461  0027D6  3320               	rrcf	(??___fltol+2)& (0+255),f,b
  6462  0027D8  331F               	rrcf	(??___fltol+1)& (0+255),f,b
  6463  0027DA  331E               	rrcf	??___fltol& (0+255),f,b
  6464  0027DC                     u6300:
  6465  0027DC  2EE8               	decfsz	wreg,f,c
  6466  0027DE  D7F9               	goto	u6305
  6467  0027E0  511E               	movf	??___fltol& (0+255),w,b
  6468  0027E2  6F22               	movwf	___fltol@sign1& (0+255),b
  6469                           
  6470                           ; BSR set to: 1
  6471  0027E4  8F1C               	bsf	(___fltol@f1+2)& (0+255),7,b
  6472                           
  6473                           ; BSR set to: 1
  6474  0027E6  0EFF               	movlw	255
  6475  0027E8  171A               	andwf	___fltol@f1& (0+255),f,b
  6476  0027EA  0EFF               	movlw	255
  6477  0027EC  171B               	andwf	(___fltol@f1+1)& (0+255),f,b
  6478  0027EE  0EFF               	movlw	255
  6479  0027F0  171C               	andwf	(___fltol@f1+2)& (0+255),f,b
  6480  0027F2  0E00               	movlw	0
  6481  0027F4  171D               	andwf	(___fltol@f1+3)& (0+255),f,b
  6482                           
  6483                           ; BSR set to: 1
  6484  0027F6  0E96               	movlw	150
  6485  0027F8  5F23               	subwf	___fltol@exp1& (0+255),f,b
  6486                           
  6487                           ; BSR set to: 1
  6488  0027FA  AF23               	btfss	___fltol@exp1& (0+255),7,b
  6489  0027FC  D016               	goto	l709
  6490                           
  6491                           ; BSR set to: 1
  6492  0027FE  5123               	movf	___fltol@exp1& (0+255),w,b
  6493  002800  0A80               	xorlw	128
  6494  002802  0F97               	addlw	151
  6495  002804  B0D8               	btfsc	status,0,c
  6496  002806  D009               	goto	l710
  6497                           
  6498                           ; BSR set to: 1
  6499  002808  0E00               	movlw	0
  6500  00280A  6F1A               	movwf	?___fltol& (0+255),b
  6501  00280C  0E00               	movlw	0
  6502  00280E  6F1B               	movwf	(?___fltol+1)& (0+255),b
  6503  002810  0E00               	movlw	0
  6504  002812  6F1C               	movwf	(?___fltol+2)& (0+255),b
  6505  002814  0E00               	movlw	0
  6506  002816  6F1D               	movwf	(?___fltol+3)& (0+255),b
  6507                           
  6508                           ; BSR set to: 1
  6509  002818  0012               	return	
  6510  00281A                     l710:
  6511                           
  6512                           ; BSR set to: 1
  6513                           
  6514                           ; BSR set to: 1
  6515                           
  6516                           ; BSR set to: 1
  6517  00281A  90D8               	bcf	status,0,c
  6518  00281C  331D               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6519  00281E  331C               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6520  002820  331B               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6521  002822  331A               	rrcf	___fltol@f1& (0+255),f,b
  6522                           
  6523                           ; BSR set to: 1
  6524  002824  3F23               	incfsz	___fltol@exp1& (0+255),f,b
  6525  002826  D7F9               	goto	l710
  6526                           
  6527                           ; BSR set to: 1
  6528  002828  D015               	goto	u6340
  6529  00282A                     l709:
  6530                           
  6531                           ; BSR set to: 1
  6532                           
  6533                           ; BSR set to: 1
  6534  00282A  0E1F               	movlw	31
  6535  00282C  6523               	cpfsgt	___fltol@exp1& (0+255),b
  6536  00282E  D00F               	goto	l715
  6537                           
  6538                           ; BSR set to: 1
  6539  002830  0E00               	movlw	0
  6540  002832  6F1A               	movwf	?___fltol& (0+255),b
  6541  002834  0E00               	movlw	0
  6542  002836  6F1B               	movwf	(?___fltol+1)& (0+255),b
  6543  002838  0E00               	movlw	0
  6544  00283A  6F1C               	movwf	(?___fltol+2)& (0+255),b
  6545  00283C  0E00               	movlw	0
  6546  00283E  6F1D               	movwf	(?___fltol+3)& (0+255),b
  6547                           
  6548                           ; BSR set to: 1
  6549  002840  0012               	return	
  6550  002842                     
  6551                           ; BSR set to: 1
  6552                           
  6553                           ; BSR set to: 1
  6554  002842  90D8               	bcf	status,0,c
  6555  002844  371A               	rlcf	___fltol@f1& (0+255),f,b
  6556  002846  371B               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6557  002848  371C               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6558  00284A  371D               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6559  00284C  0723               	decf	___fltol@exp1& (0+255),f,b
  6560  00284E                     l715:
  6561                           
  6562                           ; BSR set to: 1
  6563                           
  6564                           ; BSR set to: 1
  6565  00284E  5123               	movf	___fltol@exp1& (0+255),w,b
  6566  002850  A4D8               	btfss	status,2,c
  6567  002852  D7F7               	goto	l716
  6568  002854                     u6340:
  6569                           
  6570                           ; BSR set to: 1
  6571                           
  6572                           ; BSR set to: 1
  6573                           
  6574                           ; BSR set to: 1
  6575  002854  5122               	movf	___fltol@sign1& (0+255),w,b
  6576  002856  B4D8               	btfsc	status,2,c
  6577  002858  D008               	goto	l718
  6578                           
  6579                           ; BSR set to: 1
  6580  00285A  1F1D               	comf	(___fltol@f1+3)& (0+255),f,b
  6581  00285C  1F1C               	comf	(___fltol@f1+2)& (0+255),f,b
  6582  00285E  1F1B               	comf	(___fltol@f1+1)& (0+255),f,b
  6583  002860  6D1A               	negf	___fltol@f1& (0+255),b
  6584  002862  0E00               	movlw	0
  6585  002864  231B               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6586  002866  231C               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6587  002868  231D               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6588  00286A                     l718:
  6589                           
  6590                           ; BSR set to: 1
  6591                           
  6592                           ; BSR set to: 1
  6593  00286A  C11A  F11A         	movff	___fltol@f1,?___fltol
  6594  00286E  C11B  F11B         	movff	___fltol@f1+1,?___fltol+1
  6595  002872  C11C  F11C         	movff	___fltol@f1+2,?___fltol+2
  6596  002876  C11D  F11D         	movff	___fltol@f1+3,?___fltol+3
  6597  00287A  0012               	return	
  6598  00287C                     __end_of___fltol:
  6599                           	opt stack 0
  6600                           tblptru	equ	0xFF8
  6601                           tblptrh	equ	0xFF7
  6602                           tblptrl	equ	0xFF6
  6603                           tablat	equ	0xFF5
  6604                           intcon	equ	0xFF2
  6605                           indf0	equ	0xFEF
  6606                           postinc0	equ	0xFEE
  6607                           fsr0h	equ	0xFEA
  6608                           fsr0l	equ	0xFE9
  6609                           wreg	equ	0xFE8
  6610                           indf1	equ	0xFE7
  6611                           fsr1h	equ	0xFE2
  6612                           fsr1l	equ	0xFE1
  6613                           indf2	equ	0xFDF
  6614                           postinc2	equ	0xFDE
  6615                           fsr2h	equ	0xFDA
  6616                           fsr2l	equ	0xFD9
  6617                           status	equ	0xFD8
  6618                           
  6619 ;; *************** function ___flmul *****************
  6620 ;; Defined at:
  6621 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\sprcmul.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;  b               4   71[BANK0 ] long 
  6624 ;;  a               4   75[BANK0 ] long 
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  prod            4   20[BANK1 ] struct .
  6627 ;;  grs             4   15[BANK1 ] unsigned long 
  6628 ;;  temp            2   24[BANK1 ] struct .
  6629 ;;  bexp            1   19[BANK1 ] unsigned char 
  6630 ;;  aexp            1   14[BANK1 ] unsigned char 
  6631 ;;  sign            1   13[BANK1 ] unsigned char 
  6632 ;; Return value:  Size  Location     Type
  6633 ;;                  4   71[BANK0 ] unsigned char 
  6634 ;; Registers used:
  6635 ;;		wreg, status,2, status,0, prodl, prodh
  6636 ;; Tracked objects:
  6637 ;;		On entry : 0/0
  6638 ;;		On exit  : 0/0
  6639 ;;		Unchanged: 0/0
  6640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6641 ;;      Params:         0       8       0       0       0       0       0
  6642 ;;      Locals:         0       0      13       0       0       0       0
  6643 ;;      Temps:          0       4       0       0       0       0       0
  6644 ;;      Totals:         0      12      13       0       0       0       0
  6645 ;;Total ram usage:       25 bytes
  6646 ;; Hardware stack levels used:    1
  6647 ;; Hardware stack levels required when called:    5
  6648 ;; This function calls:
  6649 ;;		Nothing
  6650 ;; This function is called by:
  6651 ;;		_MusicPWM1_Duty
  6652 ;;		_TMR1_Init
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           	psect	text25
  6657  00146C                     __ptext25:
  6658                           	opt stack 0
  6659  00146C                     ___flmul:
  6660                           	opt stack 22
  6661                           
  6662                           ; BSR set to: 1
  6663                           ;incstack = 0
  6664  00146C  0100               	movlb	0	; () banked
  6665  00146E  51CA               	movf	(___flmul@b+3)& (0+255),w,b
  6666  001470  0B80               	andlw	128
  6667  001472  0101               	movlb	1	; () banked
  6668  001474  6F0D               	movwf	___flmul@sign& (0+255),b
  6669  001476  0100               	movlb	0	; () banked
  6670  001478  51CA               	movf	(___flmul@b+3)& (0+255),w,b
  6671  00147A  25CA               	addwf	(___flmul@b+3)& (0+255),w,b
  6672  00147C  0101               	movlb	1	; () banked
  6673  00147E  6F13               	movwf	___flmul@bexp& (0+255),b
  6674                           
  6675                           ; BSR set to: 1
  6676  001480  0100               	movlb	0	; () banked
  6677  001482  AFC9               	btfss	(___flmul@b+2)& (0+255),7,b
  6678  001484  D002               	goto	l1001
  6679                           
  6680                           ; BSR set to: 0
  6681  001486  0101               	movlb	1	; () banked
  6682  001488  8113               	bsf	___flmul@bexp& (0+255),0,b
  6683  00148A                     l1001:
  6684                           
  6685                           ; BSR set to: 1
  6686  00148A  0101               	movlb	1	; () banked
  6687  00148C  5113               	movf	___flmul@bexp& (0+255),w,b
  6688  00148E  B4D8               	btfsc	status,2,c
  6689  001490  D00F               	goto	l1002
  6690                           
  6691                           ; BSR set to: 1
  6692  001492  2913               	incf	___flmul@bexp& (0+255),w,b
  6693  001494  A4D8               	btfss	status,2,c
  6694  001496  D009               	goto	l1003
  6695                           
  6696                           ; BSR set to: 1
  6697  001498  0E00               	movlw	0
  6698  00149A  0100               	movlb	0	; () banked
  6699  00149C  6FC7               	movwf	___flmul@b& (0+255),b
  6700  00149E  0E00               	movlw	0
  6701  0014A0  6FC8               	movwf	(___flmul@b+1)& (0+255),b
  6702  0014A2  0E00               	movlw	0
  6703  0014A4  6FC9               	movwf	(___flmul@b+2)& (0+255),b
  6704  0014A6  0E00               	movlw	0
  6705  0014A8  6FCA               	movwf	(___flmul@b+3)& (0+255),b
  6706  0014AA                     l1003:
  6707                           
  6708                           ; BSR set to: 0
  6709  0014AA  0100               	movlb	0	; () banked
  6710  0014AC  8FC9               	bsf	(___flmul@b+2)& (0+255),7,b
  6711  0014AE  D009               	goto	l1004
  6712  0014B0                     l1002:
  6713                           
  6714                           ; BSR set to: 0
  6715  0014B0  0E00               	movlw	0
  6716  0014B2  0100               	movlb	0	; () banked
  6717  0014B4  6FC7               	movwf	___flmul@b& (0+255),b
  6718  0014B6  0E00               	movlw	0
  6719  0014B8  6FC8               	movwf	(___flmul@b+1)& (0+255),b
  6720  0014BA  0E00               	movlw	0
  6721  0014BC  6FC9               	movwf	(___flmul@b+2)& (0+255),b
  6722  0014BE  0E00               	movlw	0
  6723  0014C0  6FCA               	movwf	(___flmul@b+3)& (0+255),b
  6724  0014C2                     l1004:
  6725                           
  6726                           ; BSR set to: 0
  6727                           
  6728                           ; BSR set to: 0
  6729  0014C2  51CE               	movf	(___flmul@a+3)& (0+255),w,b
  6730  0014C4  0B80               	andlw	128
  6731  0014C6  0101               	movlb	1	; () banked
  6732  0014C8  1B0D               	xorwf	___flmul@sign& (0+255),f,b
  6733                           
  6734                           ; BSR set to: 1
  6735  0014CA  0100               	movlb	0	; () banked
  6736  0014CC  51CE               	movf	(___flmul@a+3)& (0+255),w,b
  6737  0014CE  25CE               	addwf	(___flmul@a+3)& (0+255),w,b
  6738  0014D0  0101               	movlb	1	; () banked
  6739  0014D2  6F0E               	movwf	___flmul@aexp& (0+255),b
  6740                           
  6741                           ; BSR set to: 1
  6742  0014D4  0100               	movlb	0	; () banked
  6743  0014D6  AFCD               	btfss	(___flmul@a+2)& (0+255),7,b
  6744  0014D8  D002               	goto	l1005
  6745                           
  6746                           ; BSR set to: 0
  6747  0014DA  0101               	movlb	1	; () banked
  6748  0014DC  810E               	bsf	___flmul@aexp& (0+255),0,b
  6749  0014DE                     l1005:
  6750                           
  6751                           ; BSR set to: 1
  6752  0014DE  0101               	movlb	1	; () banked
  6753  0014E0  510E               	movf	___flmul@aexp& (0+255),w,b
  6754  0014E2  B4D8               	btfsc	status,2,c
  6755  0014E4  D00F               	goto	l1006
  6756                           
  6757                           ; BSR set to: 1
  6758  0014E6  290E               	incf	___flmul@aexp& (0+255),w,b
  6759  0014E8  A4D8               	btfss	status,2,c
  6760  0014EA  D009               	goto	l1007
  6761                           
  6762                           ; BSR set to: 1
  6763  0014EC  0E00               	movlw	0
  6764  0014EE  0100               	movlb	0	; () banked
  6765  0014F0  6FCB               	movwf	___flmul@a& (0+255),b
  6766  0014F2  0E00               	movlw	0
  6767  0014F4  6FCC               	movwf	(___flmul@a+1)& (0+255),b
  6768  0014F6  0E00               	movlw	0
  6769  0014F8  6FCD               	movwf	(___flmul@a+2)& (0+255),b
  6770  0014FA  0E00               	movlw	0
  6771  0014FC  6FCE               	movwf	(___flmul@a+3)& (0+255),b
  6772  0014FE                     l1007:
  6773                           
  6774                           ; BSR set to: 0
  6775  0014FE  0100               	movlb	0	; () banked
  6776  001500  8FCD               	bsf	(___flmul@a+2)& (0+255),7,b
  6777  001502  D009               	goto	l1008
  6778  001504                     l1006:
  6779                           
  6780                           ; BSR set to: 0
  6781  001504  0E00               	movlw	0
  6782  001506  0100               	movlb	0	; () banked
  6783  001508  6FCB               	movwf	___flmul@a& (0+255),b
  6784  00150A  0E00               	movlw	0
  6785  00150C  6FCC               	movwf	(___flmul@a+1)& (0+255),b
  6786  00150E  0E00               	movlw	0
  6787  001510  6FCD               	movwf	(___flmul@a+2)& (0+255),b
  6788  001512  0E00               	movlw	0
  6789  001514  6FCE               	movwf	(___flmul@a+3)& (0+255),b
  6790  001516                     l1008:
  6791                           
  6792                           ; BSR set to: 0
  6793  001516  0101               	movlb	1	; () banked
  6794  001518  510E               	movf	___flmul@aexp& (0+255),w,b
  6795  00151A  B4D8               	btfsc	status,2,c
  6796  00151C  D003               	goto	u6170
  6797                           
  6798                           ; BSR set to: 1
  6799  00151E  5113               	movf	___flmul@bexp& (0+255),w,b
  6800  001520  A4D8               	btfss	status,2,c
  6801  001522  D00A               	goto	l1009
  6802  001524                     u6170:
  6803                           
  6804                           ; BSR set to: 1
  6805                           
  6806                           ; BSR set to: 1
  6807  001524  0E00               	movlw	0
  6808  001526  0100               	movlb	0	; () banked
  6809  001528  6FC7               	movwf	?___flmul& (0+255),b
  6810  00152A  0E00               	movlw	0
  6811  00152C  6FC8               	movwf	(?___flmul+1)& (0+255),b
  6812  00152E  0E00               	movlw	0
  6813  001530  6FC9               	movwf	(?___flmul+2)& (0+255),b
  6814  001532  0E00               	movlw	0
  6815  001534  6FCA               	movwf	(?___flmul+3)& (0+255),b
  6816                           
  6817                           ; BSR set to: 0
  6818  001536  0012               	return	
  6819  001538                     l1009:
  6820                           
  6821                           ; BSR set to: 0
  6822  001538  0100               	movlb	0	; () banked
  6823  00153A  51CD               	movf	(___flmul@a+2)& (0+255),w,b
  6824  00153C  03C7               	mulwf	___flmul@b& (0+255),b
  6825  00153E  CFF3 F118          	movff	prodl,___flmul@temp
  6826  001542  CFF4 F119          	movff	prodh,___flmul@temp+1
  6827                           
  6828                           ; BSR set to: 0
  6829  001546  0101               	movlb	1	; () banked
  6830  001548  5118               	movf	___flmul@temp& (0+255),w,b
  6831  00154A  6F0F               	movwf	___flmul@grs& (0+255),b
  6832  00154C  6B10               	clrf	(___flmul@grs+1)& (0+255),b
  6833  00154E  6B11               	clrf	(___flmul@grs+2)& (0+255),b
  6834  001550  6B12               	clrf	(___flmul@grs+3)& (0+255),b
  6835                           
  6836                           ; BSR set to: 1
  6837  001552  5119               	movf	(___flmul@temp+1)& (0+255),w,b
  6838  001554  6F14               	movwf	___flmul@prod& (0+255),b
  6839  001556  6B15               	clrf	(___flmul@prod+1)& (0+255),b
  6840  001558  6B16               	clrf	(___flmul@prod+2)& (0+255),b
  6841  00155A  6B17               	clrf	(___flmul@prod+3)& (0+255),b
  6842  00155C  0100               	movlb	0	; () banked
  6843  00155E  51CC               	movf	(___flmul@a+1)& (0+255),w,b
  6844  001560  03C8               	mulwf	(___flmul@b+1)& (0+255),b
  6845  001562  CFF3 F118          	movff	prodl,___flmul@temp
  6846  001566  CFF4 F119          	movff	prodh,___flmul@temp+1
  6847                           
  6848                           ; BSR set to: 0
  6849  00156A  0101               	movlb	1	; () banked
  6850  00156C  5118               	movf	___flmul@temp& (0+255),w,b
  6851  00156E  270F               	addwf	___flmul@grs& (0+255),f,b
  6852  001570  0E00               	movlw	0
  6853  001572  2310               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6854  001574  2311               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6855  001576  2312               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6856                           
  6857                           ; BSR set to: 1
  6858  001578  5119               	movf	(___flmul@temp+1)& (0+255),w,b
  6859  00157A  2714               	addwf	___flmul@prod& (0+255),f,b
  6860  00157C  0E00               	movlw	0
  6861  00157E  2315               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6862  001580  2316               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6863  001582  2317               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6864  001584  0100               	movlb	0	; () banked
  6865  001586  51CB               	movf	___flmul@a& (0+255),w,b
  6866  001588  03C9               	mulwf	(___flmul@b+2)& (0+255),b
  6867  00158A  CFF3 F118          	movff	prodl,___flmul@temp
  6868  00158E  CFF4 F119          	movff	prodh,___flmul@temp+1
  6869                           
  6870                           ; BSR set to: 0
  6871  001592  0101               	movlb	1	; () banked
  6872  001594  5118               	movf	___flmul@temp& (0+255),w,b
  6873  001596  270F               	addwf	___flmul@grs& (0+255),f,b
  6874  001598  0E00               	movlw	0
  6875  00159A  2310               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6876  00159C  2311               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6877  00159E  2312               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6878                           
  6879                           ; BSR set to: 1
  6880  0015A0  5119               	movf	(___flmul@temp+1)& (0+255),w,b
  6881  0015A2  2714               	addwf	___flmul@prod& (0+255),f,b
  6882  0015A4  0E00               	movlw	0
  6883  0015A6  2315               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6884  0015A8  2316               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6885  0015AA  2317               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6886                           
  6887                           ; BSR set to: 1
  6888  0015AC  C111  F112         	movff	___flmul@grs+2,___flmul@grs+3
  6889  0015B0  C110  F111         	movff	___flmul@grs+1,___flmul@grs+2
  6890  0015B4  C10F  F110         	movff	___flmul@grs,___flmul@grs+1
  6891  0015B8  6B0F               	clrf	___flmul@grs& (0+255),b
  6892                           
  6893                           ; BSR set to: 1
  6894  0015BA  0100               	movlb	0	; () banked
  6895  0015BC  51CB               	movf	___flmul@a& (0+255),w,b
  6896  0015BE  03C8               	mulwf	(___flmul@b+1)& (0+255),b
  6897  0015C0  CFF3 F118          	movff	prodl,___flmul@temp
  6898  0015C4  CFF4 F119          	movff	prodh,___flmul@temp+1
  6899                           
  6900                           ; BSR set to: 0
  6901  0015C8  0101               	movlb	1	; () banked
  6902  0015CA  5118               	movf	___flmul@temp& (0+255),w,b
  6903  0015CC  270F               	addwf	___flmul@grs& (0+255),f,b
  6904  0015CE  5119               	movf	(___flmul@temp+1)& (0+255),w,b
  6905  0015D0  2310               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6906  0015D2  0E00               	movlw	0
  6907  0015D4  2311               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6908  0015D6  0E00               	movlw	0
  6909  0015D8  2312               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6910                           
  6911                           ; BSR set to: 1
  6912  0015DA  0100               	movlb	0	; () banked
  6913  0015DC  51CC               	movf	(___flmul@a+1)& (0+255),w,b
  6914  0015DE  03C7               	mulwf	___flmul@b& (0+255),b
  6915  0015E0  CFF3 F118          	movff	prodl,___flmul@temp
  6916  0015E4  CFF4 F119          	movff	prodh,___flmul@temp+1
  6917                           
  6918                           ; BSR set to: 0
  6919  0015E8  0101               	movlb	1	; () banked
  6920  0015EA  5118               	movf	___flmul@temp& (0+255),w,b
  6921  0015EC  270F               	addwf	___flmul@grs& (0+255),f,b
  6922  0015EE  5119               	movf	(___flmul@temp+1)& (0+255),w,b
  6923  0015F0  2310               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6924  0015F2  0E00               	movlw	0
  6925  0015F4  2311               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6926  0015F6  0E00               	movlw	0
  6927  0015F8  2312               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6928                           
  6929                           ; BSR set to: 1
  6930  0015FA  C111  F112         	movff	___flmul@grs+2,___flmul@grs+3
  6931  0015FE  C110  F111         	movff	___flmul@grs+1,___flmul@grs+2
  6932  001602  C10F  F110         	movff	___flmul@grs,___flmul@grs+1
  6933  001606  6B0F               	clrf	___flmul@grs& (0+255),b
  6934  001608  0100               	movlb	0	; () banked
  6935  00160A  51CB               	movf	___flmul@a& (0+255),w,b
  6936  00160C  03C7               	mulwf	___flmul@b& (0+255),b
  6937  00160E  CFF3 F118          	movff	prodl,___flmul@temp
  6938  001612  CFF4 F119          	movff	prodh,___flmul@temp+1
  6939                           
  6940                           ; BSR set to: 0
  6941  001616  0101               	movlb	1	; () banked
  6942  001618  5118               	movf	___flmul@temp& (0+255),w,b
  6943  00161A  270F               	addwf	___flmul@grs& (0+255),f,b
  6944  00161C  5119               	movf	(___flmul@temp+1)& (0+255),w,b
  6945  00161E  2310               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6946  001620  0E00               	movlw	0
  6947  001622  2311               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6948  001624  0E00               	movlw	0
  6949  001626  2312               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6950                           
  6951                           ; BSR set to: 1
  6952  001628  0100               	movlb	0	; () banked
  6953  00162A  51CD               	movf	(___flmul@a+2)& (0+255),w,b
  6954  00162C  03C8               	mulwf	(___flmul@b+1)& (0+255),b
  6955  00162E  CFF3 F118          	movff	prodl,___flmul@temp
  6956  001632  CFF4 F119          	movff	prodh,___flmul@temp+1
  6957  001636  0101               	movlb	1	; () banked
  6958  001638  5118               	movf	___flmul@temp& (0+255),w,b
  6959  00163A  2714               	addwf	___flmul@prod& (0+255),f,b
  6960  00163C  5119               	movf	(___flmul@temp+1)& (0+255),w,b
  6961  00163E  2315               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6962  001640  0E00               	movlw	0
  6963  001642  2316               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6964  001644  0E00               	movlw	0
  6965  001646  2317               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6966                           
  6967                           ; BSR set to: 1
  6968  001648  0100               	movlb	0	; () banked
  6969  00164A  51CC               	movf	(___flmul@a+1)& (0+255),w,b
  6970  00164C  03C9               	mulwf	(___flmul@b+2)& (0+255),b
  6971  00164E  CFF3 F118          	movff	prodl,___flmul@temp
  6972  001652  CFF4 F119          	movff	prodh,___flmul@temp+1
  6973                           
  6974                           ; BSR set to: 0
  6975  001656  0101               	movlb	1	; () banked
  6976  001658  5118               	movf	___flmul@temp& (0+255),w,b
  6977  00165A  2714               	addwf	___flmul@prod& (0+255),f,b
  6978  00165C  5119               	movf	(___flmul@temp+1)& (0+255),w,b
  6979  00165E  2315               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6980  001660  0E00               	movlw	0
  6981  001662  2316               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6982  001664  0E00               	movlw	0
  6983  001666  2317               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6984  001668  0100               	movlb	0	; () banked
  6985  00166A  51CD               	movf	(___flmul@a+2)& (0+255),w,b
  6986  00166C  03C9               	mulwf	(___flmul@b+2)& (0+255),b
  6987  00166E  CFF3 F118          	movff	prodl,___flmul@temp
  6988  001672  CFF4 F119          	movff	prodh,___flmul@temp+1
  6989                           
  6990                           ; BSR set to: 0
  6991  001676  0101               	movlb	1	; () banked
  6992  001678  5118               	movf	___flmul@temp& (0+255),w,b
  6993  00167A  0100               	movlb	0	; () banked
  6994  00167C  6FCF               	movwf	??___flmul& (0+255),b
  6995  00167E  0101               	movlb	1	; () banked
  6996  001680  5119               	movf	(___flmul@temp+1)& (0+255),w,b
  6997  001682  0100               	movlb	0	; () banked
  6998  001684  6FD0               	movwf	(??___flmul+1)& (0+255),b
  6999  001686  6BD1               	clrf	(??___flmul+2)& (0+255),b
  7000  001688  6BD2               	clrf	(??___flmul+3)& (0+255),b
  7001  00168A  C0D1  F0D2         	movff	??___flmul+2,??___flmul+3
  7002  00168E  C0D0  F0D1         	movff	??___flmul+1,??___flmul+2
  7003  001692  C0CF  F0D0         	movff	??___flmul,??___flmul+1
  7004  001696  6BCF               	clrf	??___flmul& (0+255),b
  7005  001698  51CF               	movf	??___flmul& (0+255),w,b
  7006  00169A  0101               	movlb	1	; () banked
  7007  00169C  2714               	addwf	___flmul@prod& (0+255),f,b
  7008  00169E  0100               	movlb	0	; () banked
  7009  0016A0  51D0               	movf	(??___flmul+1)& (0+255),w,b
  7010  0016A2  0101               	movlb	1	; () banked
  7011  0016A4  2315               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7012  0016A6  0100               	movlb	0	; () banked
  7013  0016A8  51D1               	movf	(??___flmul+2)& (0+255),w,b
  7014  0016AA  0101               	movlb	1	; () banked
  7015  0016AC  2316               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7016  0016AE  0100               	movlb	0	; () banked
  7017  0016B0  51D2               	movf	(??___flmul+3)& (0+255),w,b
  7018  0016B2  0101               	movlb	1	; () banked
  7019  0016B4  2317               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7020                           
  7021                           ; BSR set to: 1
  7022  0016B6  C10F  F0CF         	movff	___flmul@grs,??___flmul
  7023  0016BA  C110  F0D0         	movff	___flmul@grs+1,??___flmul+1
  7024  0016BE  C111  F0D1         	movff	___flmul@grs+2,??___flmul+2
  7025  0016C2  C112  F0D2         	movff	___flmul@grs+3,??___flmul+3
  7026  0016C6  0E19               	movlw	25
  7027  0016C8  D006               	goto	u6180
  7028  0016CA                     u6185:
  7029  0016CA  0100               	movlb	0	; () banked
  7030  0016CC  90D8               	bcf	status,0,c
  7031  0016CE  33D2               	rrcf	(??___flmul+3)& (0+255),f,b
  7032  0016D0  33D1               	rrcf	(??___flmul+2)& (0+255),f,b
  7033  0016D2  33D0               	rrcf	(??___flmul+1)& (0+255),f,b
  7034  0016D4  33CF               	rrcf	??___flmul& (0+255),f,b
  7035  0016D6                     u6180:
  7036  0016D6  2EE8               	decfsz	wreg,f,c
  7037  0016D8  D7F8               	goto	u6185
  7038  0016DA  51CF               	movf	??___flmul& (0+255),w,b
  7039  0016DC  0101               	movlb	1	; () banked
  7040  0016DE  2714               	addwf	___flmul@prod& (0+255),f,b
  7041  0016E0  0100               	movlb	0	; () banked
  7042  0016E2  51D0               	movf	(??___flmul+1)& (0+255),w,b
  7043  0016E4  0101               	movlb	1	; () banked
  7044  0016E6  2315               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7045  0016E8  0100               	movlb	0	; () banked
  7046  0016EA  51D1               	movf	(??___flmul+2)& (0+255),w,b
  7047  0016EC  0101               	movlb	1	; () banked
  7048  0016EE  2316               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7049  0016F0  0100               	movlb	0	; () banked
  7050  0016F2  51D2               	movf	(??___flmul+3)& (0+255),w,b
  7051  0016F4  0101               	movlb	1	; () banked
  7052  0016F6  2317               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7053                           
  7054                           ; BSR set to: 1
  7055  0016F8  C111  F112         	movff	___flmul@grs+2,___flmul@grs+3
  7056  0016FC  C110  F111         	movff	___flmul@grs+1,___flmul@grs+2
  7057  001700  C10F  F110         	movff	___flmul@grs,___flmul@grs+1
  7058  001704  6B0F               	clrf	___flmul@grs& (0+255),b
  7059                           
  7060                           ; BSR set to: 1
  7061  001706  510E               	movf	___flmul@aexp& (0+255),w,b
  7062  001708  C113  F0CF         	movff	___flmul@bexp,??___flmul
  7063  00170C  0100               	movlb	0	; () banked
  7064  00170E  6BD0               	clrf	(??___flmul+1)& (0+255),b
  7065  001710  27CF               	addwf	??___flmul& (0+255),f,b
  7066  001712  0E00               	movlw	0
  7067  001714  23D0               	addwfc	(??___flmul+1)& (0+255),f,b
  7068  001716  0E82               	movlw	130
  7069  001718  25CF               	addwf	??___flmul& (0+255),w,b
  7070  00171A  0101               	movlb	1	; () banked
  7071  00171C  6F18               	movwf	___flmul@temp& (0+255),b
  7072  00171E  0EFF               	movlw	255
  7073  001720  0100               	movlb	0	; () banked
  7074  001722  21D0               	addwfc	(??___flmul+1)& (0+255),w,b
  7075  001724  0101               	movlb	1	; () banked
  7076  001726  6F19               	movwf	(___flmul@temp+1)& (0+255),b
  7077  001728  D00F               	goto	l1013
  7078  00172A                     
  7079                           ; BSR set to: 1
  7080                           
  7081                           ; BSR set to: 1
  7082  00172A  90D8               	bcf	status,0,c
  7083  00172C  3714               	rlcf	___flmul@prod& (0+255),f,b
  7084  00172E  3715               	rlcf	(___flmul@prod+1)& (0+255),f,b
  7085  001730  3716               	rlcf	(___flmul@prod+2)& (0+255),f,b
  7086  001732  3717               	rlcf	(___flmul@prod+3)& (0+255),f,b
  7087                           
  7088                           ; BSR set to: 1
  7089  001734  BF12               	btfsc	(___flmul@grs+3)& (0+255),7,b
  7090                           
  7091                           ; BSR set to: 1
  7092  001736  8114               	bsf	___flmul@prod& (0+255),0,b
  7093                           
  7094                           ; BSR set to: 1
  7095  001738  90D8               	bcf	status,0,c
  7096  00173A  370F               	rlcf	___flmul@grs& (0+255),f,b
  7097  00173C  3710               	rlcf	(___flmul@grs+1)& (0+255),f,b
  7098  00173E  3711               	rlcf	(___flmul@grs+2)& (0+255),f,b
  7099  001740  3712               	rlcf	(___flmul@grs+3)& (0+255),f,b
  7100  001742  0718               	decf	___flmul@temp& (0+255),f,b
  7101  001744  A0D8               	btfss	status,0,c
  7102  001746  0719               	decf	(___flmul@temp+1)& (0+255),f,b
  7103  001748                     l1013:
  7104                           
  7105                           ; BSR set to: 1
  7106                           
  7107                           ; BSR set to: 1
  7108  001748  AF16               	btfss	(___flmul@prod+2)& (0+255),7,b
  7109  00174A  D7EF               	goto	l1014
  7110                           
  7111                           ; BSR set to: 1
  7112                           
  7113                           ; BSR set to: 1
  7114  00174C  0E00               	movlw	0
  7115  00174E  6F0E               	movwf	___flmul@aexp& (0+255),b
  7116                           
  7117                           ; BSR set to: 1
  7118  001750  AF12               	btfss	(___flmul@grs+3)& (0+255),7,b
  7119  001752  D021               	goto	l1020
  7120                           
  7121                           ; BSR set to: 1
  7122  001754  0EFF               	movlw	255
  7123  001756  150F               	andwf	___flmul@grs& (0+255),w,b
  7124  001758  0100               	movlb	0	; () banked
  7125  00175A  6FCF               	movwf	??___flmul& (0+255),b
  7126  00175C  0EFF               	movlw	255
  7127  00175E  0101               	movlb	1	; () banked
  7128  001760  1510               	andwf	(___flmul@grs+1)& (0+255),w,b
  7129  001762  0100               	movlb	0	; () banked
  7130  001764  6FD0               	movwf	(??___flmul+1)& (0+255),b
  7131  001766  0EFF               	movlw	255
  7132  001768  0101               	movlb	1	; () banked
  7133  00176A  1511               	andwf	(___flmul@grs+2)& (0+255),w,b
  7134  00176C  0100               	movlb	0	; () banked
  7135  00176E  6FD1               	movwf	(??___flmul+2)& (0+255),b
  7136  001770  0E7F               	movlw	127
  7137  001772  0101               	movlb	1	; () banked
  7138  001774  1512               	andwf	(___flmul@grs+3)& (0+255),w,b
  7139  001776  0100               	movlb	0	; () banked
  7140  001778  6FD2               	movwf	(??___flmul+3)& (0+255),b
  7141  00177A  51CF               	movf	??___flmul& (0+255),w,b
  7142  00177C  11D0               	iorwf	(??___flmul+1)& (0+255),w,b
  7143  00177E  11D1               	iorwf	(??___flmul+2)& (0+255),w,b
  7144  001780  11D2               	iorwf	(??___flmul+3)& (0+255),w,b
  7145  001782  B4D8               	btfsc	status,2,c
  7146  001784  D003               	goto	l1018
  7147                           
  7148                           ; BSR set to: 0
  7149  001786  0E01               	movlw	1
  7150  001788  0101               	movlb	1	; () banked
  7151  00178A  D004               	goto	L21
  7152  00178C                     l1018:
  7153                           
  7154                           ; BSR set to: 0
  7155  00178C  0101               	movlb	1	; () banked
  7156  00178E  A114               	btfss	___flmul@prod& (0+255),0,b
  7157  001790  D002               	goto	l1020
  7158                           
  7159                           ; BSR set to: 1
  7160  001792  0E01               	movlw	1
  7161  001794                     L21:
  7162  001794  6F0E               	movwf	___flmul@aexp& (0+255),b
  7163  001796                     l1020:
  7164                           
  7165                           ; BSR set to: 1
  7166                           
  7167                           ; BSR set to: 1
  7168                           
  7169                           ; BSR set to: 1
  7170  001796  510E               	movf	___flmul@aexp& (0+255),w,b
  7171  001798  B4D8               	btfsc	status,2,c
  7172  00179A  D021               	goto	l1022
  7173                           
  7174                           ; BSR set to: 1
  7175  00179C  0E01               	movlw	1
  7176  00179E  2714               	addwf	___flmul@prod& (0+255),f,b
  7177  0017A0  0E00               	movlw	0
  7178  0017A2  2315               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7179  0017A4  2316               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7180  0017A6  2317               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7181                           
  7182                           ; BSR set to: 1
  7183  0017A8  A117               	btfss	(___flmul@prod+3)& (0+255),0,b
  7184  0017AA  D019               	goto	l1022
  7185                           
  7186                           ; BSR set to: 1
  7187  0017AC  C114  F0CF         	movff	___flmul@prod,??___flmul
  7188  0017B0  C115  F0D0         	movff	___flmul@prod+1,??___flmul+1
  7189  0017B4  C116  F0D1         	movff	___flmul@prod+2,??___flmul+2
  7190  0017B8  C117  F0D2         	movff	___flmul@prod+3,??___flmul+3
  7191  0017BC  0100               	movlb	0	; () banked
  7192  0017BE  35D2               	rlcf	(??___flmul+3)& (0+255),w,b
  7193  0017C0  33D2               	rrcf	(??___flmul+3)& (0+255),f,b
  7194  0017C2  33D1               	rrcf	(??___flmul+2)& (0+255),f,b
  7195  0017C4  33D0               	rrcf	(??___flmul+1)& (0+255),f,b
  7196  0017C6  33CF               	rrcf	??___flmul& (0+255),f,b
  7197  0017C8  C0CF  F114         	movff	??___flmul,___flmul@prod
  7198  0017CC  C0D0  F115         	movff	??___flmul+1,___flmul@prod+1
  7199  0017D0  C0D1  F116         	movff	??___flmul+2,___flmul@prod+2
  7200  0017D4  C0D2  F117         	movff	??___flmul+3,___flmul@prod+3
  7201                           
  7202                           ; BSR set to: 0
  7203  0017D8  0101               	movlb	1	; () banked
  7204  0017DA  4B18               	infsnz	___flmul@temp& (0+255),f,b
  7205  0017DC  2B19               	incf	(___flmul@temp+1)& (0+255),f,b
  7206  0017DE                     l1022:
  7207                           
  7208                           ; BSR set to: 1
  7209                           
  7210                           ; BSR set to: 1
  7211                           
  7212                           ; BSR set to: 1
  7213  0017DE  BF19               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7214  0017E0  D00D               	goto	l1023
  7215  0017E2  5119               	movf	(___flmul@temp+1)& (0+255),w,b
  7216  0017E4  E103               	bnz	u6260
  7217  0017E6  2918               	incf	___flmul@temp& (0+255),w,b
  7218  0017E8  A0D8               	btfss	status,0,c
  7219  0017EA  D008               	goto	l1023
  7220  0017EC                     u6260:
  7221                           
  7222                           ; BSR set to: 1
  7223  0017EC  0E00               	movlw	0
  7224  0017EE  6F14               	movwf	___flmul@prod& (0+255),b
  7225  0017F0  0E00               	movlw	0
  7226  0017F2  6F15               	movwf	(___flmul@prod+1)& (0+255),b
  7227  0017F4  0E80               	movlw	128
  7228  0017F6  6F16               	movwf	(___flmul@prod+2)& (0+255),b
  7229  0017F8  0E7F               	movlw	127
  7230  0017FA  D020               	goto	L22
  7231  0017FC                     l1023:
  7232                           
  7233                           ; BSR set to: 1
  7234                           
  7235                           ; BSR set to: 1
  7236  0017FC  BF19               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7237  0017FE  D005               	goto	u6270
  7238  001800  5119               	movf	(___flmul@temp+1)& (0+255),w,b
  7239  001802  E10E               	bnz	l1025
  7240  001804  0518               	decf	___flmul@temp& (0+255),w,b
  7241  001806  B0D8               	btfsc	status,0,c
  7242  001808  D00B               	goto	l1025
  7243  00180A                     u6270:
  7244                           
  7245                           ; BSR set to: 1
  7246  00180A  0E00               	movlw	0
  7247  00180C  6F14               	movwf	___flmul@prod& (0+255),b
  7248  00180E  0E00               	movlw	0
  7249  001810  6F15               	movwf	(___flmul@prod+1)& (0+255),b
  7250  001812  0E00               	movlw	0
  7251  001814  6F16               	movwf	(___flmul@prod+2)& (0+255),b
  7252  001816  0E00               	movlw	0
  7253  001818  6F17               	movwf	(___flmul@prod+3)& (0+255),b
  7254  00181A  0E00               	movlw	0
  7255  00181C  6F0D               	movwf	___flmul@sign& (0+255),b
  7256  00181E  D00F               	goto	l1026
  7257  001820                     l1025:
  7258                           
  7259                           ; BSR set to: 1
  7260  001820  C118  F113         	movff	___flmul@temp,___flmul@bexp
  7261                           
  7262                           ; BSR set to: 1
  7263  001824  0EFF               	movlw	255
  7264  001826  1714               	andwf	___flmul@prod& (0+255),f,b
  7265  001828  0EFF               	movlw	255
  7266  00182A  1715               	andwf	(___flmul@prod+1)& (0+255),f,b
  7267  00182C  0E7F               	movlw	127
  7268  00182E  1716               	andwf	(___flmul@prod+2)& (0+255),f,b
  7269  001830  0E00               	movlw	0
  7270  001832  1717               	andwf	(___flmul@prod+3)& (0+255),f,b
  7271                           
  7272                           ; BSR set to: 1
  7273  001834  B113               	btfsc	___flmul@bexp& (0+255),0,b
  7274                           
  7275                           ; BSR set to: 1
  7276  001836  8F16               	bsf	(___flmul@prod+2)& (0+255),7,b
  7277                           
  7278                           ; BSR set to: 1
  7279                           
  7280                           ; BSR set to: 1
  7281  001838  90D8               	bcf	status,0,c
  7282  00183A  3113               	rrcf	___flmul@bexp& (0+255),w,b
  7283  00183C                     L22:
  7284  00183C  6F17               	movwf	(___flmul@prod+3)& (0+255),b
  7285  00183E                     l1026:
  7286                           
  7287                           ; BSR set to: 1
  7288                           
  7289                           ; BSR set to: 1
  7290                           
  7291                           ; BSR set to: 1
  7292  00183E  510D               	movf	___flmul@sign& (0+255),w,b
  7293  001840  1317               	iorwf	(___flmul@prod+3)& (0+255),f,b
  7294                           
  7295                           ; BSR set to: 1
  7296  001842  C114  F0C7         	movff	___flmul@prod,?___flmul
  7297  001846  C115  F0C8         	movff	___flmul@prod+1,?___flmul+1
  7298  00184A  C116  F0C9         	movff	___flmul@prod+2,?___flmul+2
  7299  00184E  C117  F0CA         	movff	___flmul@prod+3,?___flmul+3
  7300  001852  0012               	return	
  7301  001854                     __end_of___flmul:
  7302                           	opt stack 0
  7303                           tblptru	equ	0xFF8
  7304                           tblptrh	equ	0xFF7
  7305                           tblptrl	equ	0xFF6
  7306                           tablat	equ	0xFF5
  7307                           prodh	equ	0xFF4
  7308                           prodl	equ	0xFF3
  7309                           intcon	equ	0xFF2
  7310                           indf0	equ	0xFEF
  7311                           postinc0	equ	0xFEE
  7312                           fsr0h	equ	0xFEA
  7313                           fsr0l	equ	0xFE9
  7314                           wreg	equ	0xFE8
  7315                           indf1	equ	0xFE7
  7316                           fsr1h	equ	0xFE2
  7317                           fsr1l	equ	0xFE1
  7318                           indf2	equ	0xFDF
  7319                           postinc2	equ	0xFDE
  7320                           fsr2h	equ	0xFDA
  7321                           fsr2l	equ	0xFD9
  7322                           status	equ	0xFD8
  7323                           
  7324 ;; *************** function ___fldiv *****************
  7325 ;; Defined at:
  7326 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\sprcdiv.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;  b               4   59[BANK0 ] unsigned char 
  7329 ;;  a               4   63[BANK0 ] unsigned char 
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;  grs             4    7[BANK1 ] unsigned long 
  7332 ;;  rem             4    1[BANK1 ] unsigned long 
  7333 ;;  new_exp         2    5[BANK1 ] int 
  7334 ;;  aexp            1   12[BANK1 ] unsigned char 
  7335 ;;  bexp            1   11[BANK1 ] unsigned char 
  7336 ;;  sign            1    0[BANK1 ] unsigned char 
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  4   59[BANK0 ] unsigned char 
  7339 ;; Registers used:
  7340 ;;		wreg, status,2, status,0
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7346 ;;      Params:         0       8       0       0       0       0       0
  7347 ;;      Locals:         0       0      13       0       0       0       0
  7348 ;;      Temps:          0       4       0       0       0       0       0
  7349 ;;      Totals:         0      12      13       0       0       0       0
  7350 ;;Total ram usage:       25 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:    5
  7353 ;; This function calls:
  7354 ;;		Nothing
  7355 ;; This function is called by:
  7356 ;;		_MusicPWM1_Duty
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360                           	psect	text26
  7361  001854                     __ptext26:
  7362                           	opt stack 0
  7363  001854                     ___fldiv:
  7364                           	opt stack 22
  7365                           
  7366                           ;incstack = 0
  7367  001854  0100               	movlb	0	; () banked
  7368  001856  51BE               	movf	(___fldiv@b+3)& (0+255),w,b
  7369  001858  0B80               	andlw	128
  7370  00185A  0101               	movlb	1	; () banked
  7371  00185C  6F00               	movwf	___fldiv@sign& (0+255),b
  7372  00185E  0100               	movlb	0	; () banked
  7373  001860  51BE               	movf	(___fldiv@b+3)& (0+255),w,b
  7374  001862  25BE               	addwf	(___fldiv@b+3)& (0+255),w,b
  7375  001864  0101               	movlb	1	; () banked
  7376  001866  6F0B               	movwf	___fldiv@bexp& (0+255),b
  7377                           
  7378                           ; BSR set to: 1
  7379  001868  0100               	movlb	0	; () banked
  7380  00186A  AFBD               	btfss	(___fldiv@b+2)& (0+255),7,b
  7381  00186C  D002               	goto	l967
  7382                           
  7383                           ; BSR set to: 0
  7384  00186E  0101               	movlb	1	; () banked
  7385  001870  810B               	bsf	___fldiv@bexp& (0+255),0,b
  7386  001872                     l967:
  7387                           
  7388                           ; BSR set to: 1
  7389  001872  0101               	movlb	1	; () banked
  7390  001874  510B               	movf	___fldiv@bexp& (0+255),w,b
  7391  001876  B4D8               	btfsc	status,2,c
  7392  001878  D00F               	goto	l968
  7393                           
  7394                           ; BSR set to: 1
  7395  00187A  290B               	incf	___fldiv@bexp& (0+255),w,b
  7396  00187C  A4D8               	btfss	status,2,c
  7397  00187E  D009               	goto	l969
  7398                           
  7399                           ; BSR set to: 1
  7400  001880  0E00               	movlw	0
  7401  001882  0100               	movlb	0	; () banked
  7402  001884  6FBB               	movwf	___fldiv@b& (0+255),b
  7403  001886  0E00               	movlw	0
  7404  001888  6FBC               	movwf	(___fldiv@b+1)& (0+255),b
  7405  00188A  0E00               	movlw	0
  7406  00188C  6FBD               	movwf	(___fldiv@b+2)& (0+255),b
  7407  00188E  0E00               	movlw	0
  7408  001890  6FBE               	movwf	(___fldiv@b+3)& (0+255),b
  7409  001892                     l969:
  7410                           
  7411                           ; BSR set to: 0
  7412  001892  0100               	movlb	0	; () banked
  7413  001894  8FBD               	bsf	(___fldiv@b+2)& (0+255),7,b
  7414  001896  D007               	goto	L23
  7415  001898                     l968:
  7416                           
  7417                           ; BSR set to: 0
  7418  001898  0E00               	movlw	0
  7419  00189A  0100               	movlb	0	; () banked
  7420  00189C  6FBB               	movwf	___fldiv@b& (0+255),b
  7421  00189E  0E00               	movlw	0
  7422  0018A0  6FBC               	movwf	(___fldiv@b+1)& (0+255),b
  7423  0018A2  0E00               	movlw	0
  7424  0018A4  6FBD               	movwf	(___fldiv@b+2)& (0+255),b
  7425  0018A6                     L23:
  7426  0018A6  0E00               	movlw	0
  7427  0018A8  6FBE               	movwf	(___fldiv@b+3)& (0+255),b
  7428                           
  7429                           ; BSR set to: 0
  7430                           
  7431                           ; BSR set to: 0
  7432  0018AA  51C2               	movf	(___fldiv@a+3)& (0+255),w,b
  7433  0018AC  0B80               	andlw	128
  7434  0018AE  0101               	movlb	1	; () banked
  7435  0018B0  1B00               	xorwf	___fldiv@sign& (0+255),f,b
  7436                           
  7437                           ; BSR set to: 1
  7438  0018B2  0100               	movlb	0	; () banked
  7439  0018B4  51C2               	movf	(___fldiv@a+3)& (0+255),w,b
  7440  0018B6  25C2               	addwf	(___fldiv@a+3)& (0+255),w,b
  7441  0018B8  0101               	movlb	1	; () banked
  7442  0018BA  6F0C               	movwf	___fldiv@aexp& (0+255),b
  7443                           
  7444                           ; BSR set to: 1
  7445  0018BC  0100               	movlb	0	; () banked
  7446  0018BE  AFC1               	btfss	(___fldiv@a+2)& (0+255),7,b
  7447  0018C0  D002               	goto	l971
  7448                           
  7449                           ; BSR set to: 0
  7450  0018C2  0101               	movlb	1	; () banked
  7451  0018C4  810C               	bsf	___fldiv@aexp& (0+255),0,b
  7452  0018C6                     l971:
  7453                           
  7454                           ; BSR set to: 1
  7455  0018C6  0101               	movlb	1	; () banked
  7456  0018C8  510C               	movf	___fldiv@aexp& (0+255),w,b
  7457  0018CA  B4D8               	btfsc	status,2,c
  7458  0018CC  D00F               	goto	l972
  7459                           
  7460                           ; BSR set to: 1
  7461  0018CE  290C               	incf	___fldiv@aexp& (0+255),w,b
  7462  0018D0  A4D8               	btfss	status,2,c
  7463  0018D2  D009               	goto	l973
  7464                           
  7465                           ; BSR set to: 1
  7466  0018D4  0E00               	movlw	0
  7467  0018D6  0100               	movlb	0	; () banked
  7468  0018D8  6FBF               	movwf	___fldiv@a& (0+255),b
  7469  0018DA  0E00               	movlw	0
  7470  0018DC  6FC0               	movwf	(___fldiv@a+1)& (0+255),b
  7471  0018DE  0E00               	movlw	0
  7472  0018E0  6FC1               	movwf	(___fldiv@a+2)& (0+255),b
  7473  0018E2  0E00               	movlw	0
  7474  0018E4  6FC2               	movwf	(___fldiv@a+3)& (0+255),b
  7475  0018E6                     l973:
  7476                           
  7477                           ; BSR set to: 0
  7478  0018E6  0100               	movlb	0	; () banked
  7479  0018E8  8FC1               	bsf	(___fldiv@a+2)& (0+255),7,b
  7480  0018EA  D007               	goto	L24
  7481  0018EC                     l972:
  7482                           
  7483                           ; BSR set to: 0
  7484  0018EC  0E00               	movlw	0
  7485  0018EE  0100               	movlb	0	; () banked
  7486  0018F0  6FBF               	movwf	___fldiv@a& (0+255),b
  7487  0018F2  0E00               	movlw	0
  7488  0018F4  6FC0               	movwf	(___fldiv@a+1)& (0+255),b
  7489  0018F6  0E00               	movlw	0
  7490  0018F8  6FC1               	movwf	(___fldiv@a+2)& (0+255),b
  7491  0018FA                     L24:
  7492  0018FA  0E00               	movlw	0
  7493  0018FC  6FC2               	movwf	(___fldiv@a+3)& (0+255),b
  7494                           
  7495                           ; BSR set to: 0
  7496                           
  7497                           ; BSR set to: 0
  7498  0018FE  51BF               	movf	___fldiv@a& (0+255),w,b
  7499  001900  11C0               	iorwf	(___fldiv@a+1)& (0+255),w,b
  7500  001902  11C1               	iorwf	(___fldiv@a+2)& (0+255),w,b
  7501  001904  11C2               	iorwf	(___fldiv@a+3)& (0+255),w,b
  7502  001906  A4D8               	btfss	status,2,c
  7503  001908  D015               	goto	l975
  7504                           
  7505                           ; BSR set to: 0
  7506  00190A  0E00               	movlw	0
  7507  00190C  6FBB               	movwf	___fldiv@b& (0+255),b
  7508  00190E  0E00               	movlw	0
  7509  001910  6FBC               	movwf	(___fldiv@b+1)& (0+255),b
  7510  001912  0E00               	movlw	0
  7511  001914  6FBD               	movwf	(___fldiv@b+2)& (0+255),b
  7512  001916  0E00               	movlw	0
  7513  001918  6FBE               	movwf	(___fldiv@b+3)& (0+255),b
  7514                           
  7515                           ; BSR set to: 0
  7516  00191A  0E80               	movlw	128
  7517  00191C  13BD               	iorwf	(___fldiv@b+2)& (0+255),f,b
  7518  00191E  0E7F               	movlw	127
  7519  001920  13BE               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7520                           
  7521                           ; BSR set to: 0
  7522  001922  C0BB  F0BB         	movff	___fldiv@b,?___fldiv
  7523  001926  C0BC  F0BC         	movff	___fldiv@b+1,?___fldiv+1
  7524  00192A  C0BD  F0BD         	movff	___fldiv@b+2,?___fldiv+2
  7525  00192E  C0BE  F0BE         	movff	___fldiv@b+3,?___fldiv+3
  7526                           
  7527                           ; BSR set to: 0
  7528  001932  0012               	return	
  7529  001934                     l975:
  7530                           
  7531                           ; BSR set to: 0
  7532                           
  7533                           ; BSR set to: 0
  7534  001934  0101               	movlb	1	; () banked
  7535  001936  510B               	movf	___fldiv@bexp& (0+255),w,b
  7536  001938  A4D8               	btfss	status,2,c
  7537  00193A  D012               	goto	l977
  7538                           
  7539                           ; BSR set to: 1
  7540  00193C  0E00               	movlw	0
  7541  00193E  0100               	movlb	0	; () banked
  7542  001940  6FBB               	movwf	___fldiv@b& (0+255),b
  7543  001942  0E00               	movlw	0
  7544  001944  6FBC               	movwf	(___fldiv@b+1)& (0+255),b
  7545  001946  0E00               	movlw	0
  7546  001948  6FBD               	movwf	(___fldiv@b+2)& (0+255),b
  7547  00194A  0E00               	movlw	0
  7548  00194C  6FBE               	movwf	(___fldiv@b+3)& (0+255),b
  7549                           
  7550                           ; BSR set to: 0
  7551  00194E  C0BB  F0BB         	movff	___fldiv@b,?___fldiv
  7552  001952  C0BC  F0BC         	movff	___fldiv@b+1,?___fldiv+1
  7553  001956  C0BD  F0BD         	movff	___fldiv@b+2,?___fldiv+2
  7554  00195A  C0BE  F0BE         	movff	___fldiv@b+3,?___fldiv+3
  7555                           
  7556                           ; BSR set to: 0
  7557  00195E  0012               	return	
  7558  001960                     l977:
  7559                           
  7560                           ; BSR set to: 0
  7561  001960  0101               	movlb	1	; () banked
  7562  001962  510C               	movf	___fldiv@aexp& (0+255),w,b
  7563  001964  0100               	movlb	0	; () banked
  7564  001966  6FC3               	movwf	??___fldiv& (0+255),b
  7565  001968  6BC4               	clrf	(??___fldiv+1)& (0+255),b
  7566  00196A  1FC3               	comf	??___fldiv& (0+255),f,b
  7567  00196C  1FC4               	comf	(??___fldiv+1)& (0+255),f,b
  7568  00196E  4BC3               	infsnz	??___fldiv& (0+255),f,b
  7569  001970  2BC4               	incf	(??___fldiv+1)& (0+255),f,b
  7570  001972  0101               	movlb	1	; () banked
  7571  001974  510B               	movf	___fldiv@bexp& (0+255),w,b
  7572  001976  0100               	movlb	0	; () banked
  7573  001978  6FC5               	movwf	(??___fldiv+2)& (0+255),b
  7574  00197A  6BC6               	clrf	(??___fldiv+3)& (0+255),b
  7575  00197C  51C3               	movf	??___fldiv& (0+255),w,b
  7576  00197E  27C5               	addwf	(??___fldiv+2)& (0+255),f,b
  7577  001980  51C4               	movf	(??___fldiv+1)& (0+255),w,b
  7578  001982  23C6               	addwfc	(??___fldiv+3)& (0+255),f,b
  7579  001984  0E7F               	movlw	127
  7580  001986  25C5               	addwf	(??___fldiv+2)& (0+255),w,b
  7581  001988  0101               	movlb	1	; () banked
  7582  00198A  6F05               	movwf	___fldiv@new_exp& (0+255),b
  7583  00198C  0E00               	movlw	0
  7584  00198E  0100               	movlb	0	; () banked
  7585  001990  21C6               	addwfc	(??___fldiv+3)& (0+255),w,b
  7586  001992  0101               	movlb	1	; () banked
  7587  001994  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7588                           
  7589                           ; BSR set to: 1
  7590  001996  C0BB  F101         	movff	___fldiv@b,___fldiv@rem
  7591  00199A  C0BC  F102         	movff	___fldiv@b+1,___fldiv@rem+1
  7592  00199E  C0BD  F103         	movff	___fldiv@b+2,___fldiv@rem+2
  7593  0019A2  C0BE  F104         	movff	___fldiv@b+3,___fldiv@rem+3
  7594                           
  7595                           ; BSR set to: 1
  7596  0019A6  0E00               	movlw	0
  7597  0019A8  0100               	movlb	0	; () banked
  7598  0019AA  6FBB               	movwf	___fldiv@b& (0+255),b
  7599  0019AC  0E00               	movlw	0
  7600  0019AE  6FBC               	movwf	(___fldiv@b+1)& (0+255),b
  7601  0019B0  0E00               	movlw	0
  7602  0019B2  6FBD               	movwf	(___fldiv@b+2)& (0+255),b
  7603  0019B4  0E00               	movlw	0
  7604  0019B6  6FBE               	movwf	(___fldiv@b+3)& (0+255),b
  7605                           
  7606                           ; BSR set to: 0
  7607  0019B8  0E00               	movlw	0
  7608  0019BA  0101               	movlb	1	; () banked
  7609  0019BC  6F07               	movwf	___fldiv@grs& (0+255),b
  7610  0019BE  0E00               	movlw	0
  7611  0019C0  6F08               	movwf	(___fldiv@grs+1)& (0+255),b
  7612  0019C2  0E00               	movlw	0
  7613  0019C4  6F09               	movwf	(___fldiv@grs+2)& (0+255),b
  7614  0019C6  0E00               	movlw	0
  7615  0019C8  6F0A               	movwf	(___fldiv@grs+3)& (0+255),b
  7616                           
  7617                           ; BSR set to: 1
  7618  0019CA  0E00               	movlw	0
  7619  0019CC  6F0C               	movwf	___fldiv@aexp& (0+255),b
  7620  0019CE  D03D               	goto	l978
  7621  0019D0                     
  7622                           ; BSR set to: 1
  7623                           
  7624                           ; BSR set to: 1
  7625  0019D0  510C               	movf	___fldiv@aexp& (0+255),w,b
  7626  0019D2  B4D8               	btfsc	status,2,c
  7627  0019D4  D016               	goto	l980
  7628                           
  7629                           ; BSR set to: 1
  7630  0019D6  90D8               	bcf	status,0,c
  7631  0019D8  3701               	rlcf	___fldiv@rem& (0+255),f,b
  7632  0019DA  3702               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7633  0019DC  3703               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7634  0019DE  3704               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7635  0019E0  0100               	movlb	0	; () banked
  7636  0019E2  90D8               	bcf	status,0,c
  7637  0019E4  37BB               	rlcf	___fldiv@b& (0+255),f,b
  7638  0019E6  37BC               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7639  0019E8  37BD               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7640  0019EA  37BE               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7641                           
  7642                           ; BSR set to: 0
  7643  0019EC  0101               	movlb	1	; () banked
  7644  0019EE  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7645  0019F0  D002               	goto	l981
  7646                           
  7647                           ; BSR set to: 1
  7648  0019F2  0100               	movlb	0	; () banked
  7649  0019F4  81BB               	bsf	___fldiv@b& (0+255),0,b
  7650  0019F6                     l981:
  7651  0019F6  0101               	movlb	1	; () banked
  7652  0019F8  90D8               	bcf	status,0,c
  7653  0019FA  3707               	rlcf	___fldiv@grs& (0+255),f,b
  7654  0019FC  3708               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7655  0019FE  3709               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7656  001A00  370A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7657  001A02                     l980:
  7658                           
  7659                           ; BSR set to: 1
  7660                           
  7661                           ; BSR set to: 1
  7662  001A02  0100               	movlb	0	; () banked
  7663  001A04  51BF               	movf	___fldiv@a& (0+255),w,b
  7664  001A06  0101               	movlb	1	; () banked
  7665  001A08  5D01               	subwf	___fldiv@rem& (0+255),w,b
  7666  001A0A  0100               	movlb	0	; () banked
  7667  001A0C  51C0               	movf	(___fldiv@a+1)& (0+255),w,b
  7668  001A0E  0101               	movlb	1	; () banked
  7669  001A10  5902               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7670  001A12  0100               	movlb	0	; () banked
  7671  001A14  51C1               	movf	(___fldiv@a+2)& (0+255),w,b
  7672  001A16  0101               	movlb	1	; () banked
  7673  001A18  5903               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7674  001A1A  0100               	movlb	0	; () banked
  7675  001A1C  51C2               	movf	(___fldiv@a+3)& (0+255),w,b
  7676  001A1E  0101               	movlb	1	; () banked
  7677  001A20  5904               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7678  001A22  A0D8               	btfss	status,0,c
  7679  001A24  D011               	goto	l982
  7680                           
  7681                           ; BSR set to: 1
  7682  001A26  8D0A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7683                           
  7684                           ; BSR set to: 1
  7685  001A28  0100               	movlb	0	; () banked
  7686  001A2A  51BF               	movf	___fldiv@a& (0+255),w,b
  7687  001A2C  0101               	movlb	1	; () banked
  7688  001A2E  5F01               	subwf	___fldiv@rem& (0+255),f,b
  7689  001A30  0100               	movlb	0	; () banked
  7690  001A32  51C0               	movf	(___fldiv@a+1)& (0+255),w,b
  7691  001A34  0101               	movlb	1	; () banked
  7692  001A36  5B02               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7693  001A38  0100               	movlb	0	; () banked
  7694  001A3A  51C1               	movf	(___fldiv@a+2)& (0+255),w,b
  7695  001A3C  0101               	movlb	1	; () banked
  7696  001A3E  5B03               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7697  001A40  0100               	movlb	0	; () banked
  7698  001A42  51C2               	movf	(___fldiv@a+3)& (0+255),w,b
  7699  001A44  0101               	movlb	1	; () banked
  7700  001A46  5B04               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7701  001A48                     l982:
  7702                           
  7703                           ; BSR set to: 1
  7704                           
  7705                           ; BSR set to: 1
  7706  001A48  2B0C               	incf	___fldiv@aexp& (0+255),f,b
  7707  001A4A                     l978:
  7708                           
  7709                           ; BSR set to: 1
  7710  001A4A  0E19               	movlw	25
  7711  001A4C  650C               	cpfsgt	___fldiv@aexp& (0+255),b
  7712  001A4E  D7C0               	goto	l979
  7713                           
  7714                           ; BSR set to: 1
  7715                           
  7716                           ; BSR set to: 1
  7717  001A50  5101               	movf	___fldiv@rem& (0+255),w,b
  7718  001A52  1102               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7719  001A54  1103               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7720  001A56  1104               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7721  001A58  B4D8               	btfsc	status,2,c
  7722  001A5A  D016               	goto	l985
  7723                           
  7724                           ; BSR set to: 1
  7725  001A5C  8107               	bsf	___fldiv@grs& (0+255),0,b
  7726                           
  7727                           ; BSR set to: 1
  7728  001A5E  D014               	goto	l985
  7729  001A60                     
  7730                           ; BSR set to: 1
  7731  001A60  0100               	movlb	0	; () banked
  7732  001A62  90D8               	bcf	status,0,c
  7733  001A64  37BB               	rlcf	___fldiv@b& (0+255),f,b
  7734  001A66  37BC               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7735  001A68  37BD               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7736  001A6A  37BE               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7737                           
  7738                           ; BSR set to: 0
  7739  001A6C  0101               	movlb	1	; () banked
  7740  001A6E  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7741  001A70  D002               	goto	l987
  7742                           
  7743                           ; BSR set to: 1
  7744  001A72  0100               	movlb	0	; () banked
  7745  001A74  81BB               	bsf	___fldiv@b& (0+255),0,b
  7746  001A76                     l987:
  7747  001A76  0101               	movlb	1	; () banked
  7748  001A78  90D8               	bcf	status,0,c
  7749  001A7A  3707               	rlcf	___fldiv@grs& (0+255),f,b
  7750  001A7C  3708               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7751  001A7E  3709               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7752  001A80  370A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7753  001A82  0705               	decf	___fldiv@new_exp& (0+255),f,b
  7754  001A84  A0D8               	btfss	status,0,c
  7755  001A86  0706               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7756  001A88                     l985:
  7757                           
  7758                           ; BSR set to: 1
  7759                           
  7760                           ; BSR set to: 1
  7761  001A88  0100               	movlb	0	; () banked
  7762  001A8A  AFBD               	btfss	(___fldiv@b+2)& (0+255),7,b
  7763  001A8C  D7E9               	goto	l986
  7764                           
  7765                           ; BSR set to: 0
  7766                           
  7767                           ; BSR set to: 0
  7768  001A8E  0E00               	movlw	0
  7769  001A90  0101               	movlb	1	; () banked
  7770  001A92  6F0C               	movwf	___fldiv@aexp& (0+255),b
  7771                           
  7772                           ; BSR set to: 1
  7773  001A94  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7774  001A96  D01E               	goto	l992
  7775                           
  7776                           ; BSR set to: 1
  7777  001A98  0EFF               	movlw	255
  7778  001A9A  1507               	andwf	___fldiv@grs& (0+255),w,b
  7779  001A9C  0100               	movlb	0	; () banked
  7780  001A9E  6FC3               	movwf	??___fldiv& (0+255),b
  7781  001AA0  0EFF               	movlw	255
  7782  001AA2  0101               	movlb	1	; () banked
  7783  001AA4  1508               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7784  001AA6  0100               	movlb	0	; () banked
  7785  001AA8  6FC4               	movwf	(??___fldiv+1)& (0+255),b
  7786  001AAA  0EFF               	movlw	255
  7787  001AAC  0101               	movlb	1	; () banked
  7788  001AAE  1509               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7789  001AB0  0100               	movlb	0	; () banked
  7790  001AB2  6FC5               	movwf	(??___fldiv+2)& (0+255),b
  7791  001AB4  0E7F               	movlw	127
  7792  001AB6  0101               	movlb	1	; () banked
  7793  001AB8  150A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7794  001ABA  0100               	movlb	0	; () banked
  7795  001ABC  6FC6               	movwf	(??___fldiv+3)& (0+255),b
  7796  001ABE  51C3               	movf	??___fldiv& (0+255),w,b
  7797  001AC0  11C4               	iorwf	(??___fldiv+1)& (0+255),w,b
  7798  001AC2  11C5               	iorwf	(??___fldiv+2)& (0+255),w,b
  7799  001AC4  11C6               	iorwf	(??___fldiv+3)& (0+255),w,b
  7800  001AC6  A4D8               	btfss	status,2,c
  7801  001AC8  D002               	goto	u6040
  7802                           
  7803                           ; BSR set to: 0
  7804                           
  7805                           ; BSR set to: 0
  7806  001ACA  A1BB               	btfss	___fldiv@b& (0+255),0,b
  7807  001ACC  D003               	goto	l992
  7808  001ACE                     u6040:
  7809                           
  7810                           ; BSR set to: 0
  7811  001ACE  0E01               	movlw	1
  7812  001AD0  0101               	movlb	1	; () banked
  7813  001AD2  6F0C               	movwf	___fldiv@aexp& (0+255),b
  7814  001AD4                     l992:
  7815                           
  7816                           ; BSR set to: 1
  7817                           
  7818                           ; BSR set to: 1
  7819  001AD4  0101               	movlb	1	; () banked
  7820  001AD6  510C               	movf	___fldiv@aexp& (0+255),w,b
  7821  001AD8  B4D8               	btfsc	status,2,c
  7822  001ADA  D021               	goto	l994
  7823                           
  7824                           ; BSR set to: 1
  7825  001ADC  0E01               	movlw	1
  7826  001ADE  0100               	movlb	0	; () banked
  7827  001AE0  27BB               	addwf	___fldiv@b& (0+255),f,b
  7828  001AE2  0E00               	movlw	0
  7829  001AE4  23BC               	addwfc	(___fldiv@b+1)& (0+255),f,b
  7830  001AE6  23BD               	addwfc	(___fldiv@b+2)& (0+255),f,b
  7831  001AE8  23BE               	addwfc	(___fldiv@b+3)& (0+255),f,b
  7832                           
  7833                           ; BSR set to: 0
  7834  001AEA  A1BE               	btfss	(___fldiv@b+3)& (0+255),0,b
  7835  001AEC  D018               	goto	l994
  7836                           
  7837                           ; BSR set to: 0
  7838  001AEE  C0BB  F0C3         	movff	___fldiv@b,??___fldiv
  7839  001AF2  C0BC  F0C4         	movff	___fldiv@b+1,??___fldiv+1
  7840  001AF6  C0BD  F0C5         	movff	___fldiv@b+2,??___fldiv+2
  7841  001AFA  C0BE  F0C6         	movff	___fldiv@b+3,??___fldiv+3
  7842  001AFE  35C6               	rlcf	(??___fldiv+3)& (0+255),w,b
  7843  001B00  33C6               	rrcf	(??___fldiv+3)& (0+255),f,b
  7844  001B02  33C5               	rrcf	(??___fldiv+2)& (0+255),f,b
  7845  001B04  33C4               	rrcf	(??___fldiv+1)& (0+255),f,b
  7846  001B06  33C3               	rrcf	??___fldiv& (0+255),f,b
  7847  001B08  C0C3  F0BB         	movff	??___fldiv,___fldiv@b
  7848  001B0C  C0C4  F0BC         	movff	??___fldiv+1,___fldiv@b+1
  7849  001B10  C0C5  F0BD         	movff	??___fldiv+2,___fldiv@b+2
  7850  001B14  C0C6  F0BE         	movff	??___fldiv+3,___fldiv@b+3
  7851                           
  7852                           ; BSR set to: 0
  7853  001B18  0101               	movlb	1	; () banked
  7854  001B1A  4B05               	infsnz	___fldiv@new_exp& (0+255),f,b
  7855  001B1C  2B06               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7856  001B1E                     l994:
  7857                           
  7858                           ; BSR set to: 1
  7859                           
  7860                           ; BSR set to: 1
  7861  001B1E  0101               	movlb	1	; () banked
  7862  001B20  BF06               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7863  001B22  D011               	goto	l995
  7864  001B24  5106               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7865  001B26  E103               	bnz	u6070
  7866  001B28  2905               	incf	___fldiv@new_exp& (0+255),w,b
  7867  001B2A  A0D8               	btfss	status,0,c
  7868  001B2C  D00C               	goto	l995
  7869  001B2E                     u6070:
  7870                           
  7871                           ; BSR set to: 1
  7872  001B2E  0E00               	movlw	0
  7873  001B30  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7874  001B32  6905               	setf	___fldiv@new_exp& (0+255),b
  7875  001B34  0E00               	movlw	0
  7876  001B36  0100               	movlb	0	; () banked
  7877  001B38  6FBB               	movwf	___fldiv@b& (0+255),b
  7878  001B3A  0E00               	movlw	0
  7879  001B3C  6FBC               	movwf	(___fldiv@b+1)& (0+255),b
  7880  001B3E  0E00               	movlw	0
  7881  001B40  6FBD               	movwf	(___fldiv@b+2)& (0+255),b
  7882  001B42  0E00               	movlw	0
  7883  001B44  6FBE               	movwf	(___fldiv@b+3)& (0+255),b
  7884  001B46                     l995:
  7885                           
  7886                           ; BSR set to: 0
  7887  001B46  0101               	movlb	1	; () banked
  7888  001B48  BF06               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7889  001B4A  D005               	goto	u6080
  7890  001B4C  5106               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7891  001B4E  E113               	bnz	l5010
  7892  001B50  0505               	decf	___fldiv@new_exp& (0+255),w,b
  7893  001B52  B0D8               	btfsc	status,0,c
  7894  001B54  D010               	goto	l996
  7895  001B56                     u6080:
  7896                           
  7897                           ; BSR set to: 1
  7898  001B56  0E00               	movlw	0
  7899  001B58  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7900  001B5A  0E00               	movlw	0
  7901  001B5C  6F05               	movwf	___fldiv@new_exp& (0+255),b
  7902  001B5E  0E00               	movlw	0
  7903  001B60  0100               	movlb	0	; () banked
  7904  001B62  6FBB               	movwf	___fldiv@b& (0+255),b
  7905  001B64  0E00               	movlw	0
  7906  001B66  6FBC               	movwf	(___fldiv@b+1)& (0+255),b
  7907  001B68  0E00               	movlw	0
  7908  001B6A  6FBD               	movwf	(___fldiv@b+2)& (0+255),b
  7909  001B6C  0E00               	movlw	0
  7910  001B6E  6FBE               	movwf	(___fldiv@b+3)& (0+255),b
  7911  001B70  0E00               	movlw	0
  7912  001B72  0101               	movlb	1	; () banked
  7913  001B74  6F00               	movwf	___fldiv@sign& (0+255),b
  7914  001B76                     l996:
  7915  001B76                     l5010:
  7916                           
  7917                           ; BSR set to: 1
  7918  001B76  C105  F10B         	movff	___fldiv@new_exp,___fldiv@bexp
  7919                           
  7920                           ; BSR set to: 1
  7921  001B7A  A10B               	btfss	___fldiv@bexp& (0+255),0,b
  7922  001B7C  D003               	goto	l997
  7923                           
  7924                           ; BSR set to: 1
  7925  001B7E  0100               	movlb	0	; () banked
  7926  001B80  8FBD               	bsf	(___fldiv@b+2)& (0+255),7,b
  7927  001B82  D002               	goto	l998
  7928  001B84                     l997:
  7929                           
  7930                           ; BSR set to: 0
  7931  001B84  0100               	movlb	0	; () banked
  7932  001B86  9FBD               	bcf	(___fldiv@b+2)& (0+255),7,b
  7933  001B88                     l998:
  7934                           
  7935                           ; BSR set to: 0
  7936                           
  7937                           ; BSR set to: 0
  7938  001B88  0101               	movlb	1	; () banked
  7939  001B8A  90D8               	bcf	status,0,c
  7940  001B8C  310B               	rrcf	___fldiv@bexp& (0+255),w,b
  7941  001B8E  0100               	movlb	0	; () banked
  7942  001B90  6FBE               	movwf	(___fldiv@b+3)& (0+255),b
  7943                           
  7944                           ; BSR set to: 0
  7945  001B92  0101               	movlb	1	; () banked
  7946  001B94  5100               	movf	___fldiv@sign& (0+255),w,b
  7947  001B96  0100               	movlb	0	; () banked
  7948  001B98  13BE               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7949                           
  7950                           ; BSR set to: 0
  7951  001B9A  C0BB  F0BB         	movff	___fldiv@b,?___fldiv
  7952  001B9E  C0BC  F0BC         	movff	___fldiv@b+1,?___fldiv+1
  7953  001BA2  C0BD  F0BD         	movff	___fldiv@b+2,?___fldiv+2
  7954  001BA6  C0BE  F0BE         	movff	___fldiv@b+3,?___fldiv+3
  7955  001BAA  0012               	return	
  7956  001BAC                     __end_of___fldiv:
  7957                           	opt stack 0
  7958                           tblptru	equ	0xFF8
  7959                           tblptrh	equ	0xFF7
  7960                           tblptrl	equ	0xFF6
  7961                           tablat	equ	0xFF5
  7962                           prodh	equ	0xFF4
  7963                           prodl	equ	0xFF3
  7964                           intcon	equ	0xFF2
  7965                           indf0	equ	0xFEF
  7966                           postinc0	equ	0xFEE
  7967                           fsr0h	equ	0xFEA
  7968                           fsr0l	equ	0xFE9
  7969                           wreg	equ	0xFE8
  7970                           indf1	equ	0xFE7
  7971                           fsr1h	equ	0xFE2
  7972                           fsr1l	equ	0xFE1
  7973                           indf2	equ	0xFDF
  7974                           postinc2	equ	0xFDE
  7975                           fsr2h	equ	0xFDA
  7976                           fsr2l	equ	0xFD9
  7977                           status	equ	0xFD8
  7978                           
  7979 ;; *************** function _MusicPWM_Max_Duty *****************
  7980 ;; Defined at:
  7981 ;;		line 152 in file "main.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  2   41[BANK0 ] int 
  7988 ;; Registers used:
  7989 ;;		wreg, status,2, status,0, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7995 ;;      Params:         0       2       0       0       0       0       0
  7996 ;;      Locals:         0       0       0       0       0       0       0
  7997 ;;      Temps:          0       2       0       0       0       0       0
  7998 ;;      Totals:         0       4       0       0       0       0       0
  7999 ;;Total ram usage:        4 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:    6
  8002 ;; This function calls:
  8003 ;;		___aldiv
  8004 ;; This function is called by:
  8005 ;;		_MusicPWM1_Duty
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           	psect	text27
  8010  0030D8                     __ptext27:
  8011                           	opt stack 0
  8012  0030D8                     _MusicPWM_Max_Duty:
  8013                           	opt stack 21
  8014                           
  8015                           ;main.c: 153: return (4000000 / (current_tone * 16));
  8016                           
  8017                           ; BSR set to: 0
  8018                           ;incstack = 0
  8019  0030D8  0E00               	movlw	0
  8020  0030DA  0100               	movlb	0	; () banked
  8021  0030DC  6F9B               	movwf	___aldiv@dividend& (0+255),b
  8022  0030DE  0E09               	movlw	9
  8023  0030E0  6F9C               	movwf	(___aldiv@dividend+1)& (0+255),b
  8024  0030E2  0E3D               	movlw	61
  8025  0030E4  6F9D               	movwf	(___aldiv@dividend+2)& (0+255),b
  8026  0030E6  0E00               	movlw	0
  8027  0030E8  6F9E               	movwf	(___aldiv@dividend+3)& (0+255),b
  8028  0030EA  C0E3  F0AB         	movff	_current_tone,??_MusicPWM_Max_Duty
  8029  0030EE  C0E4  F0AC         	movff	_current_tone+1,??_MusicPWM_Max_Duty+1
  8030  0030F2  3BAB               	swapf	??_MusicPWM_Max_Duty& (0+255),f,b
  8031  0030F4  3BAC               	swapf	(??_MusicPWM_Max_Duty+1)& (0+255),f,b
  8032  0030F6  0EF0               	movlw	240
  8033  0030F8  17AC               	andwf	(??_MusicPWM_Max_Duty+1)& (0+255),f,b
  8034  0030FA  51AB               	movf	??_MusicPWM_Max_Duty& (0+255),w,b
  8035  0030FC  0B0F               	andlw	15
  8036  0030FE  13AC               	iorwf	(??_MusicPWM_Max_Duty+1)& (0+255),f,b
  8037  003100  0EF0               	movlw	240
  8038  003102  17AB               	andwf	??_MusicPWM_Max_Duty& (0+255),f,b
  8039  003104  C0AB  F09F         	movff	??_MusicPWM_Max_Duty,___aldiv@divisor
  8040  003108  C0AC  F0A0         	movff	??_MusicPWM_Max_Duty+1,___aldiv@divisor+1
  8041  00310C  0E00               	movlw	0
  8042  00310E  BFA0               	btfsc	(___aldiv@divisor+1)& (0+255),7,b
  8043  003110  0EFF               	movlw	-1
  8044  003112  6FA1               	movwf	(___aldiv@divisor+2)& (0+255),b
  8045  003114  6FA2               	movwf	(___aldiv@divisor+3)& (0+255),b
  8046  003116  EC80  F015         	call	___aldiv	;wreg free
  8047  00311A  C09B  F0A9         	movff	?___aldiv,?_MusicPWM_Max_Duty
  8048  00311E  C09C  F0AA         	movff	?___aldiv+1,?_MusicPWM_Max_Duty+1
  8049  003122  0012               	return	
  8050  003124                     __end_of_MusicPWM_Max_Duty:
  8051                           	opt stack 0
  8052                           tblptru	equ	0xFF8
  8053                           tblptrh	equ	0xFF7
  8054                           tblptrl	equ	0xFF6
  8055                           tablat	equ	0xFF5
  8056                           prodh	equ	0xFF4
  8057                           prodl	equ	0xFF3
  8058                           intcon	equ	0xFF2
  8059                           indf0	equ	0xFEF
  8060                           postinc0	equ	0xFEE
  8061                           fsr0h	equ	0xFEA
  8062                           fsr0l	equ	0xFE9
  8063                           wreg	equ	0xFE8
  8064                           indf1	equ	0xFE7
  8065                           fsr1h	equ	0xFE2
  8066                           fsr1l	equ	0xFE1
  8067                           indf2	equ	0xFDF
  8068                           postinc2	equ	0xFDE
  8069                           fsr2h	equ	0xFDA
  8070                           fsr2l	equ	0xFD9
  8071                           status	equ	0xFD8
  8072                           
  8073 ;; *************** function ___aldiv *****************
  8074 ;; Defined at:
  8075 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\aldiv.c"
  8076 ;; Parameters:    Size  Location     Type
  8077 ;;  dividend        4   27[BANK0 ] long 
  8078 ;;  divisor         4   31[BANK0 ] long 
  8079 ;; Auto vars:     Size  Location     Type
  8080 ;;  quotient        4   37[BANK0 ] long 
  8081 ;;  sign            1   36[BANK0 ] unsigned char 
  8082 ;;  counter         1   35[BANK0 ] unsigned char 
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  4   27[BANK0 ] long 
  8085 ;; Registers used:
  8086 ;;		wreg, status,2, status,0
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8092 ;;      Params:         0       8       0       0       0       0       0
  8093 ;;      Locals:         0       6       0       0       0       0       0
  8094 ;;      Temps:          0       0       0       0       0       0       0
  8095 ;;      Totals:         0      14       0       0       0       0       0
  8096 ;;Total ram usage:       14 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; Hardware stack levels required when called:    5
  8099 ;; This function calls:
  8100 ;;		Nothing
  8101 ;; This function is called by:
  8102 ;;		_MusicPWM1_Init
  8103 ;;		_MusicPWM_Max_Duty
  8104 ;; This function uses a non-reentrant model
  8105 ;;
  8106                           
  8107                           	psect	text28
  8108  002B00                     __ptext28:
  8109                           	opt stack 0
  8110  002B00                     ___aldiv:
  8111                           	opt stack 22
  8112                           
  8113                           ;incstack = 0
  8114  002B00  0E00               	movlw	0
  8115  002B02  0100               	movlb	0	; () banked
  8116  002B04  6FA4               	movwf	___aldiv@sign& (0+255),b
  8117                           
  8118                           ; BSR set to: 0
  8119  002B06  AFA2               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  8120  002B08  D00A               	goto	l518
  8121                           
  8122                           ; BSR set to: 0
  8123  002B0A  1FA2               	comf	(___aldiv@divisor+3)& (0+255),f,b
  8124  002B0C  1FA1               	comf	(___aldiv@divisor+2)& (0+255),f,b
  8125  002B0E  1FA0               	comf	(___aldiv@divisor+1)& (0+255),f,b
  8126  002B10  6D9F               	negf	___aldiv@divisor& (0+255),b
  8127  002B12  0E00               	movlw	0
  8128  002B14  23A0               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  8129  002B16  23A1               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  8130  002B18  23A2               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  8131                           
  8132                           ; BSR set to: 0
  8133  002B1A  0E01               	movlw	1
  8134  002B1C  6FA4               	movwf	___aldiv@sign& (0+255),b
  8135  002B1E                     l518:
  8136                           
  8137                           ; BSR set to: 0
  8138                           
  8139                           ; BSR set to: 0
  8140  002B1E  AF9E               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  8141  002B20  D00A               	goto	l519
  8142                           
  8143                           ; BSR set to: 0
  8144  002B22  1F9E               	comf	(___aldiv@dividend+3)& (0+255),f,b
  8145  002B24  1F9D               	comf	(___aldiv@dividend+2)& (0+255),f,b
  8146  002B26  1F9C               	comf	(___aldiv@dividend+1)& (0+255),f,b
  8147  002B28  6D9B               	negf	___aldiv@dividend& (0+255),b
  8148  002B2A  0E00               	movlw	0
  8149  002B2C  239C               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  8150  002B2E  239D               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  8151  002B30  239E               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  8152                           
  8153                           ; BSR set to: 0
  8154  002B32  0E01               	movlw	1
  8155  002B34  1BA4               	xorwf	___aldiv@sign& (0+255),f,b
  8156  002B36                     l519:
  8157                           
  8158                           ; BSR set to: 0
  8159                           
  8160                           ; BSR set to: 0
  8161  002B36  0E00               	movlw	0
  8162  002B38  6FA5               	movwf	___aldiv@quotient& (0+255),b
  8163  002B3A  0E00               	movlw	0
  8164  002B3C  6FA6               	movwf	(___aldiv@quotient+1)& (0+255),b
  8165  002B3E  0E00               	movlw	0
  8166  002B40  6FA7               	movwf	(___aldiv@quotient+2)& (0+255),b
  8167  002B42  0E00               	movlw	0
  8168  002B44  6FA8               	movwf	(___aldiv@quotient+3)& (0+255),b
  8169                           
  8170                           ; BSR set to: 0
  8171  002B46  519F               	movf	___aldiv@divisor& (0+255),w,b
  8172  002B48  11A0               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  8173  002B4A  11A1               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  8174  002B4C  11A2               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  8175  002B4E  B4D8               	btfsc	status,2,c
  8176  002B50  D02A               	goto	l526
  8177                           
  8178                           ; BSR set to: 0
  8179  002B52  0E01               	movlw	1
  8180  002B54  6FA3               	movwf	___aldiv@counter& (0+255),b
  8181  002B56  D006               	goto	l521
  8182  002B58                     
  8183                           ; BSR set to: 0
  8184                           
  8185                           ; BSR set to: 0
  8186  002B58  90D8               	bcf	status,0,c
  8187  002B5A  379F               	rlcf	___aldiv@divisor& (0+255),f,b
  8188  002B5C  37A0               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  8189  002B5E  37A1               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  8190  002B60  37A2               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  8191  002B62  2BA3               	incf	___aldiv@counter& (0+255),f,b
  8192  002B64                     l521:
  8193                           
  8194                           ; BSR set to: 0
  8195                           
  8196                           ; BSR set to: 0
  8197  002B64  AFA2               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  8198  002B66  D7F8               	goto	l522
  8199  002B68                     u5840:
  8200                           
  8201                           ; BSR set to: 0
  8202                           
  8203                           ; BSR set to: 0
  8204                           
  8205                           ; BSR set to: 0
  8206  002B68  90D8               	bcf	status,0,c
  8207  002B6A  37A5               	rlcf	___aldiv@quotient& (0+255),f,b
  8208  002B6C  37A6               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  8209  002B6E  37A7               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  8210  002B70  37A8               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  8211                           
  8212                           ; BSR set to: 0
  8213  002B72  519F               	movf	___aldiv@divisor& (0+255),w,b
  8214  002B74  5D9B               	subwf	___aldiv@dividend& (0+255),w,b
  8215  002B76  51A0               	movf	(___aldiv@divisor+1)& (0+255),w,b
  8216  002B78  599C               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  8217  002B7A  51A1               	movf	(___aldiv@divisor+2)& (0+255),w,b
  8218  002B7C  599D               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  8219  002B7E  51A2               	movf	(___aldiv@divisor+3)& (0+255),w,b
  8220  002B80  599E               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  8221  002B82  A0D8               	btfss	status,0,c
  8222  002B84  D009               	goto	l525
  8223                           
  8224                           ; BSR set to: 0
  8225  002B86  519F               	movf	___aldiv@divisor& (0+255),w,b
  8226  002B88  5F9B               	subwf	___aldiv@dividend& (0+255),f,b
  8227  002B8A  51A0               	movf	(___aldiv@divisor+1)& (0+255),w,b
  8228  002B8C  5B9C               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  8229  002B8E  51A1               	movf	(___aldiv@divisor+2)& (0+255),w,b
  8230  002B90  5B9D               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  8231  002B92  51A2               	movf	(___aldiv@divisor+3)& (0+255),w,b
  8232  002B94  5B9E               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  8233                           
  8234                           ; BSR set to: 0
  8235  002B96  81A5               	bsf	___aldiv@quotient& (0+255),0,b
  8236  002B98                     l525:
  8237                           
  8238                           ; BSR set to: 0
  8239                           
  8240                           ; BSR set to: 0
  8241  002B98  90D8               	bcf	status,0,c
  8242  002B9A  33A2               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  8243  002B9C  33A1               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  8244  002B9E  33A0               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  8245  002BA0  339F               	rrcf	___aldiv@divisor& (0+255),f,b
  8246                           
  8247                           ; BSR set to: 0
  8248  002BA2  2FA3               	decfsz	___aldiv@counter& (0+255),f,b
  8249  002BA4  D7E1               	goto	u5840
  8250  002BA6                     l526:
  8251                           
  8252                           ; BSR set to: 0
  8253                           
  8254                           ; BSR set to: 0
  8255                           
  8256                           ; BSR set to: 0
  8257  002BA6  51A4               	movf	___aldiv@sign& (0+255),w,b
  8258  002BA8  B4D8               	btfsc	status,2,c
  8259  002BAA  D008               	goto	l527
  8260                           
  8261                           ; BSR set to: 0
  8262  002BAC  1FA8               	comf	(___aldiv@quotient+3)& (0+255),f,b
  8263  002BAE  1FA7               	comf	(___aldiv@quotient+2)& (0+255),f,b
  8264  002BB0  1FA6               	comf	(___aldiv@quotient+1)& (0+255),f,b
  8265  002BB2  6DA5               	negf	___aldiv@quotient& (0+255),b
  8266  002BB4  0E00               	movlw	0
  8267  002BB6  23A6               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  8268  002BB8  23A7               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  8269  002BBA  23A8               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  8270  002BBC                     l527:
  8271                           
  8272                           ; BSR set to: 0
  8273                           
  8274                           ; BSR set to: 0
  8275  002BBC  C0A5  F09B         	movff	___aldiv@quotient,?___aldiv
  8276  002BC0  C0A6  F09C         	movff	___aldiv@quotient+1,?___aldiv+1
  8277  002BC4  C0A7  F09D         	movff	___aldiv@quotient+2,?___aldiv+2
  8278  002BC8  C0A8  F09E         	movff	___aldiv@quotient+3,?___aldiv+3
  8279  002BCC  0012               	return	
  8280  002BCE                     __end_of___aldiv:
  8281                           	opt stack 0
  8282                           tblptru	equ	0xFF8
  8283                           tblptrh	equ	0xFF7
  8284                           tblptrl	equ	0xFF6
  8285                           tablat	equ	0xFF5
  8286                           prodh	equ	0xFF4
  8287                           prodl	equ	0xFF3
  8288                           intcon	equ	0xFF2
  8289                           indf0	equ	0xFEF
  8290                           postinc0	equ	0xFEE
  8291                           fsr0h	equ	0xFEA
  8292                           fsr0l	equ	0xFE9
  8293                           wreg	equ	0xFE8
  8294                           indf1	equ	0xFE7
  8295                           fsr1h	equ	0xFE2
  8296                           fsr1l	equ	0xFE1
  8297                           indf2	equ	0xFDF
  8298                           postinc2	equ	0xFDE
  8299                           fsr2h	equ	0xFDA
  8300                           fsr2l	equ	0xFD9
  8301                           status	equ	0xFD8
  8302                           
  8303 ;; *************** function _atoi *****************
  8304 ;; Defined at:
  8305 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\atoi.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;  s               2   33[BANK0 ] PTR const unsigned char 
  8308 ;;		 -> Music@str4(50), Music@str3(50), Music@str2(50), NULL(0), 
  8309 ;;		 -> Music@str1(50), str(10), 
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;  a               2   38[BANK0 ] int 
  8312 ;;  sign            1   37[BANK0 ] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  2   33[BANK0 ] int 
  8315 ;; Registers used:
  8316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8322 ;;      Params:         0       2       0       0       0       0       0
  8323 ;;      Locals:         0       3       0       0       0       0       0
  8324 ;;      Temps:          0       2       0       0       0       0       0
  8325 ;;      Totals:         0       7       0       0       0       0       0
  8326 ;;Total ram usage:        7 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    6
  8329 ;; This function calls:
  8330 ;;		___wmul
  8331 ;;		_isdigit
  8332 ;; This function is called by:
  8333 ;;		_Music
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           	psect	text29
  8338  002958                     __ptext29:
  8339                           	opt stack 0
  8340  002958                     _atoi:
  8341                           	opt stack 23
  8342                           
  8343                           ; BSR set to: 0
  8344                           ;incstack = 0
  8345  002958  D003               	goto	l626
  8346  00295A  0100               	movlb	0	; () banked
  8347  00295C  4BA1               	infsnz	atoi@s& (0+255),f,b
  8348  00295E  2BA2               	incf	(atoi@s+1)& (0+255),f,b
  8349  002960                     l626:
  8350                           
  8351                           ; BSR set to: 0
  8352  002960  C0A1  FFD9         	movff	atoi@s,fsr2l
  8353  002964  C0A2  FFDA         	movff	atoi@s+1,fsr2h
  8354  002968  0E20               	movlw	32
  8355  00296A  18DE               	xorwf	postinc2,w,c
  8356  00296C  B4D8               	btfsc	status,2,c
  8357  00296E  D7F5               	goto	l627
  8358  002970  C0A1  FFD9         	movff	atoi@s,fsr2l
  8359  002974  C0A2  FFDA         	movff	atoi@s+1,fsr2h
  8360  002978  0E09               	movlw	9
  8361  00297A  18DE               	xorwf	postinc2,w,c
  8362  00297C  B4D8               	btfsc	status,2,c
  8363  00297E  D7ED               	goto	l627
  8364  002980  0E00               	movlw	0
  8365  002982  0100               	movlb	0	; () banked
  8366  002984  6FA7               	movwf	(atoi@a+1)& (0+255),b
  8367  002986  0E00               	movlw	0
  8368  002988  6FA6               	movwf	atoi@a& (0+255),b
  8369  00298A  0E00               	movlw	0
  8370  00298C  6FA5               	movwf	atoi@sign& (0+255),b
  8371                           
  8372                           ; BSR set to: 0
  8373  00298E  C0A1  FFD9         	movff	atoi@s,fsr2l
  8374  002992  C0A2  FFDA         	movff	atoi@s+1,fsr2h
  8375  002996  0E2D               	movlw	45
  8376  002998  18DE               	xorwf	postinc2,w,c
  8377  00299A  A4D8               	btfss	status,2,c
  8378  00299C  D002               	goto	l629
  8379                           
  8380                           ; BSR set to: 0
  8381  00299E  2BA5               	incf	atoi@sign& (0+255),f,b
  8382  0029A0  D026               	goto	l5430
  8383  0029A2                     l629:
  8384                           
  8385                           ; BSR set to: 0
  8386                           
  8387                           ; BSR set to: 0
  8388  0029A2  C0A1  FFD9         	movff	atoi@s,fsr2l
  8389  0029A6  C0A2  FFDA         	movff	atoi@s+1,fsr2h
  8390  0029AA  0E2B               	movlw	43
  8391  0029AC  18DE               	xorwf	postinc2,w,c
  8392  0029AE  A4D8               	btfss	status,2,c
  8393  0029B0  D020               	goto	l632
  8394  0029B2  D01D               	goto	l5430
  8395  0029B4                     
  8396                           ; BSR set to: 0
  8397  0029B4  C0A6  F09B         	movff	atoi@a,___wmul@multiplier
  8398  0029B8  C0A7  F09C         	movff	atoi@a+1,___wmul@multiplier+1
  8399  0029BC  0E00               	movlw	0
  8400  0029BE  0100               	movlb	0	; () banked
  8401  0029C0  6F9E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8402  0029C2  0E0A               	movlw	10
  8403  0029C4  6F9D               	movwf	___wmul@multiplicand& (0+255),b
  8404  0029C6  EC7F  F019         	call	___wmul	;wreg free
  8405  0029CA  C0A1  FFD9         	movff	atoi@s,fsr2l
  8406  0029CE  C0A2  FFDA         	movff	atoi@s+1,fsr2h
  8407  0029D2  50DF               	movf	indf2,w,c
  8408  0029D4  0100               	movlb	0	; () banked
  8409  0029D6  6FA3               	movwf	??_atoi& (0+255),b
  8410  0029D8  6BA4               	clrf	(??_atoi+1)& (0+255),b
  8411  0029DA  519B               	movf	?___wmul& (0+255),w,b
  8412  0029DC  27A3               	addwf	??_atoi& (0+255),f,b
  8413  0029DE  519C               	movf	(?___wmul+1)& (0+255),w,b
  8414  0029E0  23A4               	addwfc	(??_atoi+1)& (0+255),f,b
  8415  0029E2  0ED0               	movlw	208
  8416  0029E4  25A3               	addwf	??_atoi& (0+255),w,b
  8417  0029E6  6FA6               	movwf	atoi@a& (0+255),b
  8418  0029E8  0EFF               	movlw	255
  8419  0029EA  21A4               	addwfc	(??_atoi+1)& (0+255),w,b
  8420  0029EC  6FA7               	movwf	(atoi@a+1)& (0+255),b
  8421  0029EE                     l5430:
  8422                           
  8423                           ; BSR set to: 0
  8424  0029EE  4BA1               	infsnz	atoi@s& (0+255),f,b
  8425  0029F0  2BA2               	incf	(atoi@s+1)& (0+255),f,b
  8426  0029F2                     l632:
  8427                           
  8428                           ; BSR set to: 0
  8429                           
  8430                           ; BSR set to: 0
  8431  0029F2  C0A1  FFD9         	movff	atoi@s,fsr2l
  8432  0029F6  C0A2  FFDA         	movff	atoi@s+1,fsr2h
  8433  0029FA  50DF               	movf	indf2,w,c
  8434  0029FC  ECB5  F019         	call	_isdigit
  8435  002A00  B0D8               	btfsc	status,0,c
  8436  002A02  D7D8               	goto	l633
  8437  002A04  0100               	movlb	0	; () banked
  8438  002A06  51A5               	movf	atoi@sign& (0+255),w,b
  8439  002A08  B4D8               	btfsc	status,2,c
  8440  002A0A  D00D               	goto	l635
  8441                           
  8442                           ; BSR set to: 0
  8443  002A0C  C0A6  F0A3         	movff	atoi@a,??_atoi
  8444  002A10  C0A7  F0A4         	movff	atoi@a+1,??_atoi+1
  8445  002A14  1FA3               	comf	??_atoi& (0+255),f,b
  8446  002A16  1FA4               	comf	(??_atoi+1)& (0+255),f,b
  8447  002A18  4BA3               	infsnz	??_atoi& (0+255),f,b
  8448  002A1A  2BA4               	incf	(??_atoi+1)& (0+255),f,b
  8449  002A1C  C0A3  F0A1         	movff	??_atoi,?_atoi
  8450  002A20  C0A4  F0A2         	movff	??_atoi+1,?_atoi+1
  8451  002A24  0012               	return	
  8452  002A26                     l635:
  8453                           
  8454                           ; BSR set to: 0
  8455  002A26  C0A6  F0A1         	movff	atoi@a,?_atoi
  8456  002A2A  C0A7  F0A2         	movff	atoi@a+1,?_atoi+1
  8457                           
  8458                           ; BSR set to: 0
  8459  002A2E  0012               	return		;funcret
  8460  002A30                     __end_of_atoi:
  8461                           	opt stack 0
  8462                           tblptru	equ	0xFF8
  8463                           tblptrh	equ	0xFF7
  8464                           tblptrl	equ	0xFF6
  8465                           tablat	equ	0xFF5
  8466                           prodh	equ	0xFF4
  8467                           prodl	equ	0xFF3
  8468                           intcon	equ	0xFF2
  8469                           indf0	equ	0xFEF
  8470                           postinc0	equ	0xFEE
  8471                           fsr0h	equ	0xFEA
  8472                           fsr0l	equ	0xFE9
  8473                           wreg	equ	0xFE8
  8474                           indf1	equ	0xFE7
  8475                           fsr1h	equ	0xFE2
  8476                           fsr1l	equ	0xFE1
  8477                           indf2	equ	0xFDF
  8478                           postinc2	equ	0xFDE
  8479                           fsr2h	equ	0xFDA
  8480                           fsr2l	equ	0xFD9
  8481                           status	equ	0xFD8
  8482                           
  8483 ;; *************** function _isdigit *****************
  8484 ;; Defined at:
  8485 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  c               1    wreg     unsigned char 
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;  c               1   29[BANK0 ] unsigned char 
  8490 ;; Return value:  Size  Location     Type
  8491 ;;		None               void
  8492 ;; Registers used:
  8493 ;;		wreg, status,2, status,0
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8499 ;;      Params:         0       0       0       0       0       0       0
  8500 ;;      Locals:         0       2       0       0       0       0       0
  8501 ;;      Temps:          0       1       0       0       0       0       0
  8502 ;;      Totals:         0       3       0       0       0       0       0
  8503 ;;Total ram usage:        3 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; Hardware stack levels required when called:    5
  8506 ;; This function calls:
  8507 ;;		Nothing
  8508 ;; This function is called by:
  8509 ;;		_atoi
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text30
  8514  00336A                     __ptext30:
  8515                           	opt stack 0
  8516  00336A                     _isdigit:
  8517                           	opt stack 23
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;incstack = 0
  8521                           ;isdigit@c stored from wreg
  8522  00336A  0100               	movlb	0	; () banked
  8523  00336C  6F9D               	movwf	isdigit@c& (0+255),b
  8524  00336E  0E00               	movlw	0
  8525  003370  0100               	movlb	0	; () banked
  8526  003372  6F9C               	movwf	_isdigit$1618& (0+255),b
  8527                           
  8528                           ; BSR set to: 0
  8529  003374  0E3A               	movlw	58
  8530  003376  619D               	cpfslt	isdigit@c& (0+255),b
  8531  003378  D005               	goto	l807
  8532                           
  8533                           ; BSR set to: 0
  8534  00337A  0E2F               	movlw	47
  8535  00337C  659D               	cpfsgt	isdigit@c& (0+255),b
  8536  00337E  D002               	goto	l807
  8537                           
  8538                           ; BSR set to: 0
  8539  003380  0E01               	movlw	1
  8540  003382  6F9C               	movwf	_isdigit$1618& (0+255),b
  8541  003384                     l807:
  8542                           
  8543                           ; BSR set to: 0
  8544                           
  8545                           ; BSR set to: 0
  8546  003384  C09C  F09B         	movff	_isdigit$1618,??_isdigit
  8547  003388  319B               	rrcf	??_isdigit& (0+255),w,b
  8548  00338A  0012               	return	
  8549  00338C                     __end_of_isdigit:
  8550                           	opt stack 0
  8551                           tblptru	equ	0xFF8
  8552                           tblptrh	equ	0xFF7
  8553                           tblptrl	equ	0xFF6
  8554                           tablat	equ	0xFF5
  8555                           prodh	equ	0xFF4
  8556                           prodl	equ	0xFF3
  8557                           intcon	equ	0xFF2
  8558                           indf0	equ	0xFEF
  8559                           postinc0	equ	0xFEE
  8560                           fsr0h	equ	0xFEA
  8561                           fsr0l	equ	0xFE9
  8562                           wreg	equ	0xFE8
  8563                           indf1	equ	0xFE7
  8564                           fsr1h	equ	0xFE2
  8565                           fsr1l	equ	0xFE1
  8566                           indf2	equ	0xFDF
  8567                           postinc2	equ	0xFDE
  8568                           fsr2h	equ	0xFDA
  8569                           fsr2l	equ	0xFD9
  8570                           status	equ	0xFD8
  8571                           
  8572 ;; *************** function ___wmul *****************
  8573 ;; Defined at:
  8574 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
  8575 ;; Parameters:    Size  Location     Type
  8576 ;;  multiplier      2   27[BANK0 ] unsigned int 
  8577 ;;  multiplicand    2   29[BANK0 ] unsigned int 
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;  product         2   31[BANK0 ] unsigned int 
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  2   27[BANK0 ] unsigned int 
  8582 ;; Registers used:
  8583 ;;		wreg, status,2, status,0, prodl, prodh
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8589 ;;      Params:         0       4       0       0       0       0       0
  8590 ;;      Locals:         0       2       0       0       0       0       0
  8591 ;;      Temps:          0       0       0       0       0       0       0
  8592 ;;      Totals:         0       6       0       0       0       0       0
  8593 ;;Total ram usage:        6 bytes
  8594 ;; Hardware stack levels used:    1
  8595 ;; Hardware stack levels required when called:    5
  8596 ;; This function calls:
  8597 ;;		Nothing
  8598 ;; This function is called by:
  8599 ;;		_Music
  8600 ;;		_atoi
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           	psect	text31
  8605  0032FE                     __ptext31:
  8606                           	opt stack 0
  8607  0032FE                     ___wmul:
  8608                           	opt stack 23
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;incstack = 0
  8612  0032FE  0100               	movlb	0	; () banked
  8613  003300  519B               	movf	___wmul@multiplier& (0+255),w,b
  8614  003302  039D               	mulwf	___wmul@multiplicand& (0+255),b
  8615  003304  CFF3 F09F          	movff	prodl,___wmul@product
  8616  003308  CFF4 F0A0          	movff	prodh,___wmul@product+1
  8617  00330C  519B               	movf	___wmul@multiplier& (0+255),w,b
  8618  00330E  039E               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8619  003310  50F3               	movf	prodl,w,c
  8620  003312  27A0               	addwf	(___wmul@product+1)& (0+255),f,b
  8621  003314  519C               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8622  003316  039D               	mulwf	___wmul@multiplicand& (0+255),b
  8623  003318  50F3               	movf	prodl,w,c
  8624  00331A  27A0               	addwf	(___wmul@product+1)& (0+255),f,b
  8625                           
  8626                           ; BSR set to: 0
  8627  00331C  C09F  F09B         	movff	___wmul@product,?___wmul
  8628  003320  C0A0  F09C         	movff	___wmul@product+1,?___wmul+1
  8629  003324  0012               	return	
  8630  003326                     __end_of___wmul:
  8631                           	opt stack 0
  8632                           tblptru	equ	0xFF8
  8633                           tblptrh	equ	0xFF7
  8634                           tblptrl	equ	0xFF6
  8635                           tablat	equ	0xFF5
  8636                           prodh	equ	0xFF4
  8637                           prodl	equ	0xFF3
  8638                           intcon	equ	0xFF2
  8639                           indf0	equ	0xFEF
  8640                           postinc0	equ	0xFEE
  8641                           fsr0h	equ	0xFEA
  8642                           fsr0l	equ	0xFE9
  8643                           wreg	equ	0xFE8
  8644                           indf1	equ	0xFE7
  8645                           fsr1h	equ	0xFE2
  8646                           fsr1l	equ	0xFE1
  8647                           indf2	equ	0xFDF
  8648                           postinc2	equ	0xFDE
  8649                           fsr2h	equ	0xFDA
  8650                           fsr2l	equ	0xFD9
  8651                           status	equ	0xFD8
  8652                           
  8653 ;; *************** function ___awdiv *****************
  8654 ;; Defined at:
  8655 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;  dividend        2   27[BANK0 ] int 
  8658 ;;  divisor         2   29[BANK0 ] int 
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;  quotient        2   33[BANK0 ] int 
  8661 ;;  sign            1   32[BANK0 ] unsigned char 
  8662 ;;  counter         1   31[BANK0 ] unsigned char 
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  2   27[BANK0 ] int 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2, status,0
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8672 ;;      Params:         0       4       0       0       0       0       0
  8673 ;;      Locals:         0       4       0       0       0       0       0
  8674 ;;      Temps:          0       0       0       0       0       0       0
  8675 ;;      Totals:         0       8       0       0       0       0       0
  8676 ;;Total ram usage:        8 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; Hardware stack levels required when called:    5
  8679 ;; This function calls:
  8680 ;;		Nothing
  8681 ;; This function is called by:
  8682 ;;		_Music
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686                           	psect	text32
  8687  002D26                     __ptext32:
  8688                           	opt stack 0
  8689  002D26                     ___awdiv:
  8690                           	opt stack 24
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;incstack = 0
  8694  002D26  0E00               	movlw	0
  8695  002D28  0100               	movlb	0	; () banked
  8696  002D2A  6FA0               	movwf	___awdiv@sign& (0+255),b
  8697                           
  8698                           ; BSR set to: 0
  8699  002D2C  AF9E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8700  002D2E  D006               	goto	l645
  8701                           
  8702                           ; BSR set to: 0
  8703  002D30  6D9D               	negf	___awdiv@divisor& (0+255),b
  8704  002D32  1F9E               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8705  002D34  B0D8               	btfsc	status,0,c
  8706  002D36  2B9E               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8707                           
  8708                           ; BSR set to: 0
  8709  002D38  0E01               	movlw	1
  8710  002D3A  6FA0               	movwf	___awdiv@sign& (0+255),b
  8711  002D3C                     l645:
  8712                           
  8713                           ; BSR set to: 0
  8714                           
  8715                           ; BSR set to: 0
  8716  002D3C  AF9C               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8717  002D3E  D006               	goto	l646
  8718                           
  8719                           ; BSR set to: 0
  8720  002D40  6D9B               	negf	___awdiv@dividend& (0+255),b
  8721  002D42  1F9C               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8722  002D44  B0D8               	btfsc	status,0,c
  8723  002D46  2B9C               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8724                           
  8725                           ; BSR set to: 0
  8726  002D48  0E01               	movlw	1
  8727  002D4A  1BA0               	xorwf	___awdiv@sign& (0+255),f,b
  8728  002D4C                     l646:
  8729                           
  8730                           ; BSR set to: 0
  8731                           
  8732                           ; BSR set to: 0
  8733  002D4C  0E00               	movlw	0
  8734  002D4E  6FA2               	movwf	(___awdiv@quotient+1)& (0+255),b
  8735  002D50  0E00               	movlw	0
  8736  002D52  6FA1               	movwf	___awdiv@quotient& (0+255),b
  8737                           
  8738                           ; BSR set to: 0
  8739  002D54  519D               	movf	___awdiv@divisor& (0+255),w,b
  8740  002D56  119E               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8741  002D58  B4D8               	btfsc	status,2,c
  8742  002D5A  D01C               	goto	l653
  8743                           
  8744                           ; BSR set to: 0
  8745  002D5C  0E01               	movlw	1
  8746  002D5E  6F9F               	movwf	___awdiv@counter& (0+255),b
  8747  002D60  D004               	goto	l648
  8748  002D62                     
  8749                           ; BSR set to: 0
  8750                           
  8751                           ; BSR set to: 0
  8752  002D62  90D8               	bcf	status,0,c
  8753  002D64  379D               	rlcf	___awdiv@divisor& (0+255),f,b
  8754  002D66  379E               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8755  002D68  2B9F               	incf	___awdiv@counter& (0+255),f,b
  8756  002D6A                     l648:
  8757                           
  8758                           ; BSR set to: 0
  8759                           
  8760                           ; BSR set to: 0
  8761  002D6A  AF9E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8762  002D6C  D7FA               	goto	l649
  8763  002D6E                     u6880:
  8764                           
  8765                           ; BSR set to: 0
  8766                           
  8767                           ; BSR set to: 0
  8768                           
  8769                           ; BSR set to: 0
  8770  002D6E  90D8               	bcf	status,0,c
  8771  002D70  37A1               	rlcf	___awdiv@quotient& (0+255),f,b
  8772  002D72  37A2               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8773                           
  8774                           ; BSR set to: 0
  8775  002D74  519D               	movf	___awdiv@divisor& (0+255),w,b
  8776  002D76  5D9B               	subwf	___awdiv@dividend& (0+255),w,b
  8777  002D78  519E               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8778  002D7A  599C               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8779  002D7C  A0D8               	btfss	status,0,c
  8780  002D7E  D005               	goto	l652
  8781                           
  8782                           ; BSR set to: 0
  8783  002D80  519D               	movf	___awdiv@divisor& (0+255),w,b
  8784  002D82  5F9B               	subwf	___awdiv@dividend& (0+255),f,b
  8785  002D84  519E               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8786  002D86  5B9C               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8787                           
  8788                           ; BSR set to: 0
  8789  002D88  81A1               	bsf	___awdiv@quotient& (0+255),0,b
  8790  002D8A                     l652:
  8791                           
  8792                           ; BSR set to: 0
  8793                           
  8794                           ; BSR set to: 0
  8795  002D8A  90D8               	bcf	status,0,c
  8796  002D8C  339E               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8797  002D8E  339D               	rrcf	___awdiv@divisor& (0+255),f,b
  8798                           
  8799                           ; BSR set to: 0
  8800  002D90  2F9F               	decfsz	___awdiv@counter& (0+255),f,b
  8801  002D92  D7ED               	goto	u6880
  8802  002D94                     l653:
  8803                           
  8804                           ; BSR set to: 0
  8805                           
  8806                           ; BSR set to: 0
  8807                           
  8808                           ; BSR set to: 0
  8809  002D94  51A0               	movf	___awdiv@sign& (0+255),w,b
  8810  002D96  B4D8               	btfsc	status,2,c
  8811  002D98  D004               	goto	l654
  8812                           
  8813                           ; BSR set to: 0
  8814  002D9A  6DA1               	negf	___awdiv@quotient& (0+255),b
  8815  002D9C  1FA2               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8816  002D9E  B0D8               	btfsc	status,0,c
  8817  002DA0  2BA2               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8818  002DA2                     l654:
  8819                           
  8820                           ; BSR set to: 0
  8821                           
  8822                           ; BSR set to: 0
  8823  002DA2  C0A1  F09B         	movff	___awdiv@quotient,?___awdiv
  8824  002DA6  C0A2  F09C         	movff	___awdiv@quotient+1,?___awdiv+1
  8825  002DAA  0012               	return	
  8826  002DAC                     __end_of___awdiv:
  8827                           	opt stack 0
  8828                           tblptru	equ	0xFF8
  8829                           tblptrh	equ	0xFF7
  8830                           tblptrl	equ	0xFF6
  8831                           tablat	equ	0xFF5
  8832                           prodh	equ	0xFF4
  8833                           prodl	equ	0xFF3
  8834                           intcon	equ	0xFF2
  8835                           indf0	equ	0xFEF
  8836                           postinc0	equ	0xFEE
  8837                           fsr0h	equ	0xFEA
  8838                           fsr0l	equ	0xFE9
  8839                           wreg	equ	0xFE8
  8840                           indf1	equ	0xFE7
  8841                           fsr1h	equ	0xFE2
  8842                           fsr1l	equ	0xFE1
  8843                           indf2	equ	0xFDF
  8844                           postinc2	equ	0xFDE
  8845                           fsr2h	equ	0xFDA
  8846                           fsr2l	equ	0xFD9
  8847                           status	equ	0xFD8
  8848                           
  8849 ;; *************** function _SetupClock *****************
  8850 ;; Defined at:
  8851 ;;		line 142 in file "main.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;		None
  8854 ;; Auto vars:     Size  Location     Type
  8855 ;;		None
  8856 ;; Return value:  Size  Location     Type
  8857 ;;                  1    wreg      void 
  8858 ;; Registers used:
  8859 ;;		wreg, status,2
  8860 ;; Tracked objects:
  8861 ;;		On entry : 0/0
  8862 ;;		On exit  : 0/0
  8863 ;;		Unchanged: 0/0
  8864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8865 ;;      Params:         0       0       0       0       0       0       0
  8866 ;;      Locals:         0       0       0       0       0       0       0
  8867 ;;      Temps:          0       0       0       0       0       0       0
  8868 ;;      Totals:         0       0       0       0       0       0       0
  8869 ;;Total ram usage:        0 bytes
  8870 ;; Hardware stack levels used:    1
  8871 ;; Hardware stack levels required when called:    5
  8872 ;; This function calls:
  8873 ;;		Nothing
  8874 ;; This function is called by:
  8875 ;;		_Music
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           	psect	text33
  8880  0033D4                     __ptext33:
  8881                           	opt stack 0
  8882  0033D4                     _SetupClock:
  8883                           	opt stack 24
  8884                           
  8885                           ;main.c: 143: OSCCONbits.IRCF = 0b110;
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;incstack = 0
  8889  0033D4  50D3               	movf	4051,w,c	;volatile
  8890  0033D6  0B8F               	andlw	-113
  8891  0033D8  0960               	iorlw	96
  8892  0033DA  6ED3               	movwf	4051,c	;volatile
  8893                           
  8894                           ;main.c: 144: OSCCONbits.SCS = 0b10;
  8895  0033DC  50D3               	movf	4051,w,c	;volatile
  8896  0033DE  0BFC               	andlw	-4
  8897  0033E0  0902               	iorlw	2
  8898  0033E2  6ED3               	movwf	4051,c	;volatile
  8899  0033E4  0012               	return		;funcret
  8900  0033E6                     __end_of_SetupClock:
  8901                           	opt stack 0
  8902                           tblptru	equ	0xFF8
  8903                           tblptrh	equ	0xFF7
  8904                           tblptrl	equ	0xFF6
  8905                           tablat	equ	0xFF5
  8906                           prodh	equ	0xFF4
  8907                           prodl	equ	0xFF3
  8908                           intcon	equ	0xFF2
  8909                           indf0	equ	0xFEF
  8910                           postinc0	equ	0xFEE
  8911                           fsr0h	equ	0xFEA
  8912                           fsr0l	equ	0xFE9
  8913                           wreg	equ	0xFE8
  8914                           indf1	equ	0xFE7
  8915                           fsr1h	equ	0xFE2
  8916                           fsr1l	equ	0xFE1
  8917                           indf2	equ	0xFDF
  8918                           postinc2	equ	0xFDE
  8919                           fsr2h	equ	0xFDA
  8920                           fsr2l	equ	0xFD9
  8921                           status	equ	0xFD8
  8922                           
  8923 ;; *************** function _MusicPWM1_Start *****************
  8924 ;; Defined at:
  8925 ;;		line 170 in file "main.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;		None
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;		None
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  1    wreg      void 
  8932 ;; Registers used:
  8933 ;;		cstack
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8939 ;;      Params:         0       0       0       0       0       0       0
  8940 ;;      Locals:         0       0       0       0       0       0       0
  8941 ;;      Temps:          0       0       0       0       0       0       0
  8942 ;;      Totals:         0       0       0       0       0       0       0
  8943 ;;Total ram usage:        0 bytes
  8944 ;; Hardware stack levels used:    1
  8945 ;; Hardware stack levels required when called:    6
  8946 ;; This function calls:
  8947 ;;		_MusicPWM1_Mode_On
  8948 ;; This function is called by:
  8949 ;;		_Music
  8950 ;; This function uses a non-reentrant model
  8951 ;;
  8952                           
  8953                           	psect	text34
  8954  00340E                     __ptext34:
  8955                           	opt stack 0
  8956  00340E                     _MusicPWM1_Start:
  8957                           	opt stack 23
  8958                           
  8959                           ;main.c: 171: MusicPWM1_Mode_On();
  8960                           
  8961                           ;incstack = 0
  8962  00340E  EC1B  F01A         	call	_MusicPWM1_Mode_On	;wreg free
  8963                           
  8964                           ;main.c: 172: T2CKPS0 = 1;
  8965  003412  80CA               	bsf	4042,0,c	;volatile
  8966                           
  8967                           ;main.c: 173: T2CKPS1 = 1;
  8968  003414  82CA               	bsf	4042,1,c	;volatile
  8969                           
  8970                           ;main.c: 175: TMR2ON = 1;
  8971  003416  84CA               	bsf	4042,2,c	;volatile
  8972  003418  0012               	return		;funcret
  8973  00341A                     __end_of_MusicPWM1_Start:
  8974                           	opt stack 0
  8975                           tblptru	equ	0xFF8
  8976                           tblptrh	equ	0xFF7
  8977                           tblptrl	equ	0xFF6
  8978                           tablat	equ	0xFF5
  8979                           prodh	equ	0xFF4
  8980                           prodl	equ	0xFF3
  8981                           intcon	equ	0xFF2
  8982                           indf0	equ	0xFEF
  8983                           postinc0	equ	0xFEE
  8984                           fsr0h	equ	0xFEA
  8985                           fsr0l	equ	0xFE9
  8986                           wreg	equ	0xFE8
  8987                           indf1	equ	0xFE7
  8988                           fsr1h	equ	0xFE2
  8989                           fsr1l	equ	0xFE1
  8990                           indf2	equ	0xFDF
  8991                           postinc2	equ	0xFDE
  8992                           fsr2h	equ	0xFDA
  8993                           fsr2l	equ	0xFD9
  8994                           status	equ	0xFD8
  8995                           
  8996 ;; *************** function _MusicPWM1_Mode_On *****************
  8997 ;; Defined at:
  8998 ;;		line 165 in file "main.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;		None
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;		None
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  1    wreg      void 
  9005 ;; Registers used:
  9006 ;;		None
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9012 ;;      Params:         0       0       0       0       0       0       0
  9013 ;;      Locals:         0       0       0       0       0       0       0
  9014 ;;      Temps:          0       0       0       0       0       0       0
  9015 ;;      Totals:         0       0       0       0       0       0       0
  9016 ;;Total ram usage:        0 bytes
  9017 ;; Hardware stack levels used:    1
  9018 ;; Hardware stack levels required when called:    5
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		_MusicPWM1_Start
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	text35
  9027  003436                     __ptext35:
  9028                           	opt stack 0
  9029  003436                     _MusicPWM1_Mode_On:
  9030                           	opt stack 23
  9031                           
  9032                           ;main.c: 166: CCP1M3 = 1;
  9033                           
  9034                           ;incstack = 0
  9035  003436  86BD               	bsf	4029,3,c	;volatile
  9036                           
  9037                           ;main.c: 167: CCP1M2 = 1;
  9038  003438  84BD               	bsf	4029,2,c	;volatile
  9039  00343A  0012               	return		;funcret
  9040  00343C                     __end_of_MusicPWM1_Mode_On:
  9041                           	opt stack 0
  9042                           tblptru	equ	0xFF8
  9043                           tblptrh	equ	0xFF7
  9044                           tblptrl	equ	0xFF6
  9045                           tablat	equ	0xFF5
  9046                           prodh	equ	0xFF4
  9047                           prodl	equ	0xFF3
  9048                           intcon	equ	0xFF2
  9049                           indf0	equ	0xFEF
  9050                           postinc0	equ	0xFEE
  9051                           fsr0h	equ	0xFEA
  9052                           fsr0l	equ	0xFE9
  9053                           wreg	equ	0xFE8
  9054                           indf1	equ	0xFE7
  9055                           fsr1h	equ	0xFE2
  9056                           fsr1l	equ	0xFE1
  9057                           indf2	equ	0xFDF
  9058                           postinc2	equ	0xFDE
  9059                           fsr2h	equ	0xFDA
  9060                           fsr2l	equ	0xFD9
  9061                           status	equ	0xFD8
  9062                           
  9063 ;; *************** function _GetString *****************
  9064 ;; Defined at:
  9065 ;;		line 46 in file "setting_hardaware/uart.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;		None
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;		None
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  2   27[BANK0 ] PTR unsigned char 
  9072 ;; Registers used:
  9073 ;;		wreg, status,2, status,0
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9079 ;;      Params:         0       2       0       0       0       0       0
  9080 ;;      Locals:         0       0       0       0       0       0       0
  9081 ;;      Temps:          0       0       0       0       0       0       0
  9082 ;;      Totals:         0       2       0       0       0       0       0
  9083 ;;Total ram usage:        2 bytes
  9084 ;; Hardware stack levels used:    1
  9085 ;; Hardware stack levels required when called:    5
  9086 ;; This function calls:
  9087 ;;		Nothing
  9088 ;; This function is called by:
  9089 ;;		_Music
  9090 ;;		_main
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text36
  9095  00341A                     __ptext36:
  9096                           	opt stack 0
  9097  00341A                     _GetString:
  9098                           	opt stack 24
  9099                           
  9100                           ;uart.c: 47: return mystring;
  9101                           
  9102                           ;incstack = 0
  9103  00341A  0ED9               	movlw	low _mystring
  9104  00341C  0100               	movlb	0	; () banked
  9105  00341E  6F9B               	movwf	?_GetString& (0+255),b
  9106  003420  0E00               	movlw	high _mystring
  9107  003422  6F9C               	movwf	(?_GetString+1)& (0+255),b
  9108  003424  0012               	return	
  9109  003426                     __end_of_GetString:
  9110                           	opt stack 0
  9111                           tblptru	equ	0xFF8
  9112                           tblptrh	equ	0xFF7
  9113                           tblptrl	equ	0xFF6
  9114                           tablat	equ	0xFF5
  9115                           prodh	equ	0xFF4
  9116                           prodl	equ	0xFF3
  9117                           intcon	equ	0xFF2
  9118                           indf0	equ	0xFEF
  9119                           postinc0	equ	0xFEE
  9120                           fsr0h	equ	0xFEA
  9121                           fsr0l	equ	0xFE9
  9122                           wreg	equ	0xFE8
  9123                           indf1	equ	0xFE7
  9124                           fsr1h	equ	0xFE2
  9125                           fsr1l	equ	0xFE1
  9126                           indf2	equ	0xFDF
  9127                           postinc2	equ	0xFDE
  9128                           fsr2h	equ	0xFDA
  9129                           fsr2l	equ	0xFD9
  9130                           status	equ	0xFD8
  9131                           
  9132 ;; *************** function _ClearBuffer *****************
  9133 ;; Defined at:
  9134 ;;		line 55 in file "setting_hardaware/uart.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;		None
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;  i               2   27[BANK0 ] int 
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  1    wreg      void 
  9141 ;; Registers used:
  9142 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9148 ;;      Params:         0       0       0       0       0       0       0
  9149 ;;      Locals:         0       2       0       0       0       0       0
  9150 ;;      Temps:          0       0       0       0       0       0       0
  9151 ;;      Totals:         0       2       0       0       0       0       0
  9152 ;;Total ram usage:        2 bytes
  9153 ;; Hardware stack levels used:    1
  9154 ;; Hardware stack levels required when called:    5
  9155 ;; This function calls:
  9156 ;;		Nothing
  9157 ;; This function is called by:
  9158 ;;		_Music
  9159 ;;		_main
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text37
  9164  003236                     __ptext37:
  9165                           	opt stack 0
  9166  003236                     _ClearBuffer:
  9167                           	opt stack 24
  9168                           
  9169                           ;uart.c: 56: for(int i = 0; i < 10 ; i++)
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;incstack = 0
  9173  003236  0E00               	movlw	0
  9174  003238  0100               	movlb	0	; () banked
  9175  00323A  6F9C               	movwf	(ClearBuffer@i+1)& (0+255),b
  9176  00323C  0E00               	movlw	0
  9177  00323E  6F9B               	movwf	ClearBuffer@i& (0+255),b
  9178  003240                     l5344:
  9179                           
  9180                           ; BSR set to: 0
  9181  003240  BF9C               	btfsc	(ClearBuffer@i+1)& (0+255),7,b
  9182  003242  D006               	goto	l71
  9183  003244  519C               	movf	(ClearBuffer@i+1)& (0+255),w,b
  9184  003246  E10F               	bnz	l5354
  9185  003248  0E0A               	movlw	10
  9186  00324A  5D9B               	subwf	ClearBuffer@i& (0+255),w,b
  9187  00324C  B0D8               	btfsc	status,0,c
  9188  00324E  D00B               	goto	u6670
  9189  003250                     l71:
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;uart.c: 57: mystring[i] = '\0';
  9193                           
  9194                           ; BSR set to: 0
  9195  003250  0ED9               	movlw	low _mystring
  9196  003252  259B               	addwf	ClearBuffer@i& (0+255),w,b
  9197  003254  6ED9               	movwf	fsr2l,c
  9198  003256  0E00               	movlw	high _mystring
  9199  003258  219C               	addwfc	(ClearBuffer@i+1)& (0+255),w,b
  9200  00325A  6EDA               	movwf	fsr2h,c
  9201  00325C  0E00               	movlw	0
  9202  00325E  6EDF               	movwf	indf2,c
  9203                           
  9204                           ; BSR set to: 0
  9205  003260  4B9B               	infsnz	ClearBuffer@i& (0+255),f,b
  9206  003262  2B9C               	incf	(ClearBuffer@i+1)& (0+255),f,b
  9207  003264  D7ED               	goto	l5344
  9208  003266                     u6670:
  9209  003266                     l5354:
  9210                           
  9211                           ; BSR set to: 0
  9212                           ;uart.c: 58: lenStr = 0;
  9213  003266  0E00               	movlw	0
  9214  003268  6FD8               	movwf	(_lenStr+1)& (0+255),b
  9215  00326A  0E00               	movlw	0
  9216  00326C  6FD7               	movwf	_lenStr& (0+255),b
  9217                           
  9218                           ; BSR set to: 0
  9219  00326E  0012               	return		;funcret
  9220  003270                     __end_of_ClearBuffer:
  9221                           	opt stack 0
  9222                           tblptru	equ	0xFF8
  9223                           tblptrh	equ	0xFF7
  9224                           tblptrl	equ	0xFF6
  9225                           tablat	equ	0xFF5
  9226                           prodh	equ	0xFF4
  9227                           prodl	equ	0xFF3
  9228                           intcon	equ	0xFF2
  9229                           indf0	equ	0xFEF
  9230                           postinc0	equ	0xFEE
  9231                           fsr0h	equ	0xFEA
  9232                           fsr0l	equ	0xFE9
  9233                           wreg	equ	0xFE8
  9234                           indf1	equ	0xFE7
  9235                           fsr1h	equ	0xFE2
  9236                           fsr1l	equ	0xFE1
  9237                           indf2	equ	0xFDF
  9238                           postinc2	equ	0xFDE
  9239                           fsr2h	equ	0xFDA
  9240                           fsr2l	equ	0xFD9
  9241                           status	equ	0xFD8
  9242                           
  9243 ;; *************** function _Lo_ISR *****************
  9244 ;; Defined at:
  9245 ;;		line 75 in file "setting_hardaware/uart.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;		None
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;		None
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  1    wreg      void 
  9252 ;; Registers used:
  9253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9259 ;;      Params:         0       0       0       0       0       0       0
  9260 ;;      Locals:         0       0       0       0       0       0       0
  9261 ;;      Temps:          0      21       0       0       0       0       0
  9262 ;;      Totals:         0      21       0       0       0       0       0
  9263 ;;Total ram usage:       21 bytes
  9264 ;; Hardware stack levels used:    1
  9265 ;; Hardware stack levels required when called:    4
  9266 ;; This function calls:
  9267 ;;		_MyusartRead
  9268 ;; This function is called by:
  9269 ;;		Interrupt level 1
  9270 ;; This function uses a non-reentrant model
  9271 ;;
  9272                           
  9273                           	psect	intcodelo
  9274  000018                     __pintcodelo:
  9275                           	opt stack 0
  9276  000018                     _Lo_ISR:
  9277                           	opt stack 21
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;incstack = 0
  9281  000018  8079               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  9282  00001A  CFD8 F086          	movff	status,??_Lo_ISR
  9283  00001E  CFE8 F087          	movff	wreg,??_Lo_ISR+1
  9284  000022  CFE0 F088          	movff	bsr,??_Lo_ISR+2
  9285  000026  CFFA F089          	movff	pclath,??_Lo_ISR+3
  9286  00002A  CFFB F08A          	movff	pclatu,??_Lo_ISR+4
  9287  00002E  CFE9 F08B          	movff	fsr0l,??_Lo_ISR+5
  9288  000032  CFEA F08C          	movff	fsr0h,??_Lo_ISR+6
  9289  000036  CFE1 F08D          	movff	fsr1l,??_Lo_ISR+7
  9290  00003A  CFE2 F08E          	movff	fsr1h,??_Lo_ISR+8
  9291  00003E  CFD9 F08F          	movff	fsr2l,??_Lo_ISR+9
  9292  000042  CFDA F090          	movff	fsr2h,??_Lo_ISR+10
  9293  000046  CFF3 F091          	movff	prodl,??_Lo_ISR+11
  9294  00004A  CFF4 F092          	movff	prodh,??_Lo_ISR+12
  9295  00004E  CFF6 F093          	movff	tblptrl,??_Lo_ISR+13
  9296  000052  CFF7 F094          	movff	tblptrh,??_Lo_ISR+14
  9297  000056  CFF8 F095          	movff	tblptru,??_Lo_ISR+15
  9298  00005A  CFF5 F096          	movff	tablat,??_Lo_ISR+16
  9299  00005E  C079  F097         	movff	btemp,??_Lo_ISR+17
  9300  000062  C07A  F098         	movff	btemp+1,??_Lo_ISR+18
  9301  000066  C07B  F099         	movff	btemp+2,??_Lo_ISR+19
  9302  00006A  C07C  F09A         	movff	btemp+3,??_Lo_ISR+20
  9303                           
  9304                           ;uart.c: 77: if(RCIF)
  9305  00006E  AA9E               	btfss	3998,5,c	;volatile
  9306  000070  D007               	goto	i1l81
  9307                           
  9308                           ;uart.c: 78: {
  9309                           ;uart.c: 79: if(RCSTAbits.OERR)
  9310  000072  A2AB               	btfss	4011,1,c	;volatile
  9311  000074  D003               	goto	i1l82
  9312                           
  9313                           ;uart.c: 80: {
  9314                           ;uart.c: 81: CREN = 0;
  9315  000076  98AB               	bcf	4011,4,c	;volatile
  9316                           
  9317                           ;uart.c: 82: __nop();
  9318  000078  F000               	nop	
  9319                           
  9320                           ;uart.c: 83: CREN = 1;
  9321  00007A  88AB               	bsf	4011,4,c	;volatile
  9322  00007C                     i1l82:
  9323                           
  9324                           ;uart.c: 84: }
  9325                           ;uart.c: 86: MyusartRead();
  9326  00007C  ECB7  F018         	call	_MyusartRead	;wreg free
  9327  000080                     i1l81:
  9328                           
  9329                           ;uart.c: 87: }
  9330                           ;uart.c: 90: return;
  9331  000080  C09A  F07C         	movff	??_Lo_ISR+20,btemp+3
  9332  000084  C099  F07B         	movff	??_Lo_ISR+19,btemp+2
  9333  000088  C098  F07A         	movff	??_Lo_ISR+18,btemp+1
  9334  00008C  C097  F079         	movff	??_Lo_ISR+17,btemp
  9335  000090  C096  FFF5         	movff	??_Lo_ISR+16,tablat
  9336  000094  C095  FFF8         	movff	??_Lo_ISR+15,tblptru
  9337  000098  C094  FFF7         	movff	??_Lo_ISR+14,tblptrh
  9338  00009C  C093  FFF6         	movff	??_Lo_ISR+13,tblptrl
  9339  0000A0  C092  FFF4         	movff	??_Lo_ISR+12,prodh
  9340  0000A4  C091  FFF3         	movff	??_Lo_ISR+11,prodl
  9341  0000A8  C090  FFDA         	movff	??_Lo_ISR+10,fsr2h
  9342  0000AC  C08F  FFD9         	movff	??_Lo_ISR+9,fsr2l
  9343  0000B0  C08E  FFE2         	movff	??_Lo_ISR+8,fsr1h
  9344  0000B4  C08D  FFE1         	movff	??_Lo_ISR+7,fsr1l
  9345  0000B8  C08C  FFEA         	movff	??_Lo_ISR+6,fsr0h
  9346  0000BC  C08B  FFE9         	movff	??_Lo_ISR+5,fsr0l
  9347  0000C0  C08A  FFFB         	movff	??_Lo_ISR+4,pclatu
  9348  0000C4  C089  FFFA         	movff	??_Lo_ISR+3,pclath
  9349  0000C8  C088  FFE0         	movff	??_Lo_ISR+2,bsr
  9350  0000CC  C087  FFE8         	movff	??_Lo_ISR+1,wreg
  9351  0000D0  C086  FFD8         	movff	??_Lo_ISR,status
  9352  0000D4  9079               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  9353  0000D6  0010               	retfie	
  9354  0000D8                     __end_of_Lo_ISR:
  9355                           	opt stack 0
  9356                           pclatu	equ	0xFFB
  9357                           pclath	equ	0xFFA
  9358                           tblptru	equ	0xFF8
  9359                           tblptrh	equ	0xFF7
  9360                           tblptrl	equ	0xFF6
  9361                           tablat	equ	0xFF5
  9362                           prodh	equ	0xFF4
  9363                           prodl	equ	0xFF3
  9364                           intcon	equ	0xFF2
  9365                           indf0	equ	0xFEF
  9366                           postinc0	equ	0xFEE
  9367                           fsr0h	equ	0xFEA
  9368                           fsr0l	equ	0xFE9
  9369                           wreg	equ	0xFE8
  9370                           indf1	equ	0xFE7
  9371                           fsr1h	equ	0xFE2
  9372                           fsr1l	equ	0xFE1
  9373                           bsr	equ	0xFE0
  9374                           indf2	equ	0xFDF
  9375                           postinc2	equ	0xFDE
  9376                           fsr2h	equ	0xFDA
  9377                           fsr2l	equ	0xFD9
  9378                           status	equ	0xFD8
  9379                           
  9380 ;; *************** function _MyusartRead *****************
  9381 ;; Defined at:
  9382 ;;		line 61 in file "setting_hardaware/uart.c"
  9383 ;; Parameters:    Size  Location     Type
  9384 ;;		None
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;		None
  9387 ;; Return value:  Size  Location     Type
  9388 ;;                  1    wreg      void 
  9389 ;; Registers used:
  9390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9391 ;; Tracked objects:
  9392 ;;		On entry : 0/0
  9393 ;;		On exit  : 0/0
  9394 ;;		Unchanged: 0/0
  9395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9396 ;;      Params:         0       0       0       0       0       0       0
  9397 ;;      Locals:         0       0       0       0       0       0       0
  9398 ;;      Temps:          0       0       0       0       0       0       0
  9399 ;;      Totals:         0       0       0       0       0       0       0
  9400 ;;Total ram usage:        0 bytes
  9401 ;; Hardware stack levels used:    1
  9402 ;; Hardware stack levels required when called:    3
  9403 ;; This function calls:
  9404 ;;		___awmod
  9405 ;;		i1_UART_Write
  9406 ;; This function is called by:
  9407 ;;		_Lo_ISR
  9408 ;; This function uses a non-reentrant model
  9409 ;;
  9410                           
  9411                           	psect	text39
  9412  00316E                     __ptext39:
  9413                           	opt stack 0
  9414  00316E                     _MyusartRead:
  9415                           	opt stack 21
  9416                           
  9417                           ;uart.c: 63: mystring[lenStr] = RCREG;
  9418                           
  9419                           ;incstack = 0
  9420  00316E  0ED9               	movlw	low _mystring
  9421  003170  0100               	movlb	0	; () banked
  9422  003172  25D7               	addwf	_lenStr& (0+255),w,b
  9423  003174  6ED9               	movwf	fsr2l,c
  9424  003176  0E00               	movlw	high _mystring
  9425  003178  21D8               	addwfc	(_lenStr+1)& (0+255),w,b
  9426  00317A  6EDA               	movwf	fsr2h,c
  9427  00317C  CFAE FFDF          	movff	4014,indf2	;volatile
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;uart.c: 64: UART_Write(mystring[lenStr]);
  9431  003180  0ED9               	movlw	low _mystring
  9432  003182  25D7               	addwf	_lenStr& (0+255),w,b
  9433  003184  6ED9               	movwf	fsr2l,c
  9434  003186  0E00               	movlw	high _mystring
  9435  003188  21D8               	addwfc	(_lenStr+1)& (0+255),w,b
  9436  00318A  6EDA               	movwf	fsr2h,c
  9437  00318C  50DF               	movf	indf2,w,c
  9438  00318E  ECFA  F019         	call	i1_UART_Write
  9439                           
  9440                           ;uart.c: 65: lenStr++;
  9441  003192  0100               	movlb	0	; () banked
  9442  003194  4BD7               	infsnz	_lenStr& (0+255),f,b
  9443  003196  2BD8               	incf	(_lenStr+1)& (0+255),f,b
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;uart.c: 66: lenStr %= 10;
  9447  003198  C0D7  F080         	movff	_lenStr,___awmod@dividend
  9448  00319C  C0D8  F081         	movff	_lenStr+1,___awmod@dividend+1
  9449  0031A0  0E00               	movlw	0
  9450  0031A2  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  9451  0031A4  0E0A               	movlw	10
  9452  0031A6  6F82               	movwf	___awmod@divisor& (0+255),b
  9453  0031A8  EC16  F017         	call	___awmod	;wreg free
  9454  0031AC  C080  F0D7         	movff	?___awmod,_lenStr
  9455  0031B0  C081  F0D8         	movff	?___awmod+1,_lenStr+1
  9456  0031B4  0012               	return	
  9457  0031B6                     __end_of_MyusartRead:
  9458                           	opt stack 0
  9459                           pclatu	equ	0xFFB
  9460                           pclath	equ	0xFFA
  9461                           tblptru	equ	0xFF8
  9462                           tblptrh	equ	0xFF7
  9463                           tblptrl	equ	0xFF6
  9464                           tablat	equ	0xFF5
  9465                           prodh	equ	0xFF4
  9466                           prodl	equ	0xFF3
  9467                           intcon	equ	0xFF2
  9468                           indf0	equ	0xFEF
  9469                           postinc0	equ	0xFEE
  9470                           fsr0h	equ	0xFEA
  9471                           fsr0l	equ	0xFE9
  9472                           wreg	equ	0xFE8
  9473                           indf1	equ	0xFE7
  9474                           fsr1h	equ	0xFE2
  9475                           fsr1l	equ	0xFE1
  9476                           bsr	equ	0xFE0
  9477                           indf2	equ	0xFDF
  9478                           postinc2	equ	0xFDE
  9479                           fsr2h	equ	0xFDA
  9480                           fsr2l	equ	0xFD9
  9481                           status	equ	0xFD8
  9482                           
  9483 ;; *************** function i1_UART_Write *****************
  9484 ;; Defined at:
  9485 ;;		line 40 in file "setting_hardaware/uart.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;  data            1    wreg     unsigned char 
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;  data            1    0[BANK0 ] unsigned char 
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      void 
  9492 ;; Registers used:
  9493 ;;		wreg
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9499 ;;      Params:         0       0       0       0       0       0       0
  9500 ;;      Locals:         0       1       0       0       0       0       0
  9501 ;;      Temps:          0       0       0       0       0       0       0
  9502 ;;      Totals:         0       1       0       0       0       0       0
  9503 ;;Total ram usage:        1 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; Hardware stack levels required when called:    2
  9506 ;; This function calls:
  9507 ;;		Nothing
  9508 ;; This function is called by:
  9509 ;;		_MyusartRead
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513                           	psect	text40
  9514  0033F4                     __ptext40:
  9515                           	opt stack 0
  9516  0033F4                     i1_UART_Write:
  9517                           	opt stack 21
  9518                           
  9519                           ;incstack = 0
  9520                           ;i1UART_Write@data stored from wreg
  9521  0033F4  0100               	movlb	0	; () banked
  9522  0033F6  6F80               	movwf	i1UART_Write@data& (0+255),b
  9523  0033F8                     
  9524                           ;uart.c: 42: while(!TXSTAbits.TRMT);
  9525  0033F8  A2AC               	btfss	4012,1,c	;volatile
  9526  0033FA  D7FE               	goto	i1l3758
  9527                           
  9528                           ;uart.c: 43: TXREG = data;
  9529  0033FC  C080  FFAD         	movff	i1UART_Write@data,4013	;volatile
  9530  003400  0012               	return		;funcret
  9531  003402                     __end_ofi1_UART_Write:
  9532                           	opt stack 0
  9533                           pclatu	equ	0xFFB
  9534                           pclath	equ	0xFFA
  9535                           tblptru	equ	0xFF8
  9536                           tblptrh	equ	0xFF7
  9537                           tblptrl	equ	0xFF6
  9538                           tablat	equ	0xFF5
  9539                           prodh	equ	0xFF4
  9540                           prodl	equ	0xFF3
  9541                           intcon	equ	0xFF2
  9542                           indf0	equ	0xFEF
  9543                           postinc0	equ	0xFEE
  9544                           fsr0h	equ	0xFEA
  9545                           fsr0l	equ	0xFE9
  9546                           wreg	equ	0xFE8
  9547                           indf1	equ	0xFE7
  9548                           fsr1h	equ	0xFE2
  9549                           fsr1l	equ	0xFE1
  9550                           bsr	equ	0xFE0
  9551                           indf2	equ	0xFDF
  9552                           postinc2	equ	0xFDE
  9553                           fsr2h	equ	0xFDA
  9554                           fsr2l	equ	0xFD9
  9555                           status	equ	0xFD8
  9556                           
  9557 ;; *************** function ___awmod *****************
  9558 ;; Defined at:
  9559 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awmod.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;  dividend        2    0[BANK0 ] int 
  9562 ;;  divisor         2    2[BANK0 ] int 
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;  sign            1    5[BANK0 ] unsigned char 
  9565 ;;  counter         1    4[BANK0 ] unsigned char 
  9566 ;; Return value:  Size  Location     Type
  9567 ;;                  2    0[BANK0 ] int 
  9568 ;; Registers used:
  9569 ;;		wreg, status,2, status,0
  9570 ;; Tracked objects:
  9571 ;;		On entry : 0/0
  9572 ;;		On exit  : 0/0
  9573 ;;		Unchanged: 0/0
  9574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9575 ;;      Params:         0       4       0       0       0       0       0
  9576 ;;      Locals:         0       2       0       0       0       0       0
  9577 ;;      Temps:          0       0       0       0       0       0       0
  9578 ;;      Totals:         0       6       0       0       0       0       0
  9579 ;;Total ram usage:        6 bytes
  9580 ;; Hardware stack levels used:    1
  9581 ;; Hardware stack levels required when called:    2
  9582 ;; This function calls:
  9583 ;;		Nothing
  9584 ;; This function is called by:
  9585 ;;		_MyusartRead
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589                           	psect	text41
  9590  002E2C                     __ptext41:
  9591                           	opt stack 0
  9592  002E2C                     ___awmod:
  9593                           	opt stack 21
  9594                           
  9595                           ;incstack = 0
  9596  002E2C  0E00               	movlw	0
  9597  002E2E  0100               	movlb	0	; () banked
  9598  002E30  6F85               	movwf	___awmod@sign& (0+255),b
  9599                           
  9600                           ; BSR set to: 0
  9601  002E32  AF81               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9602  002E34  D006               	goto	i1l658
  9603                           
  9604                           ; BSR set to: 0
  9605  002E36  6D80               	negf	___awmod@dividend& (0+255),b
  9606  002E38  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  9607  002E3A  B0D8               	btfsc	status,0,c
  9608  002E3C  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  9609                           
  9610                           ; BSR set to: 0
  9611  002E3E  0E01               	movlw	1
  9612  002E40  6F85               	movwf	___awmod@sign& (0+255),b
  9613  002E42                     i1l658:
  9614                           
  9615                           ; BSR set to: 0
  9616                           
  9617                           ; BSR set to: 0
  9618  002E42  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9619  002E44  D004               	goto	i1l659
  9620                           
  9621                           ; BSR set to: 0
  9622  002E46  6D82               	negf	___awmod@divisor& (0+255),b
  9623  002E48  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  9624  002E4A  B0D8               	btfsc	status,0,c
  9625  002E4C  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  9626  002E4E                     i1l659:
  9627                           
  9628                           ; BSR set to: 0
  9629                           
  9630                           ; BSR set to: 0
  9631  002E4E  5182               	movf	___awmod@divisor& (0+255),w,b
  9632  002E50  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9633  002E52  B4D8               	btfsc	status,2,c
  9634  002E54  D018               	goto	i1l666
  9635                           
  9636                           ; BSR set to: 0
  9637  002E56  0E01               	movlw	1
  9638  002E58  6F84               	movwf	___awmod@counter& (0+255),b
  9639  002E5A  D004               	goto	i1l661
  9640  002E5C                     
  9641                           ; BSR set to: 0
  9642                           
  9643                           ; BSR set to: 0
  9644  002E5C  90D8               	bcf	status,0,c
  9645  002E5E  3782               	rlcf	___awmod@divisor& (0+255),f,b
  9646  002E60  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9647  002E62  2B84               	incf	___awmod@counter& (0+255),f,b
  9648  002E64                     i1l661:
  9649                           
  9650                           ; BSR set to: 0
  9651                           
  9652                           ; BSR set to: 0
  9653  002E64  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9654  002E66  D7FA               	goto	i1l662
  9655  002E68                     i1u405_20:
  9656                           
  9657                           ; BSR set to: 0
  9658                           
  9659                           ; BSR set to: 0
  9660                           
  9661                           ; BSR set to: 0
  9662  002E68  5182               	movf	___awmod@divisor& (0+255),w,b
  9663  002E6A  5D80               	subwf	___awmod@dividend& (0+255),w,b
  9664  002E6C  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  9665  002E6E  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9666  002E70  A0D8               	btfss	status,0,c
  9667  002E72  D004               	goto	i1l665
  9668                           
  9669                           ; BSR set to: 0
  9670  002E74  5182               	movf	___awmod@divisor& (0+255),w,b
  9671  002E76  5F80               	subwf	___awmod@dividend& (0+255),f,b
  9672  002E78  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  9673  002E7A  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9674  002E7C                     i1l665:
  9675                           
  9676                           ; BSR set to: 0
  9677                           
  9678                           ; BSR set to: 0
  9679  002E7C  90D8               	bcf	status,0,c
  9680  002E7E  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9681  002E80  3382               	rrcf	___awmod@divisor& (0+255),f,b
  9682                           
  9683                           ; BSR set to: 0
  9684  002E82  2F84               	decfsz	___awmod@counter& (0+255),f,b
  9685  002E84  D7F1               	goto	i1u405_20
  9686  002E86                     i1l666:
  9687                           
  9688                           ; BSR set to: 0
  9689                           
  9690                           ; BSR set to: 0
  9691                           
  9692                           ; BSR set to: 0
  9693  002E86  5185               	movf	___awmod@sign& (0+255),w,b
  9694  002E88  B4D8               	btfsc	status,2,c
  9695  002E8A  D004               	goto	i1l667
  9696                           
  9697                           ; BSR set to: 0
  9698  002E8C  6D80               	negf	___awmod@dividend& (0+255),b
  9699  002E8E  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  9700  002E90  B0D8               	btfsc	status,0,c
  9701  002E92  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  9702  002E94                     i1l667:
  9703                           
  9704                           ; BSR set to: 0
  9705                           
  9706                           ; BSR set to: 0
  9707  002E94  C080  F080         	movff	___awmod@dividend,?___awmod
  9708  002E98  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  9709  002E9C  0012               	return	
  9710  002E9E                     __end_of___awmod:
  9711                           	opt stack 0
  9712                           pclatu	equ	0xFFB
  9713                           pclath	equ	0xFFA
  9714                           tblptru	equ	0xFF8
  9715                           tblptrh	equ	0xFF7
  9716                           tblptrl	equ	0xFF6
  9717                           tablat	equ	0xFF5
  9718                           prodh	equ	0xFF4
  9719                           prodl	equ	0xFF3
  9720                           intcon	equ	0xFF2
  9721                           indf0	equ	0xFEF
  9722                           postinc0	equ	0xFEE
  9723                           fsr0h	equ	0xFEA
  9724                           fsr0l	equ	0xFE9
  9725                           wreg	equ	0xFE8
  9726                           indf1	equ	0xFE7
  9727                           fsr1h	equ	0xFE2
  9728                           fsr1l	equ	0xFE1
  9729                           bsr	equ	0xFE0
  9730                           indf2	equ	0xFDF
  9731                           postinc2	equ	0xFDE
  9732                           fsr2h	equ	0xFDA
  9733                           fsr2l	equ	0xFD9
  9734                           status	equ	0xFD8
  9735                           
  9736 ;; *************** function _Hi_ISR *****************
  9737 ;; Defined at:
  9738 ;;		line 34 in file "main.c"
  9739 ;; Parameters:    Size  Location     Type
  9740 ;;		None
  9741 ;; Auto vars:     Size  Location     Type
  9742 ;;		None
  9743 ;; Return value:  Size  Location     Type
  9744 ;;                  1    wreg      void 
  9745 ;; Registers used:
  9746 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9747 ;; Tracked objects:
  9748 ;;		On entry : 0/0
  9749 ;;		On exit  : 0/0
  9750 ;;		Unchanged: 0/0
  9751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9752 ;;      Params:         0       0       0       0       0       0       0
  9753 ;;      Locals:         0       0       0       0       0       0       0
  9754 ;;      Temps:         18       0       0       0       0       0       0
  9755 ;;      Totals:        18       0       0       0       0       0       0
  9756 ;;Total ram usage:       18 bytes
  9757 ;; Hardware stack levels used:    1
  9758 ;; Hardware stack levels required when called:    1
  9759 ;; This function calls:
  9760 ;;		_ADC_Read
  9761 ;;		_PWM1_Duty
  9762 ;;		___fladd
  9763 ;;		___flneg
  9764 ;;		i2___flmul
  9765 ;;		i2___fltol
  9766 ;;		i2___xxtofl
  9767 ;; This function is called by:
  9768 ;;		Interrupt level 2
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           	psect	intcode
  9773  000008                     __pintcode:
  9774                           	opt stack 0
  9775  000008                     _Hi_ISR:
  9776                           	opt stack 21
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;incstack = 0
  9780  000008  8279               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9781  00000A  ED1C  F011         	call	int_func,f	;refresh shadow registers
  9782                           pclatu	equ	0xFFB
  9783                           pclath	equ	0xFFA
  9784                           tblptru	equ	0xFF8
  9785                           tblptrh	equ	0xFF7
  9786                           tblptrl	equ	0xFF6
  9787                           tablat	equ	0xFF5
  9788                           prodh	equ	0xFF4
  9789                           prodl	equ	0xFF3
  9790                           intcon	equ	0xFF2
  9791                           indf0	equ	0xFEF
  9792                           postinc0	equ	0xFEE
  9793                           fsr0h	equ	0xFEA
  9794                           fsr0l	equ	0xFE9
  9795                           wreg	equ	0xFE8
  9796                           indf1	equ	0xFE7
  9797                           fsr1h	equ	0xFE2
  9798                           fsr1l	equ	0xFE1
  9799                           bsr	equ	0xFE0
  9800                           indf2	equ	0xFDF
  9801                           postinc2	equ	0xFDE
  9802                           fsr2h	equ	0xFDA
  9803                           fsr2l	equ	0xFD9
  9804                           status	equ	0xFD8
  9805                           
  9806                           	psect	intcode_body
  9807  002238                     __pintcode_body:
  9808                           	opt stack 21
  9809  002238                     int_func:
  9810                           	opt stack 21
  9811  002238  0006               	pop		; remove dummy address from shadow register refresh
  9812  00223A  CFFA F04A          	movff	pclath,??_Hi_ISR
  9813  00223E  CFFB F04B          	movff	pclatu,??_Hi_ISR+1
  9814  002242  CFE9 F04C          	movff	fsr0l,??_Hi_ISR+2
  9815  002246  CFEA F04D          	movff	fsr0h,??_Hi_ISR+3
  9816  00224A  CFE1 F04E          	movff	fsr1l,??_Hi_ISR+4
  9817  00224E  CFE2 F04F          	movff	fsr1h,??_Hi_ISR+5
  9818  002252  CFD9 F050          	movff	fsr2l,??_Hi_ISR+6
  9819  002256  CFDA F051          	movff	fsr2h,??_Hi_ISR+7
  9820  00225A  CFF3 F052          	movff	prodl,??_Hi_ISR+8
  9821  00225E  CFF4 F053          	movff	prodh,??_Hi_ISR+9
  9822  002262  CFF6 F054          	movff	tblptrl,??_Hi_ISR+10
  9823  002266  CFF7 F055          	movff	tblptrh,??_Hi_ISR+11
  9824  00226A  CFF8 F056          	movff	tblptru,??_Hi_ISR+12
  9825  00226E  CFF5 F057          	movff	tablat,??_Hi_ISR+13
  9826  002272  C079  F058         	movff	btemp,??_Hi_ISR+14
  9827  002276  C07A  F059         	movff	btemp+1,??_Hi_ISR+15
  9828  00227A  C07B  F05A         	movff	btemp+2,??_Hi_ISR+16
  9829  00227E  C07C  F05B         	movff	btemp+3,??_Hi_ISR+17
  9830                           
  9831                           ;main.c: 36: if(flag == 0 && PIR1bits.TMR1IF)
  9832  002282  5077               	movf	_flag,w,c
  9833  002284  1078               	iorwf	_flag+1,w,c
  9834  002286  B4D8               	btfsc	status,2,c
  9835  002288  A09E               	btfss	3998,0,c	;volatile
  9836  00228A  D018               	goto	i2l207
  9837                           
  9838                           ;main.c: 37: {
  9839                           ;main.c: 38: PIR1bits.TMR1IF = 0;
  9840  00228C  909E               	bcf	3998,0,c	;volatile
  9841                           
  9842                           ;main.c: 39: i = i+39;
  9843  00228E  0E27               	movlw	39
  9844  002290  2473               	addwf	_i,w,c
  9845  002292  6E73               	movwf	_i,c
  9846  002294  0E00               	movlw	0
  9847  002296  2074               	addwfc	_i+1,w,c
  9848  002298  6E74               	movwf	_i+1,c
  9849                           
  9850                           ;main.c: 40: PWM1_Duty(i);
  9851  00229A  C073  F001         	movff	_i,PWM1_Duty@duty
  9852  00229E  C074  F002         	movff	_i+1,PWM1_Duty@duty+1
  9853  0022A2  EC92  F018         	call	_PWM1_Duty	;wreg free
  9854                           
  9855                           ;main.c: 41: if(i == 624)
  9856  0022A6  0E70               	movlw	112
  9857  0022A8  1873               	xorwf	_i,w,c
  9858  0022AA  E122               	bnz	i2l4808
  9859  0022AC  0E02               	movlw	2
  9860  0022AE  1874               	xorwf	_i+1,w,c
  9861  0022B0  A4D8               	btfss	status,2,c
  9862  0022B2  D01E               	goto	i2l211
  9863                           
  9864                           ;main.c: 42: flag = 1;
  9865  0022B4  0E00               	movlw	0
  9866  0022B6  6E78               	movwf	_flag+1,c
  9867  0022B8  0E01               	movlw	1
  9868  0022BA  D019               	goto	L25
  9869  0022BC                     i2l207:
  9870                           
  9871                           ;main.c: 44: else if(flag == 1 && PIR1bits.TMR1IF)
  9872  0022BC  0477               	decf	_flag,w,c
  9873  0022BE  1078               	iorwf	_flag+1,w,c
  9874  0022C0  B4D8               	btfsc	status,2,c
  9875  0022C2  A09E               	btfss	3998,0,c	;volatile
  9876  0022C4  D015               	goto	i2l211
  9877                           
  9878                           ;main.c: 45: {
  9879                           ;main.c: 46: PIR1bits.TMR1IF = 0;
  9880  0022C6  909E               	bcf	3998,0,c	;volatile
  9881                           
  9882                           ;main.c: 47: i = i-39;
  9883  0022C8  0ED9               	movlw	217
  9884  0022CA  2473               	addwf	_i,w,c
  9885  0022CC  6E73               	movwf	_i,c
  9886  0022CE  0EFF               	movlw	255
  9887  0022D0  2074               	addwfc	_i+1,w,c
  9888  0022D2  6E74               	movwf	_i+1,c
  9889                           
  9890                           ;main.c: 48: PWM1_Duty(i);
  9891  0022D4  C073  F001         	movff	_i,PWM1_Duty@duty
  9892  0022D8  C074  F002         	movff	_i+1,PWM1_Duty@duty+1
  9893  0022DC  EC92  F018         	call	_PWM1_Duty	;wreg free
  9894                           
  9895                           ;main.c: 49: if(i == 0)
  9896  0022E0  5073               	movf	_i,w,c
  9897  0022E2  1074               	iorwf	_i+1,w,c
  9898  0022E4  A4D8               	btfss	status,2,c
  9899  0022E6  D004               	goto	i2l211
  9900                           
  9901                           ;main.c: 50: flag = 0;
  9902  0022E8  0E00               	movlw	0
  9903  0022EA  6E78               	movwf	_flag+1,c
  9904  0022EC  0E00               	movlw	0
  9905  0022EE                     L25:
  9906  0022EE  6E77               	movwf	_flag,c
  9907  0022F0                     i2l211:
  9908  0022F0                     i2l4808:
  9909                           
  9910                           ;main.c: 51: }
  9911                           ;main.c: 52: digital=ADC_Read(7);
  9912  0022F0  0E00               	movlw	0
  9913  0022F2  6E02               	movwf	ADC_Read@channel+1,c
  9914  0022F4  0E07               	movlw	7
  9915  0022F6  6E01               	movwf	ADC_Read@channel,c
  9916  0022F8  EC50  F019         	call	_ADC_Read	;wreg free
  9917  0022FC  C001  F075         	movff	?_ADC_Read,_digital
  9918  002300  C002  F076         	movff	?_ADC_Read+1,_digital+1
  9919                           
  9920                           ;main.c: 53: voltage = digital* ((float)5/1023);
  9921  002304  C075  F001         	movff	_digital,i2___xxtofl@val
  9922  002308  C076  F002         	movff	_digital+1,i2___xxtofl@val+1
  9923  00230C  0E00               	movlw	0
  9924  00230E  BE02               	btfsc	i2___xxtofl@val+1,7,c
  9925  002310  0EFF               	movlw	-1
  9926  002312  6E03               	movwf	i2___xxtofl@val+2,c
  9927  002314  6E04               	movwf	i2___xxtofl@val+3,c
  9928  002316  0E01               	movlw	1
  9929  002318  ECB4  F012         	call	i2___xxtofl
  9930  00231C  C001  F00F         	movff	?i2___xxtofl,i2___flmul@b
  9931  002320  C002  F010         	movff	?i2___xxtofl+1,i2___flmul@b+1
  9932  002324  C003  F011         	movff	?i2___xxtofl+2,i2___flmul@b+2
  9933  002328  C004  F012         	movff	?i2___xxtofl+3,i2___flmul@b+3
  9934  00232C  0E0A               	movlw	10
  9935  00232E  6E13               	movwf	i2___flmul@a,c
  9936  002330  0E28               	movlw	40
  9937  002332  6E14               	movwf	i2___flmul@a+1,c
  9938  002334  0EA0               	movlw	160
  9939  002336  6E15               	movwf	i2___flmul@a+2,c
  9940  002338  0E3B               	movlw	59
  9941  00233A  6E16               	movwf	i2___flmul@a+3,c
  9942  00233C  ECD6  F00D         	call	i2___flmul	;wreg free
  9943  002340  C00F  F06F         	movff	?i2___flmul,_voltage
  9944  002344  C010  F070         	movff	?i2___flmul+1,_voltage+1
  9945  002348  C011  F071         	movff	?i2___flmul+2,_voltage+2
  9946  00234C  C012  F072         	movff	?i2___flmul+3,_voltage+3
  9947                           
  9948                           ;main.c: 54: TMR1 = 55000 - 3000 *voltage;
  9949  002350  0E00               	movlw	0
  9950  002352  6E30               	movwf	___fladd@a,c
  9951  002354  0ED8               	movlw	216
  9952  002356  6E31               	movwf	___fladd@a+1,c
  9953  002358  0E56               	movlw	86
  9954  00235A  6E32               	movwf	___fladd@a+2,c
  9955  00235C  0E47               	movlw	71
  9956  00235E  6E33               	movwf	___fladd@a+3,c
  9957  002360  0E00               	movlw	0
  9958  002362  6E13               	movwf	i2___flmul@a,c
  9959  002364  0E80               	movlw	128
  9960  002366  6E14               	movwf	i2___flmul@a+1,c
  9961  002368  0E3B               	movlw	59
  9962  00236A  6E15               	movwf	i2___flmul@a+2,c
  9963  00236C  0E45               	movlw	69
  9964  00236E  6E16               	movwf	i2___flmul@a+3,c
  9965  002370  C06F  F00F         	movff	_voltage,i2___flmul@b
  9966  002374  C070  F010         	movff	_voltage+1,i2___flmul@b+1
  9967  002378  C071  F011         	movff	_voltage+2,i2___flmul@b+2
  9968  00237C  C072  F012         	movff	_voltage+3,i2___flmul@b+3
  9969  002380  ECD6  F00D         	call	i2___flmul	;wreg free
  9970  002384  C00F  F028         	movff	?i2___flmul,___flneg@f1
  9971  002388  C010  F029         	movff	?i2___flmul+1,___flneg@f1+1
  9972  00238C  C011  F02A         	movff	?i2___flmul+2,___flneg@f1+2
  9973  002390  C012  F02B         	movff	?i2___flmul+3,___flneg@f1+3
  9974  002394  EC68  F019         	call	___flneg	;wreg free
  9975  002398  C028  F02C         	movff	?___flneg,___fladd@b
  9976  00239C  C029  F02D         	movff	?___flneg+1,___fladd@b+1
  9977  0023A0  C02A  F02E         	movff	?___flneg+2,___fladd@b+2
  9978  0023A4  C02B  F02F         	movff	?___flneg+3,___fladd@b+3
  9979  0023A8  EC7E  F00F         	call	___fladd	;wreg free
  9980  0023AC  C02C  F040         	movff	?___fladd,i2___fltol@f1
  9981  0023B0  C02D  F041         	movff	?___fladd+1,i2___fltol@f1+1
  9982  0023B4  C02E  F042         	movff	?___fladd+2,i2___fltol@f1+2
  9983  0023B8  C02F  F043         	movff	?___fladd+3,i2___fltol@f1+3
  9984  0023BC  EC3E  F014         	call	i2___fltol	;wreg free
  9985  0023C0  C040  FFCE         	movff	?i2___fltol,4046	;volatile
  9986  0023C4  C041  FFCF         	movff	?i2___fltol+1,4047	;volatile
  9987                           
  9988                           ;main.c: 55: return ;
  9989  0023C8  C05B  F07C         	movff	??_Hi_ISR+17,btemp+3
  9990  0023CC  C05A  F07B         	movff	??_Hi_ISR+16,btemp+2
  9991  0023D0  C059  F07A         	movff	??_Hi_ISR+15,btemp+1
  9992  0023D4  C058  F079         	movff	??_Hi_ISR+14,btemp
  9993  0023D8  C057  FFF5         	movff	??_Hi_ISR+13,tablat
  9994  0023DC  C056  FFF8         	movff	??_Hi_ISR+12,tblptru
  9995  0023E0  C055  FFF7         	movff	??_Hi_ISR+11,tblptrh
  9996  0023E4  C054  FFF6         	movff	??_Hi_ISR+10,tblptrl
  9997  0023E8  C053  FFF4         	movff	??_Hi_ISR+9,prodh
  9998  0023EC  C052  FFF3         	movff	??_Hi_ISR+8,prodl
  9999  0023F0  C051  FFDA         	movff	??_Hi_ISR+7,fsr2h
 10000  0023F4  C050  FFD9         	movff	??_Hi_ISR+6,fsr2l
 10001  0023F8  C04F  FFE2         	movff	??_Hi_ISR+5,fsr1h
 10002  0023FC  C04E  FFE1         	movff	??_Hi_ISR+4,fsr1l
 10003  002400  C04D  FFEA         	movff	??_Hi_ISR+3,fsr0h
 10004  002404  C04C  FFE9         	movff	??_Hi_ISR+2,fsr0l
 10005  002408  C04B  FFFB         	movff	??_Hi_ISR+1,pclatu
 10006  00240C  C04A  FFFA         	movff	??_Hi_ISR,pclath
 10007  002410  9279               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10008  002412  0011               	retfie		f
 10009  002414                     __end_of_Hi_ISR:
 10010                           	opt stack 0
 10011                           pclatu	equ	0xFFB
 10012                           pclath	equ	0xFFA
 10013                           tblptru	equ	0xFF8
 10014                           tblptrh	equ	0xFF7
 10015                           tblptrl	equ	0xFF6
 10016                           tablat	equ	0xFF5
 10017                           prodh	equ	0xFF4
 10018                           prodl	equ	0xFF3
 10019                           intcon	equ	0xFF2
 10020                           indf0	equ	0xFEF
 10021                           postinc0	equ	0xFEE
 10022                           fsr0h	equ	0xFEA
 10023                           fsr0l	equ	0xFE9
 10024                           wreg	equ	0xFE8
 10025                           indf1	equ	0xFE7
 10026                           fsr1h	equ	0xFE2
 10027                           fsr1l	equ	0xFE1
 10028                           bsr	equ	0xFE0
 10029                           indf2	equ	0xFDF
 10030                           postinc2	equ	0xFDE
 10031                           fsr2h	equ	0xFDA
 10032                           fsr2l	equ	0xFD9
 10033                           status	equ	0xFD8
 10034                           
 10035 ;; *************** function i2___xxtofl *****************
 10036 ;; Defined at:
 10037 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\xxtofl.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;  sign            1    wreg     unsigned char 
 10040 ;;  val             4    0[COMRAM] long 
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;  sign            1    8[COMRAM] unsigned char 
 10043 ;;  __xxtofl        4   10[COMRAM] unsigned long 
 10044 ;;  __xxtofl        1    9[COMRAM] unsigned char 
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  4    0[COMRAM] unsigned char 
 10047 ;; Registers used:
 10048 ;;		wreg, status,2, status,0
 10049 ;; Tracked objects:
 10050 ;;		On entry : 0/0
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10054 ;;      Params:         4       0       0       0       0       0       0
 10055 ;;      Locals:         6       0       0       0       0       0       0
 10056 ;;      Temps:          4       0       0       0       0       0       0
 10057 ;;      Totals:        14       0       0       0       0       0       0
 10058 ;;Total ram usage:       14 bytes
 10059 ;; Hardware stack levels used:    1
 10060 ;; This function calls:
 10061 ;;		Nothing
 10062 ;; This function is called by:
 10063 ;;		_Hi_ISR
 10064 ;; This function uses a non-reentrant model
 10065 ;;
 10066                           
 10067                           	psect	text43
 10068  002568                     __ptext43:
 10069                           	opt stack 0
 10070  002568                     i2___xxtofl:
 10071                           	opt stack 21
 10072                           
 10073                           ;incstack = 0
 10074                           ;i2___xxtofl@sign stored from wreg
 10075  002568  6E09               	movwf	i2___xxtofl@sign,c
 10076  00256A  5009               	movf	i2___xxtofl@sign,w,c
 10077  00256C  A4D8               	btfss	status,2,c
 10078  00256E  AE04               	btfss	i2___xxtofl@val+3,7,c
 10079  002570  D01A               	goto	i2l1065
 10080  002572  C001  F005         	movff	i2___xxtofl@val,??i2___xxtofl
 10081  002576  C002  F006         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 10082  00257A  C003  F007         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 10083  00257E  C004  F008         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 10084  002582  1E05               	comf	??i2___xxtofl,f,c
 10085  002584  1E06               	comf	??i2___xxtofl+1,f,c
 10086  002586  1E07               	comf	??i2___xxtofl+2,f,c
 10087  002588  1E08               	comf	??i2___xxtofl+3,f,c
 10088  00258A  2A05               	incf	??i2___xxtofl,f,c
 10089  00258C  0E00               	movlw	0
 10090  00258E  2206               	addwfc	??i2___xxtofl+1,f,c
 10091  002590  2207               	addwfc	??i2___xxtofl+2,f,c
 10092  002592  2208               	addwfc	??i2___xxtofl+3,f,c
 10093  002594  C005  F00B         	movff	??i2___xxtofl,i2___xxtofl@arg
 10094  002598  C006  F00C         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 10095  00259C  C007  F00D         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 10096  0025A0  C008  F00E         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 10097  0025A4  D008               	goto	i2l1066
 10098  0025A6                     i2l1065:
 10099  0025A6  C001  F00B         	movff	i2___xxtofl@val,i2___xxtofl@arg
 10100  0025AA  C002  F00C         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 10101  0025AE  C003  F00D         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 10102  0025B2  C004  F00E         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 10103  0025B6                     i2l1066:
 10104  0025B6  5001               	movf	i2___xxtofl@val,w,c
 10105  0025B8  1002               	iorwf	i2___xxtofl@val+1,w,c
 10106  0025BA  1003               	iorwf	i2___xxtofl@val+2,w,c
 10107  0025BC  1004               	iorwf	i2___xxtofl@val+3,w,c
 10108  0025BE  A4D8               	btfss	status,2,c
 10109  0025C0  D009               	goto	i2l1067
 10110  0025C2  0E00               	movlw	0
 10111  0025C4  6E01               	movwf	?i2___xxtofl,c
 10112  0025C6  0E00               	movlw	0
 10113  0025C8  6E02               	movwf	?i2___xxtofl+1,c
 10114  0025CA  0E00               	movlw	0
 10115  0025CC  6E03               	movwf	?i2___xxtofl+2,c
 10116  0025CE  0E00               	movlw	0
 10117  0025D0  6E04               	movwf	?i2___xxtofl+3,c
 10118  0025D2  0012               	return	
 10119  0025D4                     i2l1067:
 10120  0025D4  0E96               	movlw	150
 10121  0025D6  6E0A               	movwf	i2___xxtofl@exp,c
 10122  0025D8  D006               	goto	i2l1069
 10123  0025DA  2A0A               	incf	i2___xxtofl@exp,f,c
 10124  0025DC  90D8               	bcf	status,0,c
 10125  0025DE  320E               	rrcf	i2___xxtofl@arg+3,f,c
 10126  0025E0  320D               	rrcf	i2___xxtofl@arg+2,f,c
 10127  0025E2  320C               	rrcf	i2___xxtofl@arg+1,f,c
 10128  0025E4  320B               	rrcf	i2___xxtofl@arg,f,c
 10129  0025E6                     i2l1069:
 10130  0025E6  0E00               	movlw	0
 10131  0025E8  140B               	andwf	i2___xxtofl@arg,w,c
 10132  0025EA  6E05               	movwf	??i2___xxtofl& (0+255),c
 10133  0025EC  0E00               	movlw	0
 10134  0025EE  140C               	andwf	i2___xxtofl@arg+1,w,c
 10135  0025F0  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
 10136  0025F2  0E00               	movlw	0
 10137  0025F4  140D               	andwf	i2___xxtofl@arg+2,w,c
 10138  0025F6  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
 10139  0025F8  0EFE               	movlw	254
 10140  0025FA  140E               	andwf	i2___xxtofl@arg+3,w,c
 10141  0025FC  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
 10142  0025FE  5005               	movf	??i2___xxtofl,w,c
 10143  002600  1006               	iorwf	??i2___xxtofl+1,w,c
 10144  002602  1007               	iorwf	??i2___xxtofl+2,w,c
 10145  002604  1008               	iorwf	??i2___xxtofl+3,w,c
 10146  002606  B4D8               	btfsc	status,2,c
 10147  002608  D00D               	goto	i2l1072
 10148  00260A  D7E7               	goto	i2l1070
 10149  00260C  2A0A               	incf	i2___xxtofl@exp,f,c
 10150  00260E  0E01               	movlw	1
 10151  002610  260B               	addwf	i2___xxtofl@arg,f,c
 10152  002612  0E00               	movlw	0
 10153  002614  220C               	addwfc	i2___xxtofl@arg+1,f,c
 10154  002616  220D               	addwfc	i2___xxtofl@arg+2,f,c
 10155  002618  220E               	addwfc	i2___xxtofl@arg+3,f,c
 10156  00261A  90D8               	bcf	status,0,c
 10157  00261C  320E               	rrcf	i2___xxtofl@arg+3,f,c
 10158  00261E  320D               	rrcf	i2___xxtofl@arg+2,f,c
 10159  002620  320C               	rrcf	i2___xxtofl@arg+1,f,c
 10160  002622  320B               	rrcf	i2___xxtofl@arg,f,c
 10161  002624                     i2l1072:
 10162  002624  0E00               	movlw	0
 10163  002626  140B               	andwf	i2___xxtofl@arg,w,c
 10164  002628  6E05               	movwf	??i2___xxtofl& (0+255),c
 10165  00262A  0E00               	movlw	0
 10166  00262C  140C               	andwf	i2___xxtofl@arg+1,w,c
 10167  00262E  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
 10168  002630  0E00               	movlw	0
 10169  002632  140D               	andwf	i2___xxtofl@arg+2,w,c
 10170  002634  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
 10171  002636  0EFF               	movlw	255
 10172  002638  140E               	andwf	i2___xxtofl@arg+3,w,c
 10173  00263A  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
 10174  00263C  5005               	movf	??i2___xxtofl,w,c
 10175  00263E  1006               	iorwf	??i2___xxtofl+1,w,c
 10176  002640  1007               	iorwf	??i2___xxtofl+2,w,c
 10177  002642  1008               	iorwf	??i2___xxtofl+3,w,c
 10178  002644  B4D8               	btfsc	status,2,c
 10179  002646  D007               	goto	i2l1075
 10180  002648  D7E1               	goto	i2l1073
 10181  00264A  060A               	decf	i2___xxtofl@exp,f,c
 10182  00264C  90D8               	bcf	status,0,c
 10183  00264E  360B               	rlcf	i2___xxtofl@arg,f,c
 10184  002650  360C               	rlcf	i2___xxtofl@arg+1,f,c
 10185  002652  360D               	rlcf	i2___xxtofl@arg+2,f,c
 10186  002654  360E               	rlcf	i2___xxtofl@arg+3,f,c
 10187  002656                     i2l1075:
 10188  002656  BE0D               	btfsc	i2___xxtofl@arg+2,7,c
 10189  002658  D003               	goto	i2u567_40
 10190  00265A  0E02               	movlw	2
 10191  00265C  600A               	cpfslt	i2___xxtofl@exp,c
 10192  00265E  D7F5               	goto	i2l1076
 10193  002660                     i2u567_40:
 10194  002660  B00A               	btfsc	i2___xxtofl@exp,0,c
 10195  002662  D008               	goto	i2l1080
 10196  002664  0EFF               	movlw	255
 10197  002666  160B               	andwf	i2___xxtofl@arg,f,c
 10198  002668  0EFF               	movlw	255
 10199  00266A  160C               	andwf	i2___xxtofl@arg+1,f,c
 10200  00266C  0E7F               	movlw	127
 10201  00266E  160D               	andwf	i2___xxtofl@arg+2,f,c
 10202  002670  0EFF               	movlw	255
 10203  002672  160E               	andwf	i2___xxtofl@arg+3,f,c
 10204  002674                     i2l1080:
 10205  002674  90D8               	bcf	status,0,c
 10206  002676  320A               	rrcf	i2___xxtofl@exp,f,c
 10207  002678  C00A  F005         	movff	i2___xxtofl@exp,??i2___xxtofl
 10208  00267C  6A06               	clrf	(??i2___xxtofl+1)& (0+255),c
 10209  00267E  6A07               	clrf	(??i2___xxtofl+2)& (0+255),c
 10210  002680  6A08               	clrf	(??i2___xxtofl+3)& (0+255),c
 10211  002682  C005  F008         	movff	??i2___xxtofl,??i2___xxtofl+3
 10212  002686  6A07               	clrf	??i2___xxtofl+2,c
 10213  002688  6A06               	clrf	??i2___xxtofl+1,c
 10214  00268A  6A05               	clrf	??i2___xxtofl,c
 10215  00268C  5005               	movf	??i2___xxtofl,w,c
 10216  00268E  120B               	iorwf	i2___xxtofl@arg,f,c
 10217  002690  5006               	movf	??i2___xxtofl+1,w,c
 10218  002692  120C               	iorwf	i2___xxtofl@arg+1,f,c
 10219  002694  5007               	movf	??i2___xxtofl+2,w,c
 10220  002696  120D               	iorwf	i2___xxtofl@arg+2,f,c
 10221  002698  5008               	movf	??i2___xxtofl+3,w,c
 10222  00269A  120E               	iorwf	i2___xxtofl@arg+3,f,c
 10223  00269C  5009               	movf	i2___xxtofl@sign,w,c
 10224  00269E  A4D8               	btfss	status,2,c
 10225  0026A0  AE04               	btfss	i2___xxtofl@val+3,7,c
 10226  0026A2  D001               	goto	i2l1081
 10227  0026A4  8E0E               	bsf	i2___xxtofl@arg+3,7,c
 10228  0026A6                     i2l1081:
 10229  0026A6  C00B  F001         	movff	i2___xxtofl@arg,?i2___xxtofl
 10230  0026AA  C00C  F002         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 10231  0026AE  C00D  F003         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 10232  0026B2  C00E  F004         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 10233  0026B6  0012               	return	
 10234  0026B8                     __end_ofi2___xxtofl:
 10235                           	opt stack 0
 10236                           pclatu	equ	0xFFB
 10237                           pclath	equ	0xFFA
 10238                           tblptru	equ	0xFF8
 10239                           tblptrh	equ	0xFF7
 10240                           tblptrl	equ	0xFF6
 10241                           tablat	equ	0xFF5
 10242                           prodh	equ	0xFF4
 10243                           prodl	equ	0xFF3
 10244                           intcon	equ	0xFF2
 10245                           indf0	equ	0xFEF
 10246                           postinc0	equ	0xFEE
 10247                           fsr0h	equ	0xFEA
 10248                           fsr0l	equ	0xFE9
 10249                           wreg	equ	0xFE8
 10250                           indf1	equ	0xFE7
 10251                           fsr1h	equ	0xFE2
 10252                           fsr1l	equ	0xFE1
 10253                           bsr	equ	0xFE0
 10254                           indf2	equ	0xFDF
 10255                           postinc2	equ	0xFDE
 10256                           fsr2h	equ	0xFDA
 10257                           fsr2l	equ	0xFD9
 10258                           status	equ	0xFD8
 10259                           
 10260 ;; *************** function i2___fltol *****************
 10261 ;; Defined at:
 10262 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fltol.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  f1              4   63[COMRAM] unsigned char 
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;  __fltol         1   72[COMRAM] unsigned char 
 10267 ;;  __fltol         1   71[COMRAM] unsigned char 
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  4   63[COMRAM] long 
 10270 ;; Registers used:
 10271 ;;		wreg, status,2, status,0
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10277 ;;      Params:         4       0       0       0       0       0       0
 10278 ;;      Locals:         2       0       0       0       0       0       0
 10279 ;;      Temps:          4       0       0       0       0       0       0
 10280 ;;      Totals:        10       0       0       0       0       0       0
 10281 ;;Total ram usage:       10 bytes
 10282 ;; Hardware stack levels used:    1
 10283 ;; This function calls:
 10284 ;;		Nothing
 10285 ;; This function is called by:
 10286 ;;		_Hi_ISR
 10287 ;; This function uses a non-reentrant model
 10288 ;;
 10289                           
 10290                           	psect	text44
 10291  00287C                     __ptext44:
 10292                           	opt stack 0
 10293  00287C                     i2___fltol:
 10294                           	opt stack 21
 10295                           
 10296                           ;incstack = 0
 10297  00287C  3442               	rlcf	i2___fltol@f1+2,w,c
 10298  00287E  3443               	rlcf	i2___fltol@f1+3,w,c
 10299  002880  6E49               	movwf	i2___fltol@exp1,c
 10300  002882  5049               	movf	i2___fltol@exp1,w,c
 10301  002884  A4D8               	btfss	status,2,c
 10302  002886  D009               	goto	i2l707
 10303  002888  0E00               	movlw	0
 10304  00288A  6E40               	movwf	?i2___fltol,c
 10305  00288C  0E00               	movlw	0
 10306  00288E  6E41               	movwf	?i2___fltol+1,c
 10307  002890  0E00               	movlw	0
 10308  002892  6E42               	movwf	?i2___fltol+2,c
 10309  002894  0E00               	movlw	0
 10310  002896  6E43               	movwf	?i2___fltol+3,c
 10311  002898  0012               	return	
 10312  00289A                     i2l707:
 10313  00289A  C040  F044         	movff	i2___fltol@f1,??i2___fltol
 10314  00289E  C041  F045         	movff	i2___fltol@f1+1,??i2___fltol+1
 10315  0028A2  C042  F046         	movff	i2___fltol@f1+2,??i2___fltol+2
 10316  0028A6  C043  F047         	movff	i2___fltol@f1+3,??i2___fltol+3
 10317  0028AA  0E20               	movlw	32
 10318  0028AC  D005               	goto	i2u536_40
 10319  0028AE                     i2u536_45:
 10320  0028AE  90D8               	bcf	status,0,c
 10321  0028B0  3247               	rrcf	??i2___fltol+3,f,c
 10322  0028B2  3246               	rrcf	??i2___fltol+2,f,c
 10323  0028B4  3245               	rrcf	??i2___fltol+1,f,c
 10324  0028B6  3244               	rrcf	??i2___fltol,f,c
 10325  0028B8                     i2u536_40:
 10326  0028B8  2EE8               	decfsz	wreg,f,c
 10327  0028BA  D7F9               	goto	i2u536_45
 10328  0028BC  5044               	movf	??i2___fltol,w,c
 10329  0028BE  6E48               	movwf	i2___fltol@sign1,c
 10330  0028C0  8E42               	bsf	i2___fltol@f1+2,7,c
 10331  0028C2  0EFF               	movlw	255
 10332  0028C4  1640               	andwf	i2___fltol@f1,f,c
 10333  0028C6  0EFF               	movlw	255
 10334  0028C8  1641               	andwf	i2___fltol@f1+1,f,c
 10335  0028CA  0EFF               	movlw	255
 10336  0028CC  1642               	andwf	i2___fltol@f1+2,f,c
 10337  0028CE  0E00               	movlw	0
 10338  0028D0  1643               	andwf	i2___fltol@f1+3,f,c
 10339  0028D2  0E96               	movlw	150
 10340  0028D4  5E49               	subwf	i2___fltol@exp1,f,c
 10341  0028D6  AE49               	btfss	i2___fltol@exp1,7,c
 10342  0028D8  D016               	goto	i2l709
 10343  0028DA  5049               	movf	i2___fltol@exp1,w,c
 10344  0028DC  0A80               	xorlw	128
 10345  0028DE  0F97               	addlw	151
 10346  0028E0  B0D8               	btfsc	status,0,c
 10347  0028E2  D009               	goto	i2l710
 10348  0028E4  0E00               	movlw	0
 10349  0028E6  6E40               	movwf	?i2___fltol,c
 10350  0028E8  0E00               	movlw	0
 10351  0028EA  6E41               	movwf	?i2___fltol+1,c
 10352  0028EC  0E00               	movlw	0
 10353  0028EE  6E42               	movwf	?i2___fltol+2,c
 10354  0028F0  0E00               	movlw	0
 10355  0028F2  6E43               	movwf	?i2___fltol+3,c
 10356  0028F4  0012               	return	
 10357  0028F6                     i2l710:
 10358  0028F6  90D8               	bcf	status,0,c
 10359  0028F8  3243               	rrcf	i2___fltol@f1+3,f,c
 10360  0028FA  3242               	rrcf	i2___fltol@f1+2,f,c
 10361  0028FC  3241               	rrcf	i2___fltol@f1+1,f,c
 10362  0028FE  3240               	rrcf	i2___fltol@f1,f,c
 10363  002900  3E49               	incfsz	i2___fltol@exp1,f,c
 10364  002902  D7F9               	goto	i2l710
 10365  002904  D015               	goto	i2u540_40
 10366  002906                     i2l709:
 10367  002906  0E1F               	movlw	31
 10368  002908  6449               	cpfsgt	i2___fltol@exp1,c
 10369  00290A  D00F               	goto	i2l715
 10370  00290C  0E00               	movlw	0
 10371  00290E  6E40               	movwf	?i2___fltol,c
 10372  002910  0E00               	movlw	0
 10373  002912  6E41               	movwf	?i2___fltol+1,c
 10374  002914  0E00               	movlw	0
 10375  002916  6E42               	movwf	?i2___fltol+2,c
 10376  002918  0E00               	movlw	0
 10377  00291A  6E43               	movwf	?i2___fltol+3,c
 10378  00291C  0012               	return	
 10379  00291E  90D8               	bcf	status,0,c
 10380  002920  3640               	rlcf	i2___fltol@f1,f,c
 10381  002922  3641               	rlcf	i2___fltol@f1+1,f,c
 10382  002924  3642               	rlcf	i2___fltol@f1+2,f,c
 10383  002926  3643               	rlcf	i2___fltol@f1+3,f,c
 10384  002928  0649               	decf	i2___fltol@exp1,f,c
 10385  00292A                     i2l715:
 10386  00292A  5049               	movf	i2___fltol@exp1,w,c
 10387  00292C  A4D8               	btfss	status,2,c
 10388  00292E  D7F7               	goto	i2l716
 10389  002930                     i2u540_40:
 10390  002930  5048               	movf	i2___fltol@sign1,w,c
 10391  002932  B4D8               	btfsc	status,2,c
 10392  002934  D008               	goto	i2l718
 10393  002936  1E43               	comf	i2___fltol@f1+3,f,c
 10394  002938  1E42               	comf	i2___fltol@f1+2,f,c
 10395  00293A  1E41               	comf	i2___fltol@f1+1,f,c
 10396  00293C  6C40               	negf	i2___fltol@f1,c
 10397  00293E  0E00               	movlw	0
 10398  002940  2241               	addwfc	i2___fltol@f1+1,f,c
 10399  002942  2242               	addwfc	i2___fltol@f1+2,f,c
 10400  002944  2243               	addwfc	i2___fltol@f1+3,f,c
 10401  002946                     i2l718:
 10402  002946  C040  F040         	movff	i2___fltol@f1,?i2___fltol
 10403  00294A  C041  F041         	movff	i2___fltol@f1+1,?i2___fltol+1
 10404  00294E  C042  F042         	movff	i2___fltol@f1+2,?i2___fltol+2
 10405  002952  C043  F043         	movff	i2___fltol@f1+3,?i2___fltol+3
 10406  002956  0012               	return	
 10407  002958                     __end_ofi2___fltol:
 10408                           	opt stack 0
 10409                           pclatu	equ	0xFFB
 10410                           pclath	equ	0xFFA
 10411                           tblptru	equ	0xFF8
 10412                           tblptrh	equ	0xFF7
 10413                           tblptrl	equ	0xFF6
 10414                           tablat	equ	0xFF5
 10415                           prodh	equ	0xFF4
 10416                           prodl	equ	0xFF3
 10417                           intcon	equ	0xFF2
 10418                           indf0	equ	0xFEF
 10419                           postinc0	equ	0xFEE
 10420                           fsr0h	equ	0xFEA
 10421                           fsr0l	equ	0xFE9
 10422                           wreg	equ	0xFE8
 10423                           indf1	equ	0xFE7
 10424                           fsr1h	equ	0xFE2
 10425                           fsr1l	equ	0xFE1
 10426                           bsr	equ	0xFE0
 10427                           indf2	equ	0xFDF
 10428                           postinc2	equ	0xFDE
 10429                           fsr2h	equ	0xFDA
 10430                           fsr2l	equ	0xFD9
 10431                           status	equ	0xFD8
 10432                           
 10433 ;; *************** function i2___flmul *****************
 10434 ;; Defined at:
 10435 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\sprcmul.c"
 10436 ;; Parameters:    Size  Location     Type
 10437 ;;  b               4   14[COMRAM] long 
 10438 ;;  a               4   18[COMRAM] long 
 10439 ;; Auto vars:     Size  Location     Type
 10440 ;;  __flmul         4   33[COMRAM] struct .
 10441 ;;  __flmul         4   27[COMRAM] unsigned long 
 10442 ;;  __flmul         2   37[COMRAM] struct .
 10443 ;;  __flmul         1   32[COMRAM] unsigned char 
 10444 ;;  __flmul         1   31[COMRAM] unsigned char 
 10445 ;;  __flmul         1   26[COMRAM] unsigned char 
 10446 ;; Return value:  Size  Location     Type
 10447 ;;                  4   14[COMRAM] unsigned char 
 10448 ;; Registers used:
 10449 ;;		wreg, status,2, status,0, prodl, prodh
 10450 ;; Tracked objects:
 10451 ;;		On entry : 0/0
 10452 ;;		On exit  : 0/0
 10453 ;;		Unchanged: 0/0
 10454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10455 ;;      Params:         8       0       0       0       0       0       0
 10456 ;;      Locals:        13       0       0       0       0       0       0
 10457 ;;      Temps:          4       0       0       0       0       0       0
 10458 ;;      Totals:        25       0       0       0       0       0       0
 10459 ;;Total ram usage:       25 bytes
 10460 ;; Hardware stack levels used:    1
 10461 ;; This function calls:
 10462 ;;		Nothing
 10463 ;; This function is called by:
 10464 ;;		_Hi_ISR
 10465 ;; This function uses a non-reentrant model
 10466 ;;
 10467                           
 10468                           	psect	text45
 10469  001BAC                     __ptext45:
 10470                           	opt stack 0
 10471  001BAC                     i2___flmul:
 10472                           	opt stack 21
 10473                           
 10474                           ;incstack = 0
 10475  001BAC  5012               	movf	i2___flmul@b+3,w,c
 10476  001BAE  0B80               	andlw	128
 10477  001BB0  6E1B               	movwf	i2___flmul@sign,c
 10478  001BB2  5012               	movf	i2___flmul@b+3,w,c
 10479  001BB4  2412               	addwf	i2___flmul@b+3,w,c
 10480  001BB6  6E21               	movwf	i2___flmul@bexp,c
 10481  001BB8  BE11               	btfsc	i2___flmul@b+2,7,c
 10482  001BBA  8021               	bsf	i2___flmul@bexp,0,c
 10483  001BBC  5021               	movf	i2___flmul@bexp,w,c
 10484  001BBE  B4D8               	btfsc	status,2,c
 10485  001BC0  D00D               	goto	i2l1002
 10486  001BC2  2821               	incf	i2___flmul@bexp,w,c
 10487  001BC4  A4D8               	btfss	status,2,c
 10488  001BC6  D008               	goto	i2l1003
 10489  001BC8  0E00               	movlw	0
 10490  001BCA  6E0F               	movwf	i2___flmul@b,c
 10491  001BCC  0E00               	movlw	0
 10492  001BCE  6E10               	movwf	i2___flmul@b+1,c
 10493  001BD0  0E00               	movlw	0
 10494  001BD2  6E11               	movwf	i2___flmul@b+2,c
 10495  001BD4  0E00               	movlw	0
 10496  001BD6  6E12               	movwf	i2___flmul@b+3,c
 10497  001BD8                     i2l1003:
 10498  001BD8  8E11               	bsf	i2___flmul@b+2,7,c
 10499  001BDA  D008               	goto	i2l1004
 10500  001BDC                     i2l1002:
 10501  001BDC  0E00               	movlw	0
 10502  001BDE  6E0F               	movwf	i2___flmul@b,c
 10503  001BE0  0E00               	movlw	0
 10504  001BE2  6E10               	movwf	i2___flmul@b+1,c
 10505  001BE4  0E00               	movlw	0
 10506  001BE6  6E11               	movwf	i2___flmul@b+2,c
 10507  001BE8  0E00               	movlw	0
 10508  001BEA  6E12               	movwf	i2___flmul@b+3,c
 10509  001BEC                     i2l1004:
 10510  001BEC  5016               	movf	i2___flmul@a+3,w,c
 10511  001BEE  0B80               	andlw	128
 10512  001BF0  1A1B               	xorwf	i2___flmul@sign,f,c
 10513  001BF2  5016               	movf	i2___flmul@a+3,w,c
 10514  001BF4  2416               	addwf	i2___flmul@a+3,w,c
 10515  001BF6  6E20               	movwf	i2___flmul@aexp,c
 10516  001BF8  BE15               	btfsc	i2___flmul@a+2,7,c
 10517  001BFA  8020               	bsf	i2___flmul@aexp,0,c
 10518  001BFC  5020               	movf	i2___flmul@aexp,w,c
 10519  001BFE  B4D8               	btfsc	status,2,c
 10520  001C00  D00D               	goto	i2l1006
 10521  001C02  2820               	incf	i2___flmul@aexp,w,c
 10522  001C04  A4D8               	btfss	status,2,c
 10523  001C06  D008               	goto	i2l1007
 10524  001C08  0E00               	movlw	0
 10525  001C0A  6E13               	movwf	i2___flmul@a,c
 10526  001C0C  0E00               	movlw	0
 10527  001C0E  6E14               	movwf	i2___flmul@a+1,c
 10528  001C10  0E00               	movlw	0
 10529  001C12  6E15               	movwf	i2___flmul@a+2,c
 10530  001C14  0E00               	movlw	0
 10531  001C16  6E16               	movwf	i2___flmul@a+3,c
 10532  001C18                     i2l1007:
 10533  001C18  8E15               	bsf	i2___flmul@a+2,7,c
 10534  001C1A  D008               	goto	i2l1008
 10535  001C1C                     i2l1006:
 10536  001C1C  0E00               	movlw	0
 10537  001C1E  6E13               	movwf	i2___flmul@a,c
 10538  001C20  0E00               	movlw	0
 10539  001C22  6E14               	movwf	i2___flmul@a+1,c
 10540  001C24  0E00               	movlw	0
 10541  001C26  6E15               	movwf	i2___flmul@a+2,c
 10542  001C28  0E00               	movlw	0
 10543  001C2A  6E16               	movwf	i2___flmul@a+3,c
 10544  001C2C                     i2l1008:
 10545  001C2C  5020               	movf	i2___flmul@aexp,w,c
 10546  001C2E  B4D8               	btfsc	status,2,c
 10547  001C30  D003               	goto	i2u549_40
 10548  001C32  5021               	movf	i2___flmul@bexp,w,c
 10549  001C34  A4D8               	btfss	status,2,c
 10550  001C36  D009               	goto	i2l1009
 10551  001C38                     i2u549_40:
 10552  001C38  0E00               	movlw	0
 10553  001C3A  6E0F               	movwf	?i2___flmul,c
 10554  001C3C  0E00               	movlw	0
 10555  001C3E  6E10               	movwf	?i2___flmul+1,c
 10556  001C40  0E00               	movlw	0
 10557  001C42  6E11               	movwf	?i2___flmul+2,c
 10558  001C44  0E00               	movlw	0
 10559  001C46  6E12               	movwf	?i2___flmul+3,c
 10560  001C48  0012               	return	
 10561  001C4A                     i2l1009:
 10562  001C4A  5015               	movf	i2___flmul@a+2,w,c
 10563  001C4C  020F               	mulwf	i2___flmul@b,c
 10564  001C4E  CFF3 F026          	movff	prodl,i2___flmul@temp
 10565  001C52  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 10566  001C56  5026               	movf	i2___flmul@temp,w,c
 10567  001C58  6E1C               	movwf	i2___flmul@grs,c
 10568  001C5A  6A1D               	clrf	i2___flmul@grs+1,c
 10569  001C5C  6A1E               	clrf	i2___flmul@grs+2,c
 10570  001C5E  6A1F               	clrf	i2___flmul@grs+3,c
 10571  001C60  5027               	movf	i2___flmul@temp+1,w,c
 10572  001C62  6E22               	movwf	i2___flmul@prod,c
 10573  001C64  6A23               	clrf	i2___flmul@prod+1,c
 10574  001C66  6A24               	clrf	i2___flmul@prod+2,c
 10575  001C68  6A25               	clrf	i2___flmul@prod+3,c
 10576  001C6A  5014               	movf	i2___flmul@a+1,w,c
 10577  001C6C  0210               	mulwf	i2___flmul@b+1,c
 10578  001C6E  CFF3 F026          	movff	prodl,i2___flmul@temp
 10579  001C72  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 10580  001C76  5026               	movf	i2___flmul@temp,w,c
 10581  001C78  261C               	addwf	i2___flmul@grs,f,c
 10582  001C7A  0E00               	movlw	0
 10583  001C7C  221D               	addwfc	i2___flmul@grs+1,f,c
 10584  001C7E  221E               	addwfc	i2___flmul@grs+2,f,c
 10585  001C80  221F               	addwfc	i2___flmul@grs+3,f,c
 10586  001C82  5027               	movf	i2___flmul@temp+1,w,c
 10587  001C84  2622               	addwf	i2___flmul@prod,f,c
 10588  001C86  0E00               	movlw	0
 10589  001C88  2223               	addwfc	i2___flmul@prod+1,f,c
 10590  001C8A  2224               	addwfc	i2___flmul@prod+2,f,c
 10591  001C8C  2225               	addwfc	i2___flmul@prod+3,f,c
 10592  001C8E  5013               	movf	i2___flmul@a,w,c
 10593  001C90  0211               	mulwf	i2___flmul@b+2,c
 10594  001C92  CFF3 F026          	movff	prodl,i2___flmul@temp
 10595  001C96  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 10596  001C9A  5026               	movf	i2___flmul@temp,w,c
 10597  001C9C  261C               	addwf	i2___flmul@grs,f,c
 10598  001C9E  0E00               	movlw	0
 10599  001CA0  221D               	addwfc	i2___flmul@grs+1,f,c
 10600  001CA2  221E               	addwfc	i2___flmul@grs+2,f,c
 10601  001CA4  221F               	addwfc	i2___flmul@grs+3,f,c
 10602  001CA6  5027               	movf	i2___flmul@temp+1,w,c
 10603  001CA8  2622               	addwf	i2___flmul@prod,f,c
 10604  001CAA  0E00               	movlw	0
 10605  001CAC  2223               	addwfc	i2___flmul@prod+1,f,c
 10606  001CAE  2224               	addwfc	i2___flmul@prod+2,f,c
 10607  001CB0  2225               	addwfc	i2___flmul@prod+3,f,c
 10608  001CB2  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 10609  001CB6  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 10610  001CBA  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 10611  001CBE  6A1C               	clrf	i2___flmul@grs,c
 10612  001CC0  5013               	movf	i2___flmul@a,w,c
 10613  001CC2  0210               	mulwf	i2___flmul@b+1,c
 10614  001CC4  CFF3 F026          	movff	prodl,i2___flmul@temp
 10615  001CC8  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 10616  001CCC  5026               	movf	i2___flmul@temp,w,c
 10617  001CCE  261C               	addwf	i2___flmul@grs,f,c
 10618  001CD0  5027               	movf	i2___flmul@temp+1,w,c
 10619  001CD2  221D               	addwfc	i2___flmul@grs+1,f,c
 10620  001CD4  0E00               	movlw	0
 10621  001CD6  221E               	addwfc	i2___flmul@grs+2,f,c
 10622  001CD8  0E00               	movlw	0
 10623  001CDA  221F               	addwfc	i2___flmul@grs+3,f,c
 10624  001CDC  5014               	movf	i2___flmul@a+1,w,c
 10625  001CDE  020F               	mulwf	i2___flmul@b,c
 10626  001CE0  CFF3 F026          	movff	prodl,i2___flmul@temp
 10627  001CE4  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 10628  001CE8  5026               	movf	i2___flmul@temp,w,c
 10629  001CEA  261C               	addwf	i2___flmul@grs,f,c
 10630  001CEC  5027               	movf	i2___flmul@temp+1,w,c
 10631  001CEE  221D               	addwfc	i2___flmul@grs+1,f,c
 10632  001CF0  0E00               	movlw	0
 10633  001CF2  221E               	addwfc	i2___flmul@grs+2,f,c
 10634  001CF4  0E00               	movlw	0
 10635  001CF6  221F               	addwfc	i2___flmul@grs+3,f,c
 10636  001CF8  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 10637  001CFC  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 10638  001D00  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 10639  001D04  6A1C               	clrf	i2___flmul@grs,c
 10640  001D06  5013               	movf	i2___flmul@a,w,c
 10641  001D08  020F               	mulwf	i2___flmul@b,c
 10642  001D0A  CFF3 F026          	movff	prodl,i2___flmul@temp
 10643  001D0E  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 10644  001D12  5026               	movf	i2___flmul@temp,w,c
 10645  001D14  261C               	addwf	i2___flmul@grs,f,c
 10646  001D16  5027               	movf	i2___flmul@temp+1,w,c
 10647  001D18  221D               	addwfc	i2___flmul@grs+1,f,c
 10648  001D1A  0E00               	movlw	0
 10649  001D1C  221E               	addwfc	i2___flmul@grs+2,f,c
 10650  001D1E  0E00               	movlw	0
 10651  001D20  221F               	addwfc	i2___flmul@grs+3,f,c
 10652  001D22  5015               	movf	i2___flmul@a+2,w,c
 10653  001D24  0210               	mulwf	i2___flmul@b+1,c
 10654  001D26  CFF3 F026          	movff	prodl,i2___flmul@temp
 10655  001D2A  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 10656  001D2E  5026               	movf	i2___flmul@temp,w,c
 10657  001D30  2622               	addwf	i2___flmul@prod,f,c
 10658  001D32  5027               	movf	i2___flmul@temp+1,w,c
 10659  001D34  2223               	addwfc	i2___flmul@prod+1,f,c
 10660  001D36  0E00               	movlw	0
 10661  001D38  2224               	addwfc	i2___flmul@prod+2,f,c
 10662  001D3A  0E00               	movlw	0
 10663  001D3C  2225               	addwfc	i2___flmul@prod+3,f,c
 10664  001D3E  5014               	movf	i2___flmul@a+1,w,c
 10665  001D40  0211               	mulwf	i2___flmul@b+2,c
 10666  001D42  CFF3 F026          	movff	prodl,i2___flmul@temp
 10667  001D46  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 10668  001D4A  5026               	movf	i2___flmul@temp,w,c
 10669  001D4C  2622               	addwf	i2___flmul@prod,f,c
 10670  001D4E  5027               	movf	i2___flmul@temp+1,w,c
 10671  001D50  2223               	addwfc	i2___flmul@prod+1,f,c
 10672  001D52  0E00               	movlw	0
 10673  001D54  2224               	addwfc	i2___flmul@prod+2,f,c
 10674  001D56  0E00               	movlw	0
 10675  001D58  2225               	addwfc	i2___flmul@prod+3,f,c
 10676  001D5A  5015               	movf	i2___flmul@a+2,w,c
 10677  001D5C  0211               	mulwf	i2___flmul@b+2,c
 10678  001D5E  CFF3 F026          	movff	prodl,i2___flmul@temp
 10679  001D62  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 10680  001D66  5026               	movf	i2___flmul@temp,w,c
 10681  001D68  6E17               	movwf	??i2___flmul& (0+255),c
 10682  001D6A  5027               	movf	i2___flmul@temp+1,w,c
 10683  001D6C  6E18               	movwf	(??i2___flmul+1)& (0+255),c
 10684  001D6E  6A19               	clrf	(??i2___flmul+2)& (0+255),c
 10685  001D70  6A1A               	clrf	(??i2___flmul+3)& (0+255),c
 10686  001D72  C019  F01A         	movff	??i2___flmul+2,??i2___flmul+3
 10687  001D76  C018  F019         	movff	??i2___flmul+1,??i2___flmul+2
 10688  001D7A  C017  F018         	movff	??i2___flmul,??i2___flmul+1
 10689  001D7E  6A17               	clrf	??i2___flmul,c
 10690  001D80  5017               	movf	??i2___flmul,w,c
 10691  001D82  2622               	addwf	i2___flmul@prod,f,c
 10692  001D84  5018               	movf	??i2___flmul+1,w,c
 10693  001D86  2223               	addwfc	i2___flmul@prod+1,f,c
 10694  001D88  5019               	movf	??i2___flmul+2,w,c
 10695  001D8A  2224               	addwfc	i2___flmul@prod+2,f,c
 10696  001D8C  501A               	movf	??i2___flmul+3,w,c
 10697  001D8E  2225               	addwfc	i2___flmul@prod+3,f,c
 10698  001D90  C01C  F017         	movff	i2___flmul@grs,??i2___flmul
 10699  001D94  C01D  F018         	movff	i2___flmul@grs+1,??i2___flmul+1
 10700  001D98  C01E  F019         	movff	i2___flmul@grs+2,??i2___flmul+2
 10701  001D9C  C01F  F01A         	movff	i2___flmul@grs+3,??i2___flmul+3
 10702  001DA0  0E19               	movlw	25
 10703  001DA2  D005               	goto	i2u550_40
 10704  001DA4                     i2u550_45:
 10705  001DA4  90D8               	bcf	status,0,c
 10706  001DA6  321A               	rrcf	??i2___flmul+3,f,c
 10707  001DA8  3219               	rrcf	??i2___flmul+2,f,c
 10708  001DAA  3218               	rrcf	??i2___flmul+1,f,c
 10709  001DAC  3217               	rrcf	??i2___flmul,f,c
 10710  001DAE                     i2u550_40:
 10711  001DAE  2EE8               	decfsz	wreg,f,c
 10712  001DB0  D7F9               	goto	i2u550_45
 10713  001DB2  5017               	movf	??i2___flmul,w,c
 10714  001DB4  2622               	addwf	i2___flmul@prod,f,c
 10715  001DB6  5018               	movf	??i2___flmul+1,w,c
 10716  001DB8  2223               	addwfc	i2___flmul@prod+1,f,c
 10717  001DBA  5019               	movf	??i2___flmul+2,w,c
 10718  001DBC  2224               	addwfc	i2___flmul@prod+2,f,c
 10719  001DBE  501A               	movf	??i2___flmul+3,w,c
 10720  001DC0  2225               	addwfc	i2___flmul@prod+3,f,c
 10721  001DC2  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 10722  001DC6  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 10723  001DCA  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 10724  001DCE  6A1C               	clrf	i2___flmul@grs,c
 10725  001DD0  5020               	movf	i2___flmul@aexp,w,c
 10726  001DD2  C021  F017         	movff	i2___flmul@bexp,??i2___flmul
 10727  001DD6  6A18               	clrf	(??i2___flmul+1)& (0+255),c
 10728  001DD8  2617               	addwf	??i2___flmul,f,c
 10729  001DDA  0E00               	movlw	0
 10730  001DDC  2218               	addwfc	??i2___flmul+1,f,c
 10731  001DDE  0E82               	movlw	130
 10732  001DE0  2417               	addwf	??i2___flmul,w,c
 10733  001DE2  6E26               	movwf	i2___flmul@temp,c
 10734  001DE4  0EFF               	movlw	255
 10735  001DE6  2018               	addwfc	??i2___flmul+1,w,c
 10736  001DE8  6E27               	movwf	i2___flmul@temp+1,c
 10737  001DEA  D00F               	goto	i2l1013
 10738  001DEC  90D8               	bcf	status,0,c
 10739  001DEE  3622               	rlcf	i2___flmul@prod,f,c
 10740  001DF0  3623               	rlcf	i2___flmul@prod+1,f,c
 10741  001DF2  3624               	rlcf	i2___flmul@prod+2,f,c
 10742  001DF4  3625               	rlcf	i2___flmul@prod+3,f,c
 10743  001DF6  BE1F               	btfsc	i2___flmul@grs+3,7,c
 10744  001DF8  8022               	bsf	i2___flmul@prod,0,c
 10745  001DFA  90D8               	bcf	status,0,c
 10746  001DFC  361C               	rlcf	i2___flmul@grs,f,c
 10747  001DFE  361D               	rlcf	i2___flmul@grs+1,f,c
 10748  001E00  361E               	rlcf	i2___flmul@grs+2,f,c
 10749  001E02  361F               	rlcf	i2___flmul@grs+3,f,c
 10750  001E04  0626               	decf	i2___flmul@temp,f,c
 10751  001E06  A0D8               	btfss	status,0,c
 10752  001E08  0627               	decf	i2___flmul@temp+1,f,c
 10753  001E0A                     i2l1013:
 10754  001E0A  AE24               	btfss	i2___flmul@prod+2,7,c
 10755  001E0C  D7EF               	goto	i2l1014
 10756  001E0E  0E00               	movlw	0
 10757  001E10  6E20               	movwf	i2___flmul@aexp,c
 10758  001E12  AE1F               	btfss	i2___flmul@grs+3,7,c
 10759  001E14  D016               	goto	i2l1020
 10760  001E16  0EFF               	movlw	255
 10761  001E18  141C               	andwf	i2___flmul@grs,w,c
 10762  001E1A  6E17               	movwf	??i2___flmul& (0+255),c
 10763  001E1C  0EFF               	movlw	255
 10764  001E1E  141D               	andwf	i2___flmul@grs+1,w,c
 10765  001E20  6E18               	movwf	(??i2___flmul+1)& (0+255),c
 10766  001E22  0EFF               	movlw	255
 10767  001E24  141E               	andwf	i2___flmul@grs+2,w,c
 10768  001E26  6E19               	movwf	(??i2___flmul+2)& (0+255),c
 10769  001E28  0E7F               	movlw	127
 10770  001E2A  141F               	andwf	i2___flmul@grs+3,w,c
 10771  001E2C  6E1A               	movwf	(??i2___flmul+3)& (0+255),c
 10772  001E2E  5017               	movf	??i2___flmul,w,c
 10773  001E30  1018               	iorwf	??i2___flmul+1,w,c
 10774  001E32  1019               	iorwf	??i2___flmul+2,w,c
 10775  001E34  101A               	iorwf	??i2___flmul+3,w,c
 10776  001E36  A4D8               	btfss	status,2,c
 10777  001E38  D002               	goto	i2u555_40
 10778  001E3A  A022               	btfss	i2___flmul@prod,0,c
 10779  001E3C  D002               	goto	i2l1020
 10780  001E3E                     i2u555_40:
 10781  001E3E  0E01               	movlw	1
 10782  001E40  6E20               	movwf	i2___flmul@aexp,c
 10783  001E42                     i2l1020:
 10784  001E42  5020               	movf	i2___flmul@aexp,w,c
 10785  001E44  B4D8               	btfsc	status,2,c
 10786  001E46  D01F               	goto	i2l1022
 10787  001E48  0E01               	movlw	1
 10788  001E4A  2622               	addwf	i2___flmul@prod,f,c
 10789  001E4C  0E00               	movlw	0
 10790  001E4E  2223               	addwfc	i2___flmul@prod+1,f,c
 10791  001E50  2224               	addwfc	i2___flmul@prod+2,f,c
 10792  001E52  2225               	addwfc	i2___flmul@prod+3,f,c
 10793  001E54  A025               	btfss	i2___flmul@prod+3,0,c
 10794  001E56  D017               	goto	i2l1022
 10795  001E58  C022  F017         	movff	i2___flmul@prod,??i2___flmul
 10796  001E5C  C023  F018         	movff	i2___flmul@prod+1,??i2___flmul+1
 10797  001E60  C024  F019         	movff	i2___flmul@prod+2,??i2___flmul+2
 10798  001E64  C025  F01A         	movff	i2___flmul@prod+3,??i2___flmul+3
 10799  001E68  341A               	rlcf	??i2___flmul+3,w,c
 10800  001E6A  321A               	rrcf	??i2___flmul+3,f,c
 10801  001E6C  3219               	rrcf	??i2___flmul+2,f,c
 10802  001E6E  3218               	rrcf	??i2___flmul+1,f,c
 10803  001E70  3217               	rrcf	??i2___flmul,f,c
 10804  001E72  C017  F022         	movff	??i2___flmul,i2___flmul@prod
 10805  001E76  C018  F023         	movff	??i2___flmul+1,i2___flmul@prod+1
 10806  001E7A  C019  F024         	movff	??i2___flmul+2,i2___flmul@prod+2
 10807  001E7E  C01A  F025         	movff	??i2___flmul+3,i2___flmul@prod+3
 10808  001E82  4A26               	infsnz	i2___flmul@temp,f,c
 10809  001E84  2A27               	incf	i2___flmul@temp+1,f,c
 10810  001E86                     i2l1022:
 10811  001E86  BE27               	btfsc	i2___flmul@temp+1,7,c
 10812  001E88  D00D               	goto	i2l1023
 10813  001E8A  5027               	movf	i2___flmul@temp+1,w,c
 10814  001E8C  E103               	bnz	i2u558_40
 10815  001E8E  2826               	incf	i2___flmul@temp,w,c
 10816  001E90  A0D8               	btfss	status,0,c
 10817  001E92  D008               	goto	i2l1023
 10818  001E94                     i2u558_40:
 10819  001E94  0E00               	movlw	0
 10820  001E96  6E22               	movwf	i2___flmul@prod,c
 10821  001E98  0E00               	movlw	0
 10822  001E9A  6E23               	movwf	i2___flmul@prod+1,c
 10823  001E9C  0E80               	movlw	128
 10824  001E9E  6E24               	movwf	i2___flmul@prod+2,c
 10825  001EA0  0E7F               	movlw	127
 10826  001EA2  D020               	goto	L26
 10827  001EA4                     i2l1023:
 10828  001EA4  BE27               	btfsc	i2___flmul@temp+1,7,c
 10829  001EA6  D005               	goto	i2u559_40
 10830  001EA8  5027               	movf	i2___flmul@temp+1,w,c
 10831  001EAA  E10E               	bnz	i2l1025
 10832  001EAC  0426               	decf	i2___flmul@temp,w,c
 10833  001EAE  B0D8               	btfsc	status,0,c
 10834  001EB0  D00B               	goto	i2l1025
 10835  001EB2                     i2u559_40:
 10836  001EB2  0E00               	movlw	0
 10837  001EB4  6E22               	movwf	i2___flmul@prod,c
 10838  001EB6  0E00               	movlw	0
 10839  001EB8  6E23               	movwf	i2___flmul@prod+1,c
 10840  001EBA  0E00               	movlw	0
 10841  001EBC  6E24               	movwf	i2___flmul@prod+2,c
 10842  001EBE  0E00               	movlw	0
 10843  001EC0  6E25               	movwf	i2___flmul@prod+3,c
 10844  001EC2  0E00               	movlw	0
 10845  001EC4  6E1B               	movwf	i2___flmul@sign,c
 10846  001EC6  D00F               	goto	i2l1026
 10847  001EC8                     i2l1025:
 10848  001EC8  C026  F021         	movff	i2___flmul@temp,i2___flmul@bexp
 10849  001ECC  0EFF               	movlw	255
 10850  001ECE  1622               	andwf	i2___flmul@prod,f,c
 10851  001ED0  0EFF               	movlw	255
 10852  001ED2  1623               	andwf	i2___flmul@prod+1,f,c
 10853  001ED4  0E7F               	movlw	127
 10854  001ED6  1624               	andwf	i2___flmul@prod+2,f,c
 10855  001ED8  0E00               	movlw	0
 10856  001EDA  1625               	andwf	i2___flmul@prod+3,f,c
 10857  001EDC  B021               	btfsc	i2___flmul@bexp,0,c
 10858  001EDE  8E24               	bsf	i2___flmul@prod+2,7,c
 10859  001EE0  90D8               	bcf	status,0,c
 10860  001EE2  3021               	rrcf	i2___flmul@bexp,w,c
 10861  001EE4                     L26:
 10862  001EE4  6E25               	movwf	i2___flmul@prod+3,c
 10863  001EE6                     i2l1026:
 10864  001EE6  501B               	movf	i2___flmul@sign,w,c
 10865  001EE8  1225               	iorwf	i2___flmul@prod+3,f,c
 10866  001EEA  C022  F00F         	movff	i2___flmul@prod,?i2___flmul
 10867  001EEE  C023  F010         	movff	i2___flmul@prod+1,?i2___flmul+1
 10868  001EF2  C024  F011         	movff	i2___flmul@prod+2,?i2___flmul+2
 10869  001EF6  C025  F012         	movff	i2___flmul@prod+3,?i2___flmul+3
 10870  001EFA  0012               	return	
 10871  001EFC                     __end_ofi2___flmul:
 10872                           	opt stack 0
 10873                           pclatu	equ	0xFFB
 10874                           pclath	equ	0xFFA
 10875                           tblptru	equ	0xFF8
 10876                           tblptrh	equ	0xFF7
 10877                           tblptrl	equ	0xFF6
 10878                           tablat	equ	0xFF5
 10879                           prodh	equ	0xFF4
 10880                           prodl	equ	0xFF3
 10881                           intcon	equ	0xFF2
 10882                           indf0	equ	0xFEF
 10883                           postinc0	equ	0xFEE
 10884                           fsr0h	equ	0xFEA
 10885                           fsr0l	equ	0xFE9
 10886                           wreg	equ	0xFE8
 10887                           indf1	equ	0xFE7
 10888                           fsr1h	equ	0xFE2
 10889                           fsr1l	equ	0xFE1
 10890                           bsr	equ	0xFE0
 10891                           indf2	equ	0xFDF
 10892                           postinc2	equ	0xFDE
 10893                           fsr2h	equ	0xFDA
 10894                           fsr2l	equ	0xFD9
 10895                           status	equ	0xFD8
 10896                           
 10897 ;; *************** function ___flneg *****************
 10898 ;; Defined at:
 10899 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\flneg.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;  f1              4   39[COMRAM] unsigned char 
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;		None
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  4   39[COMRAM] unsigned char 
 10906 ;; Registers used:
 10907 ;;		wreg, status,2, status,0
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/0
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10913 ;;      Params:         4       0       0       0       0       0       0
 10914 ;;      Locals:         0       0       0       0       0       0       0
 10915 ;;      Temps:          0       0       0       0       0       0       0
 10916 ;;      Totals:         4       0       0       0       0       0       0
 10917 ;;Total ram usage:        4 bytes
 10918 ;; Hardware stack levels used:    1
 10919 ;; This function calls:
 10920 ;;		Nothing
 10921 ;; This function is called by:
 10922 ;;		_Hi_ISR
 10923 ;;		_TMR1_Init
 10924 ;; This function uses a non-reentrant model
 10925 ;;
 10926                           
 10927                           	psect	text46
 10928  0032D0                     __ptext46:
 10929                           	opt stack 0
 10930  0032D0                     ___flneg:
 10931                           	opt stack 21
 10932                           
 10933                           ;incstack = 0
 10934  0032D0  5028               	movf	___flneg@f1,w,c
 10935  0032D2  1029               	iorwf	___flneg@f1+1,w,c
 10936  0032D4  102A               	iorwf	___flneg@f1+2,w,c
 10937  0032D6  102B               	iorwf	___flneg@f1+3,w,c
 10938  0032D8  B4D8               	btfsc	status,2,c
 10939  0032DA  D008               	goto	i2l684
 10940  0032DC  0E00               	movlw	0
 10941  0032DE  1A28               	xorwf	___flneg@f1,f,c
 10942  0032E0  0E00               	movlw	0
 10943  0032E2  1A29               	xorwf	___flneg@f1+1,f,c
 10944  0032E4  0E00               	movlw	0
 10945  0032E6  1A2A               	xorwf	___flneg@f1+2,f,c
 10946  0032E8  0E80               	movlw	128
 10947  0032EA  1A2B               	xorwf	___flneg@f1+3,f,c
 10948  0032EC                     i2l684:
 10949  0032EC  C028  F028         	movff	___flneg@f1,?___flneg
 10950  0032F0  C029  F029         	movff	___flneg@f1+1,?___flneg+1
 10951  0032F4  C02A  F02A         	movff	___flneg@f1+2,?___flneg+2
 10952  0032F8  C02B  F02B         	movff	___flneg@f1+3,?___flneg+3
 10953  0032FC  0012               	return	
 10954  0032FE                     __end_of___flneg:
 10955                           	opt stack 0
 10956                           pclatu	equ	0xFFB
 10957                           pclath	equ	0xFFA
 10958                           tblptru	equ	0xFF8
 10959                           tblptrh	equ	0xFF7
 10960                           tblptrl	equ	0xFF6
 10961                           tablat	equ	0xFF5
 10962                           prodh	equ	0xFF4
 10963                           prodl	equ	0xFF3
 10964                           intcon	equ	0xFF2
 10965                           indf0	equ	0xFEF
 10966                           postinc0	equ	0xFEE
 10967                           fsr0h	equ	0xFEA
 10968                           fsr0l	equ	0xFE9
 10969                           wreg	equ	0xFE8
 10970                           indf1	equ	0xFE7
 10971                           fsr1h	equ	0xFE2
 10972                           fsr1l	equ	0xFE1
 10973                           bsr	equ	0xFE0
 10974                           indf2	equ	0xFDF
 10975                           postinc2	equ	0xFDE
 10976                           fsr2h	equ	0xFDA
 10977                           fsr2l	equ	0xFD9
 10978                           status	equ	0xFD8
 10979                           
 10980 ;; *************** function ___fladd *****************
 10981 ;; Defined at:
 10982 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\sprcadd.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;  b               4   43[COMRAM] unsigned char 
 10985 ;;  a               4   47[COMRAM] unsigned char 
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;  grs             1   62[COMRAM] unsigned char 
 10988 ;;  bexp            1   61[COMRAM] unsigned char 
 10989 ;;  aexp            1   60[COMRAM] unsigned char 
 10990 ;;  signs           1   59[COMRAM] unsigned char 
 10991 ;; Return value:  Size  Location     Type
 10992 ;;                  4   43[COMRAM] unsigned char 
 10993 ;; Registers used:
 10994 ;;		wreg, status,2, status,0
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11000 ;;      Params:         8       0       0       0       0       0       0
 11001 ;;      Locals:         4       0       0       0       0       0       0
 11002 ;;      Temps:          8       0       0       0       0       0       0
 11003 ;;      Totals:        20       0       0       0       0       0       0
 11004 ;;Total ram usage:       20 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; This function calls:
 11007 ;;		Nothing
 11008 ;; This function is called by:
 11009 ;;		_Hi_ISR
 11010 ;;		_TMR1_Init
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           	psect	text47
 11015  001EFC                     __ptext47:
 11016                           	opt stack 0
 11017  001EFC                     ___fladd:
 11018                           	opt stack 21
 11019                           
 11020                           ;incstack = 0
 11021  001EFC  502F               	movf	___fladd@b+3,w,c
 11022  001EFE  0B80               	andlw	128
 11023  001F00  6E3C               	movwf	___fladd@signs,c
 11024  001F02  502F               	movf	___fladd@b+3,w,c
 11025  001F04  242F               	addwf	___fladd@b+3,w,c
 11026  001F06  6E3E               	movwf	___fladd@bexp,c
 11027  001F08  BE2E               	btfsc	___fladd@b+2,7,c
 11028  001F0A  803E               	bsf	___fladd@bexp,0,c
 11029  001F0C  503E               	movf	___fladd@bexp,w,c
 11030  001F0E  B4D8               	btfsc	status,2,c
 11031  001F10  D00D               	goto	i2l911
 11032  001F12  283E               	incf	___fladd@bexp,w,c
 11033  001F14  A4D8               	btfss	status,2,c
 11034  001F16  D008               	goto	i2l912
 11035  001F18  0E00               	movlw	0
 11036  001F1A  6E2C               	movwf	___fladd@b,c
 11037  001F1C  0E00               	movlw	0
 11038  001F1E  6E2D               	movwf	___fladd@b+1,c
 11039  001F20  0E00               	movlw	0
 11040  001F22  6E2E               	movwf	___fladd@b+2,c
 11041  001F24  0E00               	movlw	0
 11042  001F26  6E2F               	movwf	___fladd@b+3,c
 11043  001F28                     i2l912:
 11044  001F28  8E2E               	bsf	___fladd@b+2,7,c
 11045  001F2A  D006               	goto	L27
 11046  001F2C                     i2l911:
 11047  001F2C  0E00               	movlw	0
 11048  001F2E  6E2C               	movwf	___fladd@b,c
 11049  001F30  0E00               	movlw	0
 11050  001F32  6E2D               	movwf	___fladd@b+1,c
 11051  001F34  0E00               	movlw	0
 11052  001F36  6E2E               	movwf	___fladd@b+2,c
 11053  001F38                     L27:
 11054  001F38  0E00               	movlw	0
 11055  001F3A  6E2F               	movwf	___fladd@b+3,c
 11056  001F3C  5033               	movf	___fladd@a+3,w,c
 11057  001F3E  0B80               	andlw	128
 11058  001F40  6E3D               	movwf	___fladd@aexp,c
 11059  001F42  503C               	movf	___fladd@signs,w,c
 11060  001F44  183D               	xorwf	___fladd@aexp,w,c
 11061  001F46  A4D8               	btfss	status,2,c
 11062  001F48  8C3C               	bsf	___fladd@signs,6,c
 11063  001F4A  5033               	movf	___fladd@a+3,w,c
 11064  001F4C  2433               	addwf	___fladd@a+3,w,c
 11065  001F4E  6E3D               	movwf	___fladd@aexp,c
 11066  001F50  BE32               	btfsc	___fladd@a+2,7,c
 11067  001F52  803D               	bsf	___fladd@aexp,0,c
 11068  001F54  503D               	movf	___fladd@aexp,w,c
 11069  001F56  B4D8               	btfsc	status,2,c
 11070  001F58  D00D               	goto	i2l916
 11071  001F5A  283D               	incf	___fladd@aexp,w,c
 11072  001F5C  A4D8               	btfss	status,2,c
 11073  001F5E  D008               	goto	i2l917
 11074  001F60  0E00               	movlw	0
 11075  001F62  6E30               	movwf	___fladd@a,c
 11076  001F64  0E00               	movlw	0
 11077  001F66  6E31               	movwf	___fladd@a+1,c
 11078  001F68  0E00               	movlw	0
 11079  001F6A  6E32               	movwf	___fladd@a+2,c
 11080  001F6C  0E00               	movlw	0
 11081  001F6E  6E33               	movwf	___fladd@a+3,c
 11082  001F70                     i2l917:
 11083  001F70  8E32               	bsf	___fladd@a+2,7,c
 11084  001F72  D006               	goto	L28
 11085  001F74                     i2l916:
 11086  001F74  0E00               	movlw	0
 11087  001F76  6E30               	movwf	___fladd@a,c
 11088  001F78  0E00               	movlw	0
 11089  001F7A  6E31               	movwf	___fladd@a+1,c
 11090  001F7C  0E00               	movlw	0
 11091  001F7E  6E32               	movwf	___fladd@a+2,c
 11092  001F80                     L28:
 11093  001F80  0E00               	movlw	0
 11094  001F82  6E33               	movwf	___fladd@a+3,c
 11095  001F84  503E               	movf	___fladd@bexp,w,c
 11096  001F86  5C3D               	subwf	___fladd@aexp,w,c
 11097  001F88  B0D8               	btfsc	status,0,c
 11098  001F8A  D022               	goto	i2l919
 11099  001F8C  AC3C               	btfss	___fladd@signs,6,c
 11100  001F8E  D002               	goto	i2l920
 11101  001F90  0E80               	movlw	128
 11102  001F92  1A3C               	xorwf	___fladd@signs,f,c
 11103  001F94                     i2l920:
 11104  001F94  C03E  F03F         	movff	___fladd@bexp,___fladd@grs
 11105  001F98  C03D  F03E         	movff	___fladd@aexp,___fladd@bexp
 11106  001F9C  C03F  F03D         	movff	___fladd@grs,___fladd@aexp
 11107  001FA0  C02C  F03F         	movff	___fladd@b,___fladd@grs
 11108  001FA4  C030  F02C         	movff	___fladd@a,___fladd@b
 11109  001FA8  C03F  F030         	movff	___fladd@grs,___fladd@a
 11110  001FAC  C02D  F03F         	movff	___fladd@b+1,___fladd@grs
 11111  001FB0  C031  F02D         	movff	___fladd@a+1,___fladd@b+1
 11112  001FB4  C03F  F031         	movff	___fladd@grs,___fladd@a+1
 11113  001FB8  C02E  F03F         	movff	___fladd@b+2,___fladd@grs
 11114  001FBC  C032  F02E         	movff	___fladd@a+2,___fladd@b+2
 11115  001FC0  C03F  F032         	movff	___fladd@grs,___fladd@a+2
 11116  001FC4  C02F  F03F         	movff	___fladd@b+3,___fladd@grs
 11117  001FC8  C033  F02F         	movff	___fladd@a+3,___fladd@b+3
 11118  001FCC  C03F  F033         	movff	___fladd@grs,___fladd@a+3
 11119  001FD0                     i2l919:
 11120  001FD0  0E00               	movlw	0
 11121  001FD2  6E3F               	movwf	___fladd@grs,c
 11122  001FD4  503E               	movf	___fladd@bexp,w,c
 11123  001FD6  6E34               	movwf	??___fladd& (0+255),c
 11124  001FD8  6A35               	clrf	(??___fladd+1)& (0+255),c
 11125  001FDA  1E34               	comf	??___fladd,f,c
 11126  001FDC  1E35               	comf	??___fladd+1,f,c
 11127  001FDE  4A34               	infsnz	??___fladd,f,c
 11128  001FE0  2A35               	incf	??___fladd+1,f,c
 11129  001FE2  503D               	movf	___fladd@aexp,w,c
 11130  001FE4  6E36               	movwf	(??___fladd+2)& (0+255),c
 11131  001FE6  6A37               	clrf	(??___fladd+3)& (0+255),c
 11132  001FE8  5034               	movf	??___fladd,w,c
 11133  001FEA  2636               	addwf	??___fladd+2,f,c
 11134  001FEC  5035               	movf	??___fladd+1,w,c
 11135  001FEE  2237               	addwfc	??___fladd+3,f,c
 11136  001FF0  BE37               	btfsc	??___fladd+3,7,c
 11137  001FF2  D02C               	goto	i2l923
 11138  001FF4  5037               	movf	??___fladd+3,w,c
 11139  001FF6  E104               	bnz	i2u504_40
 11140  001FF8  0E1A               	movlw	26
 11141  001FFA  5C36               	subwf	??___fladd+2,w,c
 11142  001FFC  A0D8               	btfss	status,0,c
 11143  001FFE  D026               	goto	i2l923
 11144  002000                     i2u504_40:
 11145  002000  502C               	movf	___fladd@b,w,c
 11146  002002  102D               	iorwf	___fladd@b+1,w,c
 11147  002004  102E               	iorwf	___fladd@b+2,w,c
 11148  002006  102F               	iorwf	___fladd@b+3,w,c
 11149  002008  B4D8               	btfsc	status,2,c
 11150  00200A  D002               	goto	i2u505_40
 11151  00200C  0E01               	movlw	1
 11152  00200E  D001               	goto	i2u506_40
 11153  002010                     i2u505_40:
 11154  002010  0E00               	movlw	0
 11155  002012                     i2u506_40:
 11156  002012  6E3F               	movwf	___fladd@grs,c
 11157  002014  0E00               	movlw	0
 11158  002016  6E2C               	movwf	___fladd@b,c
 11159  002018  0E00               	movlw	0
 11160  00201A  6E2D               	movwf	___fladd@b+1,c
 11161  00201C  0E00               	movlw	0
 11162  00201E  6E2E               	movwf	___fladd@b+2,c
 11163  002020  0E00               	movlw	0
 11164  002022  6E2F               	movwf	___fladd@b+3,c
 11165  002024  C03D  F03E         	movff	___fladd@aexp,___fladd@bexp
 11166  002028  D015               	goto	i2u509_40
 11167  00202A                     i2l924:
 11168  00202A  A03F               	btfss	___fladd@grs,0,c
 11169  00202C  D005               	goto	i2l925
 11170  00202E  90D8               	bcf	status,0,c
 11171  002030  303F               	rrcf	___fladd@grs,w,c
 11172  002032  0901               	iorlw	1
 11173  002034  6E3F               	movwf	___fladd@grs,c
 11174  002036  D002               	goto	i2l926
 11175  002038                     i2l925:
 11176  002038  90D8               	bcf	status,0,c
 11177  00203A  323F               	rrcf	___fladd@grs,f,c
 11178  00203C                     i2l926:
 11179  00203C  B02C               	btfsc	___fladd@b,0,c
 11180  00203E  8E3F               	bsf	___fladd@grs,7,c
 11181  002040  342F               	rlcf	___fladd@b+3,w,c
 11182  002042  322F               	rrcf	___fladd@b+3,f,c
 11183  002044  322E               	rrcf	___fladd@b+2,f,c
 11184  002046  322D               	rrcf	___fladd@b+1,f,c
 11185  002048  322C               	rrcf	___fladd@b,f,c
 11186  00204A  2A3E               	incf	___fladd@bexp,f,c
 11187  00204C                     i2l923:
 11188  00204C  503D               	movf	___fladd@aexp,w,c
 11189  00204E  5C3E               	subwf	___fladd@bexp,w,c
 11190  002050  A0D8               	btfss	status,0,c
 11191  002052  D7EB               	goto	i2l924
 11192  002054                     i2u509_40:
 11193  002054  BC3C               	btfsc	___fladd@signs,6,c
 11194  002056  D029               	goto	i2l929
 11195  002058  503E               	movf	___fladd@bexp,w,c
 11196  00205A  A4D8               	btfss	status,2,c
 11197  00205C  D009               	goto	i2l930
 11198  00205E  0E00               	movlw	0
 11199  002060  6E2C               	movwf	?___fladd,c
 11200  002062  0E00               	movlw	0
 11201  002064  6E2D               	movwf	?___fladd+1,c
 11202  002066  0E00               	movlw	0
 11203  002068  6E2E               	movwf	?___fladd+2,c
 11204  00206A  0E00               	movlw	0
 11205  00206C  6E2F               	movwf	?___fladd+3,c
 11206  00206E  0012               	return	
 11207  002070                     i2l930:
 11208  002070  5030               	movf	___fladd@a,w,c
 11209  002072  262C               	addwf	___fladd@b,f,c
 11210  002074  5031               	movf	___fladd@a+1,w,c
 11211  002076  222D               	addwfc	___fladd@b+1,f,c
 11212  002078  5032               	movf	___fladd@a+2,w,c
 11213  00207A  222E               	addwfc	___fladd@b+2,f,c
 11214  00207C  5033               	movf	___fladd@a+3,w,c
 11215  00207E  222F               	addwfc	___fladd@b+3,f,c
 11216  002080  A02F               	btfss	___fladd@b+3,0,c
 11217  002082  D083               	goto	i2u522_40
 11218  002084  A03F               	btfss	___fladd@grs,0,c
 11219  002086  D006               	goto	i2l933
 11220  002088  90D8               	bcf	status,0,c
 11221  00208A  323F               	rrcf	___fladd@grs,f,c
 11222  00208C  503F               	movf	___fladd@grs,w,c
 11223  00208E  0901               	iorlw	1
 11224  002090  6E3F               	movwf	___fladd@grs,c
 11225  002092  D002               	goto	i2l934
 11226  002094                     i2l933:
 11227  002094  90D8               	bcf	status,0,c
 11228  002096  323F               	rrcf	___fladd@grs,f,c
 11229  002098                     i2l934:
 11230  002098  B02C               	btfsc	___fladd@b,0,c
 11231  00209A  8E3F               	bsf	___fladd@grs,7,c
 11232  00209C  342F               	rlcf	___fladd@b+3,w,c
 11233  00209E  322F               	rrcf	___fladd@b+3,f,c
 11234  0020A0  322E               	rrcf	___fladd@b+2,f,c
 11235  0020A2  322D               	rrcf	___fladd@b+1,f,c
 11236  0020A4  322C               	rrcf	___fladd@b,f,c
 11237  0020A6  2A3E               	incf	___fladd@bexp,f,c
 11238  0020A8  D070               	goto	i2u522_40
 11239  0020AA                     i2l929:
 11240  0020AA  5030               	movf	___fladd@a,w,c
 11241  0020AC  5C2C               	subwf	___fladd@b,w,c
 11242  0020AE  5031               	movf	___fladd@a+1,w,c
 11243  0020B0  582D               	subwfb	___fladd@b+1,w,c
 11244  0020B2  5032               	movf	___fladd@a+2,w,c
 11245  0020B4  582E               	subwfb	___fladd@b+2,w,c
 11246  0020B6  502F               	movf	___fladd@b+3,w,c
 11247  0020B8  0A80               	xorlw	128
 11248  0020BA  6E34               	movwf	??___fladd& (0+255),c
 11249  0020BC  5033               	movf	___fladd@a+3,w,c
 11250  0020BE  0A80               	xorlw	128
 11251  0020C0  5834               	subwfb	??___fladd& (0+255),w,c
 11252  0020C2  B0D8               	btfsc	status,0,c
 11253  0020C4  D036               	goto	i2l937
 11254  0020C6  C02C  F034         	movff	___fladd@b,??___fladd
 11255  0020CA  C02D  F035         	movff	___fladd@b+1,??___fladd+1
 11256  0020CE  C02E  F036         	movff	___fladd@b+2,??___fladd+2
 11257  0020D2  C02F  F037         	movff	___fladd@b+3,??___fladd+3
 11258  0020D6  1E34               	comf	??___fladd,f,c
 11259  0020D8  1E35               	comf	??___fladd+1,f,c
 11260  0020DA  1E36               	comf	??___fladd+2,f,c
 11261  0020DC  1E37               	comf	??___fladd+3,f,c
 11262  0020DE  2A34               	incf	??___fladd,f,c
 11263  0020E0  0E00               	movlw	0
 11264  0020E2  2235               	addwfc	??___fladd+1,f,c
 11265  0020E4  2236               	addwfc	??___fladd+2,f,c
 11266  0020E6  2237               	addwfc	??___fladd+3,f,c
 11267  0020E8  5030               	movf	___fladd@a,w,c
 11268  0020EA  2434               	addwf	??___fladd,w,c
 11269  0020EC  6E38               	movwf	(??___fladd+4)& (0+255),c
 11270  0020EE  5031               	movf	___fladd@a+1,w,c
 11271  0020F0  2035               	addwfc	??___fladd+1,w,c
 11272  0020F2  6E39               	movwf	(??___fladd+5)& (0+255),c
 11273  0020F4  5032               	movf	___fladd@a+2,w,c
 11274  0020F6  2036               	addwfc	??___fladd+2,w,c
 11275  0020F8  6E3A               	movwf	(??___fladd+6)& (0+255),c
 11276  0020FA  5033               	movf	___fladd@a+3,w,c
 11277  0020FC  2037               	addwfc	??___fladd+3,w,c
 11278  0020FE  6E3B               	movwf	(??___fladd+7)& (0+255),c
 11279  002100  0EFF               	movlw	255
 11280  002102  2438               	addwf	??___fladd+4,w,c
 11281  002104  6E2C               	movwf	___fladd@b,c
 11282  002106  0EFF               	movlw	255
 11283  002108  2039               	addwfc	??___fladd+5,w,c
 11284  00210A  6E2D               	movwf	___fladd@b+1,c
 11285  00210C  0EFF               	movlw	255
 11286  00210E  203A               	addwfc	??___fladd+6,w,c
 11287  002110  6E2E               	movwf	___fladd@b+2,c
 11288  002112  0EFF               	movlw	255
 11289  002114  203B               	addwfc	??___fladd+7,w,c
 11290  002116  6E2F               	movwf	___fladd@b+3,c
 11291  002118  0E80               	movlw	128
 11292  00211A  1A3C               	xorwf	___fladd@signs,f,c
 11293  00211C  6C3F               	negf	___fladd@grs,c
 11294  00211E  503F               	movf	___fladd@grs,w,c
 11295  002120  A4D8               	btfss	status,2,c
 11296  002122  D00F               	goto	i2l939
 11297  002124  0E01               	movlw	1
 11298  002126  262C               	addwf	___fladd@b,f,c
 11299  002128  0E00               	movlw	0
 11300  00212A  222D               	addwfc	___fladd@b+1,f,c
 11301  00212C  222E               	addwfc	___fladd@b+2,f,c
 11302  00212E  222F               	addwfc	___fladd@b+3,f,c
 11303  002130  D008               	goto	i2l939
 11304  002132                     i2l937:
 11305  002132  5030               	movf	___fladd@a,w,c
 11306  002134  5E2C               	subwf	___fladd@b,f,c
 11307  002136  5031               	movf	___fladd@a+1,w,c
 11308  002138  5A2D               	subwfb	___fladd@b+1,f,c
 11309  00213A  5032               	movf	___fladd@a+2,w,c
 11310  00213C  5A2E               	subwfb	___fladd@b+2,f,c
 11311  00213E  5033               	movf	___fladd@a+3,w,c
 11312  002140  5A2F               	subwfb	___fladd@b+3,f,c
 11313  002142                     i2l939:
 11314  002142  502C               	movf	___fladd@b,w,c
 11315  002144  102D               	iorwf	___fladd@b+1,w,c
 11316  002146  102E               	iorwf	___fladd@b+2,w,c
 11317  002148  102F               	iorwf	___fladd@b+3,w,c
 11318  00214A  A4D8               	btfss	status,2,c
 11319  00214C  D01C               	goto	i2l946
 11320  00214E  503F               	movf	___fladd@grs,w,c
 11321  002150  A4D8               	btfss	status,2,c
 11322  002152  D019               	goto	i2l946
 11323  002154  0E00               	movlw	0
 11324  002156  6E2C               	movwf	?___fladd,c
 11325  002158  0E00               	movlw	0
 11326  00215A  6E2D               	movwf	?___fladd+1,c
 11327  00215C  0E00               	movlw	0
 11328  00215E  6E2E               	movwf	?___fladd+2,c
 11329  002160  0E00               	movlw	0
 11330  002162  6E2F               	movwf	?___fladd+3,c
 11331  002164  0012               	return	
 11332  002166  90D8               	bcf	status,0,c
 11333  002168  362C               	rlcf	___fladd@b,f,c
 11334  00216A  362D               	rlcf	___fladd@b+1,f,c
 11335  00216C  362E               	rlcf	___fladd@b+2,f,c
 11336  00216E  362F               	rlcf	___fladd@b+3,f,c
 11337  002170  BE3F               	btfsc	___fladd@grs,7,c
 11338  002172  802C               	bsf	___fladd@b,0,c
 11339  002174  A03F               	btfss	___fladd@grs,0,c
 11340  002176  D002               	goto	i2l944
 11341  002178  80D8               	bsf	status,0,c
 11342  00217A  D001               	goto	L29
 11343  00217C                     i2l944:
 11344  00217C  90D8               	bcf	status,0,c
 11345  00217E                     L29:
 11346  00217E  363F               	rlcf	___fladd@grs,f,c
 11347  002180  503E               	movf	___fladd@bexp,w,c
 11348  002182  A4D8               	btfss	status,2,c
 11349  002184  063E               	decf	___fladd@bexp,f,c
 11350  002186                     i2l946:
 11351  002186  AE2E               	btfss	___fladd@b+2,7,c
 11352  002188  D7EE               	goto	i2l942
 11353  00218A                     i2u522_40:
 11354  00218A  0E00               	movlw	0
 11355  00218C  6E3D               	movwf	___fladd@aexp,c
 11356  00218E  AE3F               	btfss	___fladd@grs,7,c
 11357  002190  D00A               	goto	i2l951
 11358  002192  C03F  F034         	movff	___fladd@grs,??___fladd
 11359  002196  0E7F               	movlw	127
 11360  002198  1634               	andwf	??___fladd,f,c
 11361  00219A  A4D8               	btfss	status,2,c
 11362  00219C  D002               	goto	i2u525_40
 11363  00219E  A02C               	btfss	___fladd@b,0,c
 11364  0021A0  D002               	goto	i2l951
 11365  0021A2                     i2u525_40:
 11366  0021A2  0E01               	movlw	1
 11367  0021A4  6E3D               	movwf	___fladd@aexp,c
 11368  0021A6                     i2l951:
 11369  0021A6  503D               	movf	___fladd@aexp,w,c
 11370  0021A8  B4D8               	btfsc	status,2,c
 11371  0021AA  D020               	goto	i2l954
 11372  0021AC  0E01               	movlw	1
 11373  0021AE  262C               	addwf	___fladd@b,f,c
 11374  0021B0  0E00               	movlw	0
 11375  0021B2  222D               	addwfc	___fladd@b+1,f,c
 11376  0021B4  222E               	addwfc	___fladd@b+2,f,c
 11377  0021B6  222F               	addwfc	___fladd@b+3,f,c
 11378  0021B8  A02F               	btfss	___fladd@b+3,0,c
 11379  0021BA  D018               	goto	i2l954
 11380  0021BC  C02C  F034         	movff	___fladd@b,??___fladd
 11381  0021C0  C02D  F035         	movff	___fladd@b+1,??___fladd+1
 11382  0021C4  C02E  F036         	movff	___fladd@b+2,??___fladd+2
 11383  0021C8  C02F  F037         	movff	___fladd@b+3,??___fladd+3
 11384  0021CC  3437               	rlcf	??___fladd+3,w,c
 11385  0021CE  3237               	rrcf	??___fladd+3,f,c
 11386  0021D0  3236               	rrcf	??___fladd+2,f,c
 11387  0021D2  3235               	rrcf	??___fladd+1,f,c
 11388  0021D4  3234               	rrcf	??___fladd,f,c
 11389  0021D6  C034  F02C         	movff	??___fladd,___fladd@b
 11390  0021DA  C035  F02D         	movff	??___fladd+1,___fladd@b+1
 11391  0021DE  C036  F02E         	movff	??___fladd+2,___fladd@b+2
 11392  0021E2  C037  F02F         	movff	??___fladd+3,___fladd@b+3
 11393  0021E6  283E               	incf	___fladd@bexp,w,c
 11394  0021E8  A4D8               	btfss	status,2,c
 11395  0021EA  2A3E               	incf	___fladd@bexp,f,c
 11396  0021EC                     i2l954:
 11397  0021EC  283E               	incf	___fladd@bexp,w,c
 11398  0021EE  B4D8               	btfsc	status,2,c
 11399  0021F0  D003               	goto	i2u530_40
 11400  0021F2  503E               	movf	___fladd@bexp,w,c
 11401  0021F4  A4D8               	btfss	status,2,c
 11402  0021F6  D00D               	goto	i2l958
 11403  0021F8                     i2u530_40:
 11404  0021F8  0E00               	movlw	0
 11405  0021FA  6E2C               	movwf	___fladd@b,c
 11406  0021FC  0E00               	movlw	0
 11407  0021FE  6E2D               	movwf	___fladd@b+1,c
 11408  002200  0E00               	movlw	0
 11409  002202  6E2E               	movwf	___fladd@b+2,c
 11410  002204  0E00               	movlw	0
 11411  002206  6E2F               	movwf	___fladd@b+3,c
 11412  002208  503E               	movf	___fladd@bexp,w,c
 11413  00220A  A4D8               	btfss	status,2,c
 11414  00220C  D002               	goto	i2l958
 11415  00220E  0E00               	movlw	0
 11416  002210  6E3C               	movwf	___fladd@signs,c
 11417  002212                     i2l958:
 11418  002212  A03E               	btfss	___fladd@bexp,0,c
 11419  002214  D002               	goto	i2l959
 11420  002216  8E2E               	bsf	___fladd@b+2,7,c
 11421  002218  D001               	goto	i2l960
 11422  00221A                     i2l959:
 11423  00221A  9E2E               	bcf	___fladd@b+2,7,c
 11424  00221C                     i2l960:
 11425  00221C  90D8               	bcf	status,0,c
 11426  00221E  303E               	rrcf	___fladd@bexp,w,c
 11427  002220  6E2F               	movwf	___fladd@b+3,c
 11428  002222  BE3C               	btfsc	___fladd@signs,7,c
 11429  002224  8E2F               	bsf	___fladd@b+3,7,c
 11430  002226  C02C  F02C         	movff	___fladd@b,?___fladd
 11431  00222A  C02D  F02D         	movff	___fladd@b+1,?___fladd+1
 11432  00222E  C02E  F02E         	movff	___fladd@b+2,?___fladd+2
 11433  002232  C02F  F02F         	movff	___fladd@b+3,?___fladd+3
 11434  002236  0012               	return	
 11435  002238                     __end_of___fladd:
 11436                           	opt stack 0
 11437                           pclatu	equ	0xFFB
 11438                           pclath	equ	0xFFA
 11439                           tblptru	equ	0xFF8
 11440                           tblptrh	equ	0xFF7
 11441                           tblptrl	equ	0xFF6
 11442                           tablat	equ	0xFF5
 11443                           prodh	equ	0xFF4
 11444                           prodl	equ	0xFF3
 11445                           intcon	equ	0xFF2
 11446                           indf0	equ	0xFEF
 11447                           postinc0	equ	0xFEE
 11448                           fsr0h	equ	0xFEA
 11449                           fsr0l	equ	0xFE9
 11450                           wreg	equ	0xFE8
 11451                           indf1	equ	0xFE7
 11452                           fsr1h	equ	0xFE2
 11453                           fsr1l	equ	0xFE1
 11454                           bsr	equ	0xFE0
 11455                           indf2	equ	0xFDF
 11456                           postinc2	equ	0xFDE
 11457                           fsr2h	equ	0xFDA
 11458                           fsr2l	equ	0xFD9
 11459                           status	equ	0xFD8
 11460                           
 11461 ;; *************** function _PWM1_Duty *****************
 11462 ;; Defined at:
 11463 ;;		line 89 in file "main.c"
 11464 ;; Parameters:    Size  Location     Type
 11465 ;;  duty            2    0[COMRAM] unsigned int 
 11466 ;; Auto vars:     Size  Location     Type
 11467 ;;		None
 11468 ;; Return value:  Size  Location     Type
 11469 ;;                  1    wreg      void 
 11470 ;; Registers used:
 11471 ;;		wreg, status,2, status,0
 11472 ;; Tracked objects:
 11473 ;;		On entry : 0/0
 11474 ;;		On exit  : 0/0
 11475 ;;		Unchanged: 0/0
 11476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11477 ;;      Params:         2       0       0       0       0       0       0
 11478 ;;      Locals:         0       0       0       0       0       0       0
 11479 ;;      Temps:          2       0       0       0       0       0       0
 11480 ;;      Totals:         4       0       0       0       0       0       0
 11481 ;;Total ram usage:        4 bytes
 11482 ;; Hardware stack levels used:    1
 11483 ;; This function calls:
 11484 ;;		Nothing
 11485 ;; This function is called by:
 11486 ;;		_Hi_ISR
 11487 ;; This function uses a non-reentrant model
 11488 ;;
 11489                           
 11490                           	psect	text48
 11491  003124                     __ptext48:
 11492                           	opt stack 0
 11493  003124                     _PWM1_Duty:
 11494                           	opt stack 21
 11495                           
 11496                           ;main.c: 92: CCPR1L = duty >> 2;
 11497                           
 11498                           ;incstack = 0
 11499  003124  C001  F003         	movff	PWM1_Duty@duty,??_PWM1_Duty
 11500  003128  C002  F004         	movff	PWM1_Duty@duty+1,??_PWM1_Duty+1
 11501  00312C  90D8               	bcf	status,0,c
 11502  00312E  3204               	rrcf	??_PWM1_Duty+1,f,c
 11503  003130  3203               	rrcf	??_PWM1_Duty,f,c
 11504  003132  90D8               	bcf	status,0,c
 11505  003134  3204               	rrcf	??_PWM1_Duty+1,f,c
 11506  003136  3203               	rrcf	??_PWM1_Duty,f,c
 11507  003138  5003               	movf	??_PWM1_Duty,w,c
 11508  00313A  6EBE               	movwf	4030,c	;volatile
 11509                           
 11510                           ;main.c: 93: CCP1CONbits.DC1B1 = (duty >> 1) & 1;
 11511  00313C  90D8               	bcf	status,0,c
 11512  00313E  3002               	rrcf	PWM1_Duty@duty+1,w,c
 11513  003140  6E04               	movwf	(??_PWM1_Duty+1)& (0+255),c
 11514  003142  3001               	rrcf	PWM1_Duty@duty,w,c
 11515  003144  6E03               	movwf	??_PWM1_Duty& (0+255),c
 11516  003146  0E01               	movlw	1
 11517  003148  1603               	andwf	??_PWM1_Duty,f,c
 11518  00314A  3A03               	swapf	??_PWM1_Duty,f,c
 11519  00314C  4603               	rlncf	??_PWM1_Duty,f,c
 11520  00314E  50BD               	movf	4029,w,c	;volatile
 11521  003150  1803               	xorwf	??_PWM1_Duty,w,c
 11522  003152  0BDF               	andlw	-33
 11523  003154  1803               	xorwf	??_PWM1_Duty,w,c
 11524  003156  6EBD               	movwf	4029,c	;volatile
 11525                           
 11526                           ;main.c: 94: CCP1CONbits.DC1B0 = duty & 1;
 11527  003158  C001  F003         	movff	PWM1_Duty@duty,??_PWM1_Duty
 11528  00315C  0E01               	movlw	1
 11529  00315E  1603               	andwf	??_PWM1_Duty,f,c
 11530  003160  3A03               	swapf	??_PWM1_Duty,f,c
 11531  003162  50BD               	movf	4029,w,c	;volatile
 11532  003164  1803               	xorwf	??_PWM1_Duty,w,c
 11533  003166  0BEF               	andlw	-17
 11534  003168  1803               	xorwf	??_PWM1_Duty,w,c
 11535  00316A  6EBD               	movwf	4029,c	;volatile
 11536  00316C  0012               	return		;funcret
 11537  00316E                     __end_of_PWM1_Duty:
 11538                           	opt stack 0
 11539                           pclatu	equ	0xFFB
 11540                           pclath	equ	0xFFA
 11541                           tblptru	equ	0xFF8
 11542                           tblptrh	equ	0xFF7
 11543                           tblptrl	equ	0xFF6
 11544                           tablat	equ	0xFF5
 11545                           prodh	equ	0xFF4
 11546                           prodl	equ	0xFF3
 11547                           intcon	equ	0xFF2
 11548                           indf0	equ	0xFEF
 11549                           postinc0	equ	0xFEE
 11550                           fsr0h	equ	0xFEA
 11551                           fsr0l	equ	0xFE9
 11552                           wreg	equ	0xFE8
 11553                           indf1	equ	0xFE7
 11554                           fsr1h	equ	0xFE2
 11555                           fsr1l	equ	0xFE1
 11556                           bsr	equ	0xFE0
 11557                           indf2	equ	0xFDF
 11558                           postinc2	equ	0xFDE
 11559                           fsr2h	equ	0xFDA
 11560                           fsr2l	equ	0xFD9
 11561                           status	equ	0xFD8
 11562                           
 11563 ;; *************** function _ADC_Read *****************
 11564 ;; Defined at:
 11565 ;;		line 13 in file "setting_hardaware/adc.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;  channel         2    0[COMRAM] int 
 11568 ;; Auto vars:     Size  Location     Type
 11569 ;;  digital         2    4[COMRAM] int 
 11570 ;; Return value:  Size  Location     Type
 11571 ;;                  2    0[COMRAM] int 
 11572 ;; Registers used:
 11573 ;;		wreg, status,2, status,0
 11574 ;; Tracked objects:
 11575 ;;		On entry : 0/0
 11576 ;;		On exit  : 0/0
 11577 ;;		Unchanged: 0/0
 11578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11579 ;;      Params:         2       0       0       0       0       0       0
 11580 ;;      Locals:         2       0       0       0       0       0       0
 11581 ;;      Temps:          2       0       0       0       0       0       0
 11582 ;;      Totals:         6       0       0       0       0       0       0
 11583 ;;Total ram usage:        6 bytes
 11584 ;; Hardware stack levels used:    1
 11585 ;; This function calls:
 11586 ;;		Nothing
 11587 ;; This function is called by:
 11588 ;;		_Hi_ISR
 11589 ;;		_TMR1_Init
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           
 11593                           	psect	text49
 11594  0032A0                     __ptext49:
 11595                           	opt stack 0
 11596  0032A0                     _ADC_Read:
 11597                           	opt stack 21
 11598                           
 11599                           ;adc.c: 15: int digital;
 11600                           ;adc.c: 17: ADCON0bits.CHS = 0 ;
 11601                           
 11602                           ;incstack = 0
 11603  0032A0  94C2               	bcf	4034,2,c	;volatile
 11604  0032A2  96C2               	bcf	4034,3,c	;volatile
 11605  0032A4  98C2               	bcf	4034,4,c	;volatile
 11606  0032A6  9AC2               	bcf	4034,5,c	;volatile
 11607                           
 11608                           ;adc.c: 18: ADCON0bits.GO = 1;
 11609  0032A8  82C2               	bsf	4034,1,c	;volatile
 11610                           
 11611                           ;adc.c: 19: ADCON0bits.ADON = 1;
 11612  0032AA  80C2               	bsf	4034,0,c	;volatile
 11613  0032AC  B2C2               	btfsc	4034,1,c	;volatile
 11614  0032AE  D7FE               	goto	i2l122
 11615                           
 11616                           ;adc.c: 23: digital = (ADRESH*256) | (ADRESL);
 11617  0032B0  50C3               	movf	4035,w,c	;volatile
 11618  0032B2  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
 11619  0032B6  6A04               	clrf	(??_ADC_Read+1)& (0+255),c
 11620  0032B8  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
 11621  0032BC  6A03               	clrf	??_ADC_Read,c
 11622  0032BE  1003               	iorwf	??_ADC_Read,w,c
 11623  0032C0  6E05               	movwf	ADC_Read@digital,c
 11624  0032C2  5004               	movf	??_ADC_Read+1,w,c
 11625  0032C4  6E06               	movwf	ADC_Read@digital+1,c
 11626                           
 11627                           ;adc.c: 24: return(digital);
 11628  0032C6  C005  F001         	movff	ADC_Read@digital,?_ADC_Read
 11629  0032CA  C006  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
 11630  0032CE  0012               	return	
 11631  0032D0                     __end_of_ADC_Read:
 11632                           	opt stack 0
 11633                           pclatu	equ	0xFFB
 11634                           pclath	equ	0xFFA
 11635                           tblptru	equ	0xFF8
 11636                           tblptrh	equ	0xFF7
 11637                           tblptrl	equ	0xFF6
 11638                           tablat	equ	0xFF5
 11639                           prodh	equ	0xFF4
 11640                           prodl	equ	0xFF3
 11641                           intcon	equ	0xFF2
 11642                           indf0	equ	0xFEF
 11643                           postinc0	equ	0xFEE
 11644                           fsr0h	equ	0xFEA
 11645                           fsr0l	equ	0xFE9
 11646                           wreg	equ	0xFE8
 11647                           indf1	equ	0xFE7
 11648                           fsr1h	equ	0xFE2
 11649                           fsr1l	equ	0xFE1
 11650                           bsr	equ	0xFE0
 11651                           indf2	equ	0xFDF
 11652                           postinc2	equ	0xFDE
 11653                           fsr2h	equ	0xFDA
 11654                           fsr2l	equ	0xFD9
 11655                           status	equ	0xFD8
 11656                           pclatu	equ	0xFFB
 11657                           pclath	equ	0xFFA
 11658                           tblptru	equ	0xFF8
 11659                           tblptrh	equ	0xFF7
 11660                           tblptrl	equ	0xFF6
 11661                           tablat	equ	0xFF5
 11662                           prodh	equ	0xFF4
 11663                           prodl	equ	0xFF3
 11664                           intcon	equ	0xFF2
 11665                           indf0	equ	0xFEF
 11666                           postinc0	equ	0xFEE
 11667                           fsr0h	equ	0xFEA
 11668                           fsr0l	equ	0xFE9
 11669                           wreg	equ	0xFE8
 11670                           indf1	equ	0xFE7
 11671                           fsr1h	equ	0xFE2
 11672                           fsr1l	equ	0xFE1
 11673                           bsr	equ	0xFE0
 11674                           indf2	equ	0xFDF
 11675                           postinc2	equ	0xFDE
 11676                           fsr2h	equ	0xFDA
 11677                           fsr2l	equ	0xFD9
 11678                           status	equ	0xFD8
 11679                           
 11680                           	psect	rparam
 11681  0000                     pclatu	equ	0xFFB
 11682                           pclath	equ	0xFFA
 11683                           tblptru	equ	0xFF8
 11684                           tblptrh	equ	0xFF7
 11685                           tblptrl	equ	0xFF6
 11686                           tablat	equ	0xFF5
 11687                           prodh	equ	0xFF4
 11688                           prodl	equ	0xFF3
 11689                           intcon	equ	0xFF2
 11690                           indf0	equ	0xFEF
 11691                           postinc0	equ	0xFEE
 11692                           fsr0h	equ	0xFEA
 11693                           fsr0l	equ	0xFE9
 11694                           wreg	equ	0xFE8
 11695                           indf1	equ	0xFE7
 11696                           fsr1h	equ	0xFE2
 11697                           fsr1l	equ	0xFE1
 11698                           bsr	equ	0xFE0
 11699                           indf2	equ	0xFDF
 11700                           postinc2	equ	0xFDE
 11701                           fsr2h	equ	0xFDA
 11702                           fsr2l	equ	0xFD9
 11703                           status	equ	0xFD8
 11704                           
 11705                           	psect	temp
 11706  000079                     btemp:
 11707                           	opt stack 0
 11708  000079                     	ds	1
 11709  0000                     int$flags	set	btemp
 11710  0000                     wtemp6	set	btemp+1
 11711                           pclatu	equ	0xFFB
 11712                           pclath	equ	0xFFA
 11713                           tblptru	equ	0xFF8
 11714                           tblptrh	equ	0xFF7
 11715                           tblptrl	equ	0xFF6
 11716                           tablat	equ	0xFF5
 11717                           prodh	equ	0xFF4
 11718                           prodl	equ	0xFF3
 11719                           intcon	equ	0xFF2
 11720                           indf0	equ	0xFEF
 11721                           postinc0	equ	0xFEE
 11722                           fsr0h	equ	0xFEA
 11723                           fsr0l	equ	0xFE9
 11724                           wreg	equ	0xFE8
 11725                           indf1	equ	0xFE7
 11726                           fsr1h	equ	0xFE2
 11727                           fsr1l	equ	0xFE1
 11728                           bsr	equ	0xFE0
 11729                           indf2	equ	0xFDF
 11730                           postinc2	equ	0xFDE
 11731                           fsr2h	equ	0xFDA
 11732                           fsr2l	equ	0xFD9
 11733                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     91     120
    BANK0           128     83     101
    BANK1           256     41      51
    BANK2           256    220     236
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_9(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), STR_3(CODE[2]), 
		 -> STR_1(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 50
		 -> Music@str4(BANK2[50]), Music@str3(BANK2[50]), Music@str2(BANK2[50]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), str(BANK1[10]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_8(CODE[2]), STR_6(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[2]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_9(CODE[2]), Music@str4(BANK2[50]), STR_7(CODE[2]), Music@str3(BANK2[50]), 
		 -> STR_5(CODE[2]), Music@str2(BANK2[50]), STR_3(CODE[2]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), STR_1(CODE[2]), str(BANK1[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_8(CODE[2]), STR_6(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[2]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_8(CODE[2]), STR_6(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[2]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_9(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), STR_3(CODE[2]), 
		 -> STR_1(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 50
		 -> Music@str4(BANK2[50]), Music@str3(BANK2[50]), Music@str2(BANK2[50]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), str(BANK1[10]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_9(CODE[2]), Music@str4(BANK2[50]), STR_7(CODE[2]), Music@str3(BANK2[50]), 
		 -> STR_5(CODE[2]), Music@str2(BANK2[50]), STR_3(CODE[2]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), STR_1(CODE[2]), str(BANK1[10]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_9(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), STR_3(CODE[2]), 
		 -> STR_1(CODE[2]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Music@str4(BANK2[50]), Music@str3(BANK2[50]), Music@str2(BANK2[50]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), str(BANK1[10]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 50
		 -> Music@str4(BANK2[50]), Music@str3(BANK2[50]), Music@str2(BANK2[50]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), str(BANK1[10]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 50
		 -> STR_9(CODE[2]), Music@str4(BANK2[50]), STR_7(CODE[2]), Music@str3(BANK2[50]), 
		 -> STR_5(CODE[2]), Music@str2(BANK2[50]), STR_3(CODE[2]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), STR_1(CODE[2]), str(BANK1[10]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_8(CODE[2]), STR_6(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[2]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_9(CODE[2]), Music@str4(BANK2[50]), STR_7(CODE[2]), Music@str3(BANK2[50]), 
		 -> STR_5(CODE[2]), Music@str2(BANK2[50]), STR_3(CODE[2]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), STR_1(CODE[2]), str(BANK1[10]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 10
		 -> mystring(BANK0[10]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 50
		 -> Music@str4(BANK2[50]), Music@str3(BANK2[50]), Music@str2(BANK2[50]), Music@str1(BANK2[50]), 
		 -> str(BANK1[10]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Music@str4(BANK2[50]), Music@str3(BANK2[50]), Music@str2(BANK2[50]), Music@str1(BANK2[50]), 
		 -> str(BANK1[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Music@str4(BANK2[50]), Music@str3(BANK2[50]), Music@str2(BANK2[50]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), str(BANK1[10]), 

    Music@melody4	PTR unsigned char  size(2) Largest target is 50
		 -> Music@str4(BANK2[50]), Music@str3(BANK2[50]), Music@str2(BANK2[50]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), str(BANK1[10]), 

    Music@melody3	PTR unsigned char  size(2) Largest target is 50
		 -> Music@str4(BANK2[50]), Music@str3(BANK2[50]), Music@str2(BANK2[50]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), str(BANK1[10]), 

    Music@melody2	PTR unsigned char  size(2) Largest target is 50
		 -> Music@str4(BANK2[50]), Music@str3(BANK2[50]), Music@str2(BANK2[50]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), str(BANK1[10]), 

    Music@melody1	PTR unsigned char  size(2) Largest target is 50
		 -> Music@str4(BANK2[50]), Music@str3(BANK2[50]), Music@str2(BANK2[50]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), str(BANK1[10]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 50
		 -> STR_9(CODE[2]), Music@str4(BANK2[50]), STR_7(CODE[2]), Music@str3(BANK2[50]), 
		 -> STR_5(CODE[2]), Music@str2(BANK2[50]), STR_3(CODE[2]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), STR_1(CODE[2]), str(BANK1[10]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 50
		 -> Music@str4(BANK2[50]), Music@str3(BANK2[50]), Music@str2(BANK2[50]), Music@str1(BANK2[50]), 
		 -> str(BANK1[10]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 50
		 -> Music@str4(BANK2[50]), Music@str3(BANK2[50]), Music@str2(BANK2[50]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), str(BANK1[10]), 

    Music@number	PTR unsigned char  size(2) Largest target is 50
		 -> Music@str4(BANK2[50]), Music@str3(BANK2[50]), Music@str2(BANK2[50]), NULL(NULL[0]), 
		 -> Music@str1(BANK2[50]), str(BANK1[10]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 11
		 -> STR_26(CODE[11]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(BANK0[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    None.

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->i2___fltol
    i2___fltol->___fladd
    i2___flmul->i2___xxtofl
    ___flneg->i2___flmul
    ___fladd->___flneg

Critical Paths under _main in BANK0

    _UART_Write_Text->_UART_Write
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strncmp
    _strncmp->_strlen
    _strcpy->_GetString
    _delay_ms->___awdiv
    _MusicPWM1_Init->___aldiv
    _MusicPWM1_Duty->___flmul
    ___xxtofl->_MusicPWM_Max_Duty
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _MusicPWM_Max_Duty->___aldiv
    _atoi->___wmul

Critical Paths under _Lo_ISR in BANK0

    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Music
    _Music->_MusicPWM1_Duty
    _playTone->_MusicPWM1_Duty
    _MusicPWM1_Duty->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Music

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   47184
                        _ClearBuffer
                          _GetString
                              _Music
              _OSCILLATOR_Initialize
                    _PORT_Initialize
                  _SYSTEM_Initialize
                    _UART_Write_Text
                             _strcpy
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      6     4      2     188
                                             28 BANK0      6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                             27 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PORT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Music                                              224   224      0   38891
                                             40 BANK1      1     1      0
                                              0 BANK2    220   220      0
                        _ClearBuffer
                          _GetString
                     _MusicPWM1_Duty
                     _MusicPWM1_Init
                    _MusicPWM1_Start
                         _SetupClock
                            ___awdiv
                             ___wmul
                               _atoi
                           _delay_ms
                           _playTone
                             _strcpy
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               4     0      4    3139
                                             40 BANK0      4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               7     3      4     977
                                             33 BANK0      7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              7     3      4     977
                                             33 BANK0      7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               4     0      4    5557
                                             42 BANK0      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              9     3      6     462
                                             33 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     220
                                             27 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               6     2      4     664
                                             27 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4    2449
                                             29 BANK0      6     2      4
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (2) _playTone                                             0     0      0    9336
                     _MusicPWM1_Duty
                     _MusicPWM1_Init
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     574
                                             35 BANK0      2     0      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _MusicPWM1_Init                                       8     4      4    1047
                                             41 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) _MusicPWM1_Duty                                       4     2      2    7715
                                             36 BANK1      4     2      2
                  _MusicPWM_Max_Duty
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     801
                                             45 BANK0     14    10      4
                  _MusicPWM_Max_Duty (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     572
                                             26 BANK1     10     6      4
                  _MusicPWM_Max_Duty (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3174
                                             71 BANK0     12     4      8
                                             13 BANK1     13    13      0
                  _MusicPWM_Max_Duty (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1935
                                             59 BANK0     12     4      8
                                              0 BANK1     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _MusicPWM_Max_Duty                                    4     2      2     805
                                             41 BANK0      4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     805
                                             27 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2    1115
                                             33 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             27 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     592
                                             27 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1885
                                             27 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _SetupClock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MusicPWM1_Start                                      0     0      0       0
                  _MusicPWM1_Mode_On
 ---------------------------------------------------------------------------------
 (3) _MusicPWM1_Mode_On                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetString                                            2     0      2       0
                                             27 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      99
                                             27 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Lo_ISR                                              21    21      0     470
                                              6 BANK0     21    21      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (7) _MyusartRead                                          0     0      0     470
                            ___awmod
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (8) i1_UART_Write                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _Hi_ISR                                              18    18      0    5276
                                             73 COMRAM    18    18      0
                           _ADC_Read
                          _PWM1_Duty
                            ___fladd
                            ___flneg
                          i2___flmul
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (10) i2___xxtofl                                         14    10      4     348
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (10) i2___fltol                                          10     6      4     255
                                             63 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___flmul                                          25    17      8    1543
                                             14 COMRAM    25    17      8
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) ___flneg                                             4     0      4     197
                                             39 COMRAM     4     0      4
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            20    12      8    2540
                                             43 COMRAM    20    12      8
                            ___flneg (ARG)
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (10) _PWM1_Duty                                           4     2      2     218
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _ADC_Read                                            6     4      2     175
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _GetString
   _Music
     _ClearBuffer
     _GetString
     _MusicPWM1_Duty
       _MusicPWM_Max_Duty
         ___aldiv
       ___fldiv
         ___xxtofl (ARG)
           _MusicPWM_Max_Duty (ARG)
             ___aldiv
       ___flmul
         _MusicPWM_Max_Duty (ARG)
           ___aldiv
         ___fldiv (ARG)
           ___xxtofl (ARG)
             _MusicPWM_Max_Duty (ARG)
               ___aldiv
         ___xxtofl (ARG)
           _MusicPWM_Max_Duty (ARG)
             ___aldiv
       ___fltol
         _MusicPWM_Max_Duty (ARG)
           ___aldiv
         ___fldiv (ARG)
           ___xxtofl (ARG)
             _MusicPWM_Max_Duty (ARG)
               ___aldiv
         ___flmul (ARG)
           _MusicPWM_Max_Duty (ARG)
             ___aldiv
           ___fldiv (ARG)
             ___xxtofl (ARG)
               _MusicPWM_Max_Duty (ARG)
                 ___aldiv
           ___xxtofl (ARG)
             _MusicPWM_Max_Duty (ARG)
               ___aldiv
         ___xxtofl (ARG)
           _MusicPWM_Max_Duty (ARG)
             ___aldiv
       ___xxtofl
         _MusicPWM_Max_Duty (ARG)
           ___aldiv
     _MusicPWM1_Init
       ___aldiv
     _MusicPWM1_Start
       _MusicPWM1_Mode_On
     _SetupClock
     ___awdiv
     ___wmul
     _atoi
       ___wmul
       _isdigit
     _delay_ms
       ___awdiv (ARG)
     _playTone
       _MusicPWM1_Duty
         _MusicPWM_Max_Duty
           ___aldiv
         ___fldiv
           ___xxtofl (ARG)
             _MusicPWM_Max_Duty (ARG)
               ___aldiv
         ___flmul
           _MusicPWM_Max_Duty (ARG)
             ___aldiv
           ___fldiv (ARG)
             ___xxtofl (ARG)
               _MusicPWM_Max_Duty (ARG)
                 ___aldiv
           ___xxtofl (ARG)
             _MusicPWM_Max_Duty (ARG)
               ___aldiv
         ___fltol
           _MusicPWM_Max_Duty (ARG)
             ___aldiv
           ___fldiv (ARG)
             ___xxtofl (ARG)
               _MusicPWM_Max_Duty (ARG)
                 ___aldiv
           ___flmul (ARG)
             _MusicPWM_Max_Duty (ARG)
               ___aldiv
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 _MusicPWM_Max_Duty (ARG)
                   ___aldiv
             ___xxtofl (ARG)
               _MusicPWM_Max_Duty (ARG)
                 ___aldiv
           ___xxtofl (ARG)
             _MusicPWM_Max_Duty (ARG)
               ___aldiv
         ___xxtofl
           _MusicPWM_Max_Duty (ARG)
             ___aldiv
       _MusicPWM1_Init
         ___aldiv
       _delay_ms
         ___awdiv (ARG)
     _strcpy
       _GetString (ARG)
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _OSCILLATOR_Initialize
   _PORT_Initialize
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _UART_Initialize
   _UART_Write_Text
     _UART_Write
   _strcpy
     _GetString (ARG)
   _strstr
     _strchr
     _strlen
     _strncmp
       _strlen (ARG)

 _Lo_ISR (ROOT)
   _MyusartRead
     ___awmod
     i1_UART_Write

 _Hi_ISR (ROOT)
   _ADC_Read
   _PWM1_Duty
   ___fladd
     ___flneg (ARG)
       i2___flmul (ARG)
         i2___xxtofl (ARG)
     i2___flmul (ARG)
       i2___xxtofl (ARG)
   ___flneg
     i2___flmul (ARG)
       i2___xxtofl (ARG)
   i2___flmul
     i2___xxtofl (ARG)
   i2___fltol
     ___fladd (ARG)
       ___flneg (ARG)
         i2___flmul (ARG)
           i2___xxtofl (ARG)
       i2___flmul (ARG)
         i2___xxtofl (ARG)
     ___flneg (ARG)
       i2___flmul (ARG)
         i2___xxtofl (ARG)
     i2___flmul (ARG)
       i2___xxtofl (ARG)
   i2___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     DC      EC       9       92.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     29      33       7       19.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80     53      65       5       78.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5B      78       1       95.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FC      15        0.0%
DATA                 0      0     1FC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Jan 13 08:36:48 2019

                   ___fldiv@aexp 010C                     ___fldiv@bexp 010B  
                              _i 0073                                _v 02DC  
                   ___fldiv@sign 0100                               l71 3250  
                             l65 30B8                               l66 3096  
                   ___awdiv@sign 00A0                               bsr 000FE0  
            ___wmul@multiplicand 009D                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
        __end_of_CCP1_Initialize 340E                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                              l301 0874  
                            l311 092E                              l303 0898  
                            l400 1020                              l321 09D2  
                            l313 0952                              l305 08BE  
                            l402 103C                              l411 113E  
                            l403 1118                              l323 09F4  
                            l315 0972                              l307 08E2  
                            l420 1204                              l412 116E  
                            l340 0B8A                              l325 0A10  
                            l317 0992                              l309 0908  
                            l246 339E                              l430 12B8  
                            l422 1228                              l414 1196  
                            l350 0C44                              l342 0BAE  
                            l326 0AEC                              l247 338E  
                            l335 0B12                              l319 09B2  
                            l440 1356                              l432 12D8  
                            l424 124E                              l416 11BA  
                            l360 0CE8                              l352 0C68  
                            l344 0BD4                              l336 0B3E  
                            l280 069A                              l521 2B64  
                            l441 1432                              l522 2B58  
                            l274 2F64                              l434 12F8  
                            l426 1274                              l418 11DE  
                            l362 0D0A                              l354 0C88  
                            l346 0BF8                              l338 0B66  
                            l436 1318                              l428 1298  
                            l380 0EC4                              l364 0D26  
                            l356 0CA8                              l348 0C1E  
                            l292 07AE                              l284 06F6  
                            l525 2B98                              l373 0E28  
                            l365 0E02                              l526 2BA6  
                            l518 2B1E                              l710 281A  
                            l438 133A                              l390 0F7E  
                            l382 0EEA                              l374 0E54  
                            l358 0CC8                              l527 2BBC  
                            l519 2B36                              l632 29F2  
                            l392 0F9E                              l384 0F0E  
                            l376 0E7C                              l296 080A  
                            l288 0752                              l456 2DC6  
                            l633 29B4                              l449 1458  
                            l297 0828                              l457 2E06  
                            l626 2960                              l394 0FBE  
                            l386 0F34                              l378 0EA0  
                            l635 2A26                              l627 295A  
                            l715 284E                              l707 27BE  
                            l299 0850                              l652 2D8A  
                            l716 2842                              l396 0FDE  
                            l388 0F5A                              l653 2D94  
                            l645 2D3C                              l629 29A2  
                            l709 282A                              l654 2DA2  
                            l646 2D4C                              l718 286A  
                            l398 0FFE                              l807 3384  
                            l648 2D6A                              l649 2D62  
                            l971 18C6                              l980 1A02  
                            l972 18EC                              l981 19F6  
                            l973 18E6                              l982 1A48  
                            l975 1934                              l967 1872  
                            l992 1AD4                              l968 1898  
                            l985 1A88                              l977 1960  
                            l969 1892                              l994 1B1E  
                            l986 1A60                              l978 1A4A  
                            l995 1B46                              l987 1A76  
                            l979 19D0                              l996 1B76  
                            l997 1B84                              l998 1B88  
                   __CFG_CPB$OFF 000000                              _PR2 000FCB  
                   __CFG_CPD$OFF 000000                              _str 0129  
                   ___awmod@sign 0085                       i2___xxtofl 2568  
                            wreg 000FE8                      i2___flmul@a 0013  
                    i2___flmul@b 000F                     __CFG_IESO$ON 000000  
                   ___flmul@aexp 010E                     ___flmul@bexp 0113  
                   ___flmul@sign 010D                     ___flmul@temp 0118  
                   ___flmul@prod 0114                     __CFG_LVP$OFF 000000  
                   ___fltol@exp1 0123                     __CFG_WDT$OFF 000000  
                           l1001 148A                             l1002 14B0  
                           l1003 14AA                             l1020 1796  
                           l1004 14C2                             l1100 31C6  
                           l1013 1748                             l1005 14DE  
                           l1101 31C0                             l1022 17DE  
                           l1014 172A                             l1006 1504  
                           l1030 3284                             l1023 17FC  
                           l1007 14FE                             l1031 327A  
                           l1008 1516                             l1025 1820  
                           l1009 1538                             l1026 183E  
                           l1018 178C                             l1106 2AE4  
                           l1042 2CEA                             l1107 2A32  
                           l1043 2C86                             l1108 2ADA  
                           l1044 2CC2                             l1060 2C30  
                           l1117 2FF6                             l1061 2C72  
                           l1070 248A                             l1118 2FEE  
                           l1062 2C7A                             l1080 2524  
                           l1072 24D4                             l1081 2556  
                           l1073 24BC                             l1065 2456  
                           l1057 2BE0                             l1066 2466  
                           l1058 2BF2                             l1075 2506  
                           l1067 2484                             l1076 24FA  
                           l1092 304A                             l1069 2496  
                           l1085 2ED0                             l1093 3042  
                           l5010 1B76                             l3550 33EA  
                           l5306 2A32                             l5430 29EE  
                           l5344 3240                             l5354 3266  
                           l5806 0E38                             _ADFM 007E07  
                           l5926 114E                             l5686 0B22  
                           STR_1 0612                             STR_2 0612  
                           STR_3 0612                             STR_4 0612  
                           STR_5 0612                             STR_6 0612  
                           STR_7 0612                             STR_8 0612  
                           STR_9 0612                             _CREN 007D5C  
                           _LATB 000F8A                             _LATD 000F8C  
                           u6040 1ACE                             u6300 27DC  
                           u7100 0A8E                             u6070 1B2E  
                           u6080 1B56                             u6305 27D2  
                           u6170 1524                             u6260 17EC  
                           u6180 16D6                             u6340 2854  
                           u7300 0DA4                             u7140 0B22  
                           _RCIF 007CF5                             u6270 180A  
                           u7150 0B3C                             u6360 2EBE  
                           u6600 2AC8                             i1l81 0080  
                           u6185 16CA                             i1l82 007C  
                           u6515 2FA0                             u6460 2510  
                           u6380 2EFC                             u7500 10BA  
                           u7340 0E38                             u6525 2FB0  
                           u6630 302C                             u7350 0E52  
                           u6367 2EB4                             u6607 2ABE  
                           u5840 2B68                             u6570 2A52  
                           u6650 3080                             u6387 2EF2  
                           u7700 13D4                             u7540 114E  
                           u6670 3266                             u6590 2A8E  
                           u6830 2D14                             u7550 116A  
                           u6680 2F1E                             u6840 2D1A  
                           u6577 2A48                             u6595 2A88  
                           u7740 1468                             u6597 2A7E  
                           u6837 2D0A                             u6950 0826  
                           u6880 2D6E                             u7777 3398  
                           _TMR1 000FCE                     __CFG_WDTPS$1 000000  
                           _flag 0077                             _atoi 2958  
                           _main 2DAC                             fsr0h 000FEA  
                           fsr1h 000FE2                             indf0 000FEF  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0079                 __end_of_ADC_Read 32D0  
                           prodh 000FF4                             prodl 000FF3  
                           start 00D8                     i2___fltol@f1 0040  
                ___fldiv@new_exp 0105                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000          __size_of_MusicPWM1_Init 0066  
        __size_of_MusicPWM1_Duty 00E6          __end_of_UART_Write_Text 30D8  
               ?_UART_Initialize 0001   __size_of_OSCILLATOR_Initialize 0008  
  __end_of_OSCILLATOR_Initialize 3436                    ___fltol@sign1 0122  
                __end_of___aldiv 2BCE                            ?_atoi 00A1  
                __end_of___fladd 2238                            ?_main 0001  
                __end_of___fldiv 1BAC                  __end_of___awdiv 2DAC  
                __end_of___flneg 32FE                            STR_10 0610  
                          STR_11 060C                            STR_20 060E  
                          STR_12 060E                            STR_21 060E  
                          STR_13 060E                            STR_22 0610  
                          STR_14 0610                            STR_23 060C  
                          STR_15 060C                            STR_24 060E  
                          STR_16 060E                            STR_25 060E  
                          STR_17 060E                            STR_18 0610  
                          STR_26 0601                            STR_19 060C  
                          STR_27 060E                            STR_28 0612  
                __end_of___awmod 2E9E                  __end_of___flmul 1854  
                __end_of___fltol 287C                  ___awdiv@divisor 009D  
                          _IRCF0 007E9C                            _IRCF1 007E9D  
                          _IRCF2 007E9E                            i2l122 32AC  
                          i2l211 22F0                            i2l207 22BC  
                          i1l661 2E64                            i1l662 2E5C  
                          i1l665 2E7C                            i1l666 2E86  
                          i1l658 2E42                            i1l667 2E94  
                          i1l659 2E4E                            i2l710 28F6  
                          i2l715 292A                            i2l707 289A  
                          i2l716 291E                            i2l709 2906  
                          i2l718 2946                            i2l911 1F2C  
                          i2l920 1F94                            i2l912 1F28  
                          i2l930 2070                            i2l923 204C  
                          i2l924 202A                            i2l916 1F74  
                          i2l684 32EC                            i2l933 2094  
                          i2l925 2038                            i2l917 1F70  
                          i2l942 2166                            i2l934 2098  
                          i2l926 203C                            i2l951 21A6  
                          i2l919 1FD0                            i2l960 221C  
                          i2l944 217C                            i2l937 2132  
                          i2l929 20AA                            i2l954 21EC  
                          i2l946 2186                            i2l939 2142  
                ___awdiv@counter 009F                            i2l958 2212  
                          i2l959 221A                            _RCREG 000FAE  
                          _SPBRG 000FAF                            _TRISA 000F92  
                          _TXREG 000FAD                    __CFG_PWRT$OFF 000000  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                      ?_UART_Write 0001  
                          _Music 0616                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
             __size_of_PWM1_Duty 004A                   __CFG_EBTRB$OFF 000000  
                __end_of_isdigit 338C                            atoi@a 00A6  
                          _print 0061                            atoi@s 00A1  
                    _ClearBuffer 3236                            pclath 000FFA  
                          tablat 000FF5                            status 000FD8  
                          wtemp6 007A                    i2___flmul@grs 001C  
                __end_of_strcspn 308A                  __end_of_strncmp 2B00  
              ??_PORT_Initialize 009B               __size_ofi2___flmul 0350  
                 __CFG_PBADEN$ON 000000               __size_ofi2___fltol 00DC  
                __initialization 31F8                     __end_of_atoi 2A30  
                   __end_of_main 2E2C                _MusicPWM1_Mode_On 3436  
       __size_of_MusicPWM1_Start 000C               ?_MusicPWM1_Mode_On 0001  
                         ??_atoi 00A3                           ??_main 00D3  
               ?_CCP1_Initialize 0001                    __activetblptr 000002  
                    ?i2___xxtofl 0001              ??_MusicPWM1_Mode_On 009B  
             __size_of_GetString 000C                           ?_Music 0001  
                         _ADCON1 000FC1                           _CCP1M2 007DEA  
                         _CCP1M3 007DEB                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _CCPR1L 000FBE  
               ___awdiv@dividend 009B                           i2l1002 1BDC  
                         i2l1003 1BD8                           i2l1020 1E42  
                         i2l1004 1BEC                           i2l1013 1E0A  
                         i2l1022 1E86                           i2l1014 1DEC  
                         i2l1006 1C1C                           i2l1023 1EA4  
                         i2l1007 1C18                           i2l1008 1C2C  
                         i2l1025 1EC8                           i2l1009 1C4A  
                         i2l1026 1EE6                           i2l1070 25DA  
                         i2l1080 2674                           i2l1072 2624  
                         i2l1081 26A6                           i2l1073 260C  
                         i2l1065 25A6                           i2l1066 25B6  
                         i2l1075 2656                           i2l1067 25D4  
                         i2l1076 264A                           i2l1069 25E6  
                         i1l3758 33F8                           i2l4808 22F0  
                         _TMR2ON 007E52                 __end_of___xxtofl 2568  
                         _Hi_ISR 0008                 __end_of_delay_ms 33AA  
             MusicPWM1_Duty@duty 0124                           _Lo_ISR 0018  
           delay_ms@milliseconds 00A3        __end_of_MusicPWM1_Mode_On 343C  
                 __CFG_XINST$OFF 000000                       Music@tempo 02CA  
                         Music@i 02D4                __end_of_PWM1_Duty 316E  
            __size_of_UART_Write 000E                        ??___aldiv 00A3  
                      ??___fladd 0034                           ___wmul 32FE  
                      ??___fldiv 00C3                        ??___awdiv 009F  
                      ??___flneg 002C                   __CFG_STVREN$ON 000000  
                      ??___awmod 0084                        ??___flmul 00CF  
               ?_UART_Write_Text 009C                        ??___fltol 011E  
                ADC_Read@channel 0001                           _lenStr 00D7  
                     _SetupClock 33D4                  ADC_Read@digital 0005  
                         clear_0 31FE                           clear_1 320A  
                         clear_2 3216                           clear_3 3222  
               ___awdiv@quotient 00A1                  ___awmod@divisor 0082  
                ___awmod@counter 0084                           _strchr 2E9E  
                         _strcpy 3270                           _strlen 31B6  
                         _strtok 2BCE                           _strspn 2FE2  
                         _strstr 2C84                 __end_of_playTone 2F7C  
                      ??_isdigit 009B                __end_ofi2___flmul 1EFC  
              __end_ofi2___fltol 2958                        ?_ADC_Read 0001  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ??_strcspn 00A5                   i2___flmul@aexp 0020  
                 i2___flmul@bexp 0021                        ??_strncmp 00A7  
                 i2___flmul@sign 001B                   i2___flmul@temp 0026  
                 i2___flmul@prod 0022    __size_of_INTERRUPT_Initialize 0008  
                   ___xxtofl@arg 00B7                     ___xxtofl@exp 00B6  
              _SYSTEM_Initialize 33C2                     ___xxtofl@val 00AD  
                     __accesstop 0080          __end_of__initialization 3228  
                 i2___fltol@exp1 0049                       ___flneg@f1 0028  
             ?_SYSTEM_Initialize 0001                    ___rparam_used 000001  
                     ___fltol@f1 011A                __end_of_GetString 3426  
            __size_ofi2___xxtofl 0150                   _MusicPWM1_Init 2F7C  
                  ?i1_UART_Write 0001                   _MusicPWM1_Duty 26B8  
                 __pcstackCOMRAM 0001                    __end_of_Music 146C  
            ??_SYSTEM_Initialize 009B                ??_MusicPWM1_Start 009B  
                     ??_ADC_Read 0003                    ??_MyusartRead 0086  
                        ??_Music 0128        __end_of_SYSTEM_Initialize 33D4  
                     __pbssBANK0 00D3                       __pbssBANK1 0129  
                     __pbssBANK2 02DC                _MusicPWM_Max_Duty 30D8  
                        ?_Hi_ISR 0001           __end_of_MusicPWM1_Init 2FE2  
             ?_MusicPWM_Max_Duty 00A9           __end_of_MusicPWM1_Duty 279E  
                        ?_Lo_ISR 0001       __size_of_MusicPWM1_Mode_On 0006  
                 ??i1_UART_Write 0080                          ?___wmul 009B  
            ??_MusicPWM_Max_Duty 00AB                          _CCP1CON 000FBD  
                    ?_SetupClock 0001          __size_of_ADC_Initialize 0018  
                        ?_strchr 009B                          ?_strcpy 009D  
                        ?_strlen 009B                          _T2CKPS0 007E50  
                        _T2CKPS1 007E51                          ?_strtok 00A8  
                        ?_strspn 00A1                          ?_strstr 00AA  
                      ?___xxtofl 00AD                        ?_delay_ms 00A3  
                   ??_UART_Write 009B                  _PORT_Initialize 3348  
      __end_of_MusicPWM_Max_Duty 3124                     ?_ClearBuffer 0001  
                    Music@i_1373 02D8                      Music@i_1368 02D6  
                    Music@i_1378 02DA              __end_of_MyusartRead 31B6  
                __size_of_Hi_ISR 240C                  ?_MusicPWM1_Init 00A9  
                ?_MusicPWM1_Duty 0124                        ?_playTone 0001  
                __size_of_Lo_ISR 00C0                       _auto_print 0066  
                        __Hparam 0000                          __Lparam 0000  
                    Music@number 02C8                          ___aldiv 2B00  
                        ___fladd 1EFC                          ___fldiv 1854  
                        ___awdiv 2D26                          ___flneg 32D0  
                        ___awmod 2E2C                          ___flmul 146C  
                        ___fltol 279E                  __size_of___wmul 0028  
             __end_of_UART_Write 33F4                     __psmallconst 0600  
                        __pcinit 31F8                          __ramtop 0600  
                        _digital 0075                          __ptext0 2DAC  
                        __ptext1 308A                          __ptext2 33E6  
                        __ptext3 33C2                          __ptext4 3326  
                        __ptext5 3426                          __ptext6 3402  
                        __ptext7 33AA                          __ptext8 3348  
                        __ptext9 342E                          _average 006B  
                __size_of_strchr 0070                  __size_of_strcpy 0030  
                __size_of_strlen 0042                        _T1CONbits 000FCD  
                __size_of_strtok 00B6                  __size_of_strspn 0054  
                __size_of_strstr 00A2            _OSCILLATOR_Initialize 342E  
                      _T2CONbits 000FCA                          _isdigit 336A  
                   ??i2___xxtofl 0005                       ??___xxtofl 00B1  
               ___awmod@dividend 0080                 ___aldiv@dividend 009B  
       __size_of_UART_Initialize 0022                       ??_delay_ms 00A5  
     __size_of_SYSTEM_Initialize 0012                          _voltage 006F  
                        _strcspn 3036                          _strncmp 2A30  
                 __pintcode_body 2238             end_of_initialization 3228  
            __size_of_SetupClock 0012                    __Lmediumconst 0000  
                        int_func 2238                   i2___xxtofl@arg 000B  
                 i2___xxtofl@exp 000A                   i2___xxtofl@val 0001  
                     ??_playTone 00D3                        _RCSTAbits 000FAB  
             __end_ofi2___xxtofl 26B8                 ___aldiv@quotient 00A5  
                        postinc0 000FEE                          postinc2 000FDE  
                        strlen@s 009B                        _PWM1_Duty 3124  
                        strspn@i 00A6          __end_of_PORT_Initialize 336A  
                 UART_Write@data 009B                      ___fladd@grs 003F  
                  ___xxtofl@sign 00B5                        _TRISBbits 000F93  
                      _TRISCbits 000F94                        _TRISDbits 000F95  
                    _MyusartRead 316E             __end_ofi1_UART_Write 3402  
                    ___fldiv@grs 0107                      ___fldiv@rem 0101  
                i2___fltol@sign1 0048                __size_of_ADC_Read 0030  
       __size_of_CCP1_Initialize 000C                        i2___flmul 1BAC  
                      i2___fltol 287C       __size_of_MusicPWM_Max_Duty 004C  
                    ___flmul@grs 010F                      _CCP1CONbits 000FBD  
                      _TXSTAbits 000FAC                   __end_of_Hi_ISR 2414  
                 __end_of_Lo_ISR 00D8  MusicPWM1_Init@desired_frequency 00A9  
                _MusicPWM1_Start 340E     __end_of_INTERRUPT_Initialize 342E  
                      _GetString 341A                   __end_of___wmul 3326  
                    _BAUDCONbits 000FB8                       ?_PWM1_Duty 0001  
                 _ADC_Initialize 33AA           ?_OSCILLATOR_Initialize 0001  
                 __end_of_strchr 2F0E         __size_of_UART_Write_Text 004E  
                 __end_of_strcpy 32A0                   __end_of_strlen 31F8  
                 __end_of_strtok 2C84                   __end_of_strspn 3036  
                 __end_of_strstr 2D26              start_initialization 31F8  
                     ?i2___flmul 000F                       ?i2___fltol 0040  
                   ClearBuffer@i 009B                ??_UART_Initialize 009B  
           __size_of_ClearBuffer 003A                 __CFG_OSC$INTIO67 000000  
                       ??_Hi_ISR 004A                         ??_Lo_ISR 0086  
                      Music@str1 0200                        Music@str2 0232  
                      Music@str3 0264                        Music@str4 0296  
                       ??___wmul 009F           __end_of_ADC_Initialize 33C2  
                     ?_GetString 009B                     ??_SetupClock 009B  
               __CFG_LPT1OSC$OFF 000000                 ?_PORT_Initialize 0001  
                       ??_strchr 009F                         ??_strcpy 00A1  
                       ??_strlen 009D                         ??_strtok 00AC  
                       ??_strspn 00A5                         ??_strstr 00AE  
                      ___fladd@a 0030                        ___fladd@b 002C  
                      ___fldiv@a 00BF                        ___fldiv@b 00BB  
                      ___flmul@a 00CB                        ___flmul@b 00C7  
                    __pbssCOMRAM 005C                    __pcstackBANK0 0080  
                  __pcstackBANK1 0100                    __pcstackBANK2 0200  
              __size_of___xxtofl 0154                     _isdigit$1618 009C  
              __size_of_delay_ms 001E                 ??_MusicPWM1_Init 00AD  
               ??_MusicPWM1_Duty 0126               __end_of_SetupClock 33E6  
        __end_of_MusicPWM1_Start 341A                ??_CCP1_Initialize 009B  
                   _current_tone 00E3                __CFG_CCP2MX$PORTC 000000  
                      __pintcode 0008                __size_of_playTone 006E  
                       ?___aldiv 009B                         ?___fladd 002C  
                       ?___fldiv 00BB                         ?___awdiv 009B  
                       ?___flneg 0028                         ?___awmod 0080  
                       ?___flmul 00C7                         ?___fltol 011A  
                ?_ADC_Initialize 0001                      __pintcodelo 0018  
                    ??_PWM1_Duty 0003            __size_ofi1_UART_Write 000E  
                    __smallconst 0600                         ?_isdigit 0001  
                       _ADC_Read 32A0                   __size_of_Music 0E56  
                    ??i2___flmul 0017                      ??i2___fltol 0044  
                       ?_strcspn 00A1                         ?_strncmp 00A1  
              ??_UART_Write_Text 009E             _INTERRUPT_Initialize 3426  
                ___aldiv@divisor 009F                  ___aldiv@counter 00A3  
                 ___wmul@product 009F                         _LATBbits 000F8A  
                       _LATDbits 000F8C                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                         i1u405_20 2E68  
                       i2u504_40 2000                         i2u505_40 2010  
                       _PIR1bits 000F9E                         i2u530_40 21F8  
                       i2u522_40 218A                         i2u506_40 2012  
                  PWM1_Duty@duty 0001                         i2u540_40 2930  
                       i2u525_40 21A2                         i2u509_40 2054  
                       i2u550_40 1DAE                         i2u550_45 1DA4  
                       i2u536_40 28B8                         i2u536_45 28AE  
                       i2u555_40 1E3E                         i2u549_40 1C38  
                       i2u558_40 1E94                         i2u559_40 1EB2  
                       i2u567_40 2660                     i1_UART_Write 33F4  
                       _RCONbits 000FD0                      ??_GetString 009D  
                     _ADCON0bits 000FC2                       _ADCON2bits 000FC0  
              ___wmul@multiplier 009B                     ?_MyusartRead 0001  
          ?_INTERRUPT_Initialize 0001                 i1UART_Write@data 0080  
               ?_MusicPWM1_Start 0001                     Music@melody1 02CC  
                   Music@melody2 02D0                     Music@melody3 02CE  
                   Music@melody4 02D2                         __Hrparam 0000  
                       __Lrparam 0000               __CFG_BOREN$SBORDIS 000000  
        ??_OSCILLATOR_Initialize 009B                 __size_of___aldiv 00CE  
               __size_of___fladd 033C                 __size_of___fldiv 0358  
               __size_of___awdiv 0086                 __size_of___flneg 002E  
               __size_of___awmod 0072                 __size_of___flmul 03E8  
               __size_of___fltol 00DE                  _UART_Initialize 3326  
                       ___xxtofl 2414                 __size_of_isdigit 0022  
                       _delay_ms 338C                         __ptext10 0616  
                       __ptext11 2BCE                         __ptext20 338C  
                       __ptext12 2FE2                         __ptext21 2F7C  
                       __ptext13 3036                         __ptext30 336A  
                       __ptext22 26B8                         __ptext14 2C84  
                       __ptext31 32FE                         __ptext23 2414  
                       __ptext15 2A30                         __ptext40 33F4  
                       __ptext32 2D26                         __ptext24 279E  
                       __ptext16 31B6                         __ptext41 2E2C  
                       __ptext33 33D4                         __ptext25 146C  
                       __ptext17 2E9E                         __ptext34 340E  
                       __ptext26 1854                         __ptext18 3270  
                       __ptext43 2568                         __ptext35 3436  
                       __ptext27 30D8                         __ptext19 2F0E  
                       __ptext44 287C                         __ptext36 341A  
                       __ptext28 2B00                         __ptext45 1BAC  
                       __ptext37 3236                         __ptext29 2958  
                       __ptext46 32D0                         __ptext47 1EFC  
                       __ptext39 316E                         __ptext48 3124  
                       __ptext49 32A0                 __size_of_strcspn 0054  
               __size_of_strncmp 00D0                       strcpy@from 009F  
            UART_Write_Text@text 009C                    __size_of_atoi 00D8  
                  __size_of_main 0080                       strncmp@len 00A5  
                       _playTone 2F0E                         int$flags 0079  
                       atoi@sign 00A5                         _mystring 00D9  
                     _INTCONbits 000FF2                  _CCP1_Initialize 3402  
                       isdigit@c 009D           ??_INTERRUPT_Initialize 009B  
                  ??_ClearBuffer 009B                         intlevel1 0000  
                       intlevel2 0000                  i2___xxtofl@sign 0009  
                      strchr@chr 009D                        strchr@ptr 009B  
                      strcspn@s1 00A1                        strcspn@s2 00A3  
                      strncmp@s1 00A1                        strncmp@s2 00A3  
               ??_ADC_Initialize 009B                       _OSCCONbits 000FD3  
        __end_of_UART_Initialize 3348                    _average_print 005C  
                _UART_Write_Text 308A                         strcpy@cp 00A1  
                       strlen@cp 009F                         strcpy@to 009D  
                       strcspn@i 00A6                     ___aldiv@sign 00A4  
                     _UART_Write 33E6                         strtok@s1 00A8  
                       strtok@s2 00AA                         strspn@s1 00A1  
                       strspn@s2 00A3                         strtok@sp 00D3  
                       strstr@s1 00AA                         strstr@s2 00AC  
       __size_of_PORT_Initialize 0022                    ___fladd@signs 003C  
           __size_of_MyusartRead 0048                 UART_Write_Text@i 00A0  
                   ___fladd@aexp 003D                     ___fladd@bexp 003E  
            __end_of_ClearBuffer 3270            _current_tone_duration 00D5  
